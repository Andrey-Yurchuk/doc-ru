<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b1b039696eedcc82e9c1144eeecbfc0a8a1b3859 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="migration84.incompatible" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Изменения, которые ломают обратную совместимость</title>

 <simpara>
  Каждая новая <link linkend="migration84.new-functions">функция</link>,
  <link linkend="migration84.new-classes">класс, интерфейс, перечисление</link>
  или <link linkend="migration84.constants">константа</link>
  станет причиной ошибки <exceptionname>Error</exceptionname> о повторном объявлении,
  которую выбросит PHP, если встретит в коде объявление с тем же названием,
  хотя раздел не указывает это в явной форме.
 </simpara>

 <sect2 xml:id="migration84.incompatible.core">
  <title>Ядро PHP</title>

  <sect3 xml:id="migration84.incompatible.core.exit">
   <title>Изменение поведения языковой конструкции <function>exit</function></title>

   <simpara>
    Поведение языковой конструкции <function>exit</function> и её псевдонима <function>die</function>
    теперь больше похоже на функции:
    их разрешили передавать как значения с типом <type>callable</type>,
    на поведение функций теперь влияет директива <literal>strict_types</literal>
    управляющей конструкции &declare; и теперь они выполняют стандартные преобразования типов
    вместо приведения нецелочисленных значений к строке.
   </simpara>

   <simpara>
    Поэтому передача недопустимых типов в функции <function>exit</function>
    и <function>die</function> теперь выбрасывает ошибку
    <exceptionname>TypeError</exceptionname>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.core.recursion-comparison">
   <title>Рекурсия при сравнении</title>

   <simpara>
    Появление рекурсии при сравнении теперь выбрасывает
    ошибку <exceptionname>Error</exceptionname> вместо
    ошибки уровня <constant>E_ERROR</constant>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.core.readonly-indirect-modification">
   <title>Непрямая модификация доступных только для чтения свойств</title>

   <simpara>
    Непрямую модификацию доступных только для чтения свойств внутри магического метода
    <code>__clone()</code> запретили, например, присваивание по ссылке <code>$ref = &amp;$this->readonly</code>
    вызовет фатальную ошибку. Инициализацию доступных только для чтения свойств запретили раньше
    и упустили в реализации «повторной инициализации доступных только для чтения свойств
    при клонировании».
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.core.constant-type-change">
   <title>Изменение типа констант</title>

   <simpara>
    Константы <constant>PHP_DEBUG</constant> и <constant>PHP_ZTS</constant>
    теперь принадлежат логическому типу <type>bool</type>.
    Раньше константы принадлежали целочисленному типу <type>int</type>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.core.tempnam-length">
   <title>Длина имени временного файла</title>

   <simpara>
    Длину имён файлов, которые загрузили, и файлов, которые создали функцией
    <function>tempnam</function>, увеличили на 13 байтов.
    Общая длина по-прежнему зависит от платформы.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.core.e-strict">
   <title>Удаление уровня ошибки <constant>E_STRICT</constant></title>

   <simpara>
    Уровень ошибки <constant>E_STRICT</constant> удалили,
    поскольку движок PHP больше с ним не работает.
    Константа <constant>E_STRICT</constant> устарела.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.incompatible.typed-constants">
  <title>Типизация констант в классах модулей</title>

  <para>
   Следующие модули теперь объявляют тип для констант своих классах:
   <simplelist>
    <member><link linkend="book.datetime">Date</link></member>
    <member><link linkend="book.intl">Intl</link></member>
    <member><link linkend="book.pdo">PDO</link></member>
    <member><link linkend="book.reflection">Reflection</link></member>
    <member><link linkend="book.spl">SPL</link></member>
    <member><link linkend="book.sqlite3">Sqlite</link></member>
    <member><link linkend="book.xmlreader">XMLReader</link></member>
   </simplelist>
  </para>
 </sect2>

 <sect2 xml:id="migration84.incompatible.resource2object">
  <title>Миграция ресурсов в объекты</title>

  <simpara>
   Ряд ресурсов (&resource;) перенесли в объекты (&object;).
   Значения, которые возвращали функции-создатели ресурсов и которые
   проверяли функцией <function>is_resource</function>, потребуется заменить
   проверками значений возврата таких функций на принадлежность типу &false;,
   если только в описании функции не указали иное.
  </simpara>

  <sect3 xml:id="migration84.incompatible.resource2object.dba">
   <title>Модуль DBA</title>

   <simpara>
    Функции модуля <link linkend="book.dba">DBA</link> теперь принимают и возвращают объекты
    <classname>Dba\Connection</classname> вместо ресурсов (&resource;) <literal>dba_connection</literal>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.resource2object.odbc">
   <title>Драйвер ODBC</title>

   <simpara>
    Функции драйвера <link linkend="book.uodbc">ODBC</link> теперь принимают и возвращают объекты
    <classname>Odbc\Result</classname> вместо ресурсов (&resource;) <literal>odbc_result</literal>.
   </simpara>

   <simpara>
    Функции драйвера <link linkend="book.uodbc">ODBC</link> теперь принимают и возвращают объекты
    <classname>Odbc\Connection</classname> вместо ресурсов (&resource;) <literal>odbc_connection</literal>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.resource2object.soap">
   <title>SOAP</title>

   <simpara>
    Разработчики представили свойство <property>SoapClient::$httpurl</property>
    объектом <classname>Soap\Url</classname>, а не ресурсом (&resource;) <literal>soap_url</literal>.
    Проверки функцией <function>is_resource</function> наподобие
    <code>is_resource($client->httpurl)</code>) потребуется заменить проверками
    на &null; вроде <code>$client->httpurl !== null</code>.
   </simpara>
   <simpara>
    Разработчики представили свойство <property>SoapClient::$sdl</property>
    объектом <classname>Soap\Sdl</classname>, а не ресурсом (&resource;) <literal>soap_sdl</literal>.
    Проверки функции <function>is_resource</function> наподобие
    <code>is_resource($client->sdl)</code> потребуется заменить проверками
    на &null; вроде <code>$client->sdl !== null</code>.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.incompatible.new-warnings-exceptions">
  <title>Новые предупреждения и исключения</title>

  <simpara>
   Разработчики добавили новые предупреждения и исключения, которые срабатывают
   при ошибках программирования, — когда в аргументах передают
   недопустимые значения.
  </simpara>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.curl">
   <title>Модуль Curl</title>

   <simpara>
    Функция <function>curl_multi_select</function> теперь выбрасывает
    ошибку <exceptionname>ValueError</exceptionname>,
    если аргумент <parameter>timeout</parameter> меньше <literal>0</literal>
    или больше значения константы <constant>PHP_INT_MAX</constant>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.gd">
   <title>Модуль Gd</title>

   <para>
    Функции
    <simplelist type="inline">
     <member><function>imagejpeg</function></member>
     <member><function>imagewebp</function></member>
     <member><function>imagepng</function></member>
     <member><function>imageavif</function></member>
    </simplelist>
    теперь выбрасывают ошибку <exceptionname>ValueError</exceptionname>,
    если в параметр <parameter>quality</parameter> передали недопустимое значение.
   </para>

   <simpara>
    Функция <function>imageavif</function>
    теперь выбрасывает ошибку <exceptionname>ValueError</exceptionname>,
    если в параметр <parameter>speed</parameter> передали недопустимое значение.
   </simpara>

   <simpara>
    Функция <function>imagescale</function>
    теперь выбрасывает ошибку <exceptionname>ValueError</exceptionname>,
    если ширина <parameter>width</parameter> или высота <parameter>height</parameter>
    выходит за пределы допустимых значений: недополнено или переполнено.
   </simpara>

   <simpara>
    Функция <function>imagescale</function>
    теперь выбрасывают ошибку <exceptionname>ValueError</exceptionname>,
    если передали недопустимое значение в параметр <parameter>mode</parameter>.
   </simpara>

   <simpara>
    Функция <function>imagefilter</function> с фильтром <constant>IMG_FILTER_SCATTER</constant>
    теперь выбрасывают ошибку <exceptionname>ValueError</exceptionname>,
    если значение вычитания <parameter>sub</parameter> или добавления <parameter>plus</parameter>
    эффекта выходит за пределы допустимых значений: недополнено или переполнено.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.gettext">
   <title>Модуль Gettext</title>

   <para>
    Функции
    <simplelist type="inline">
     <member><function>bind_textdomain_codeset</function></member>
     <member><function>textdomain</function></member>
     <member><function>d<replaceable>*</replaceable>gettext</function></member>
    </simplelist>
    теперь выбрасывают ошибку <exceptionname>ValueError</exceptionname>,
    если в аргументе <parameter>domain</parameter> передали пустую строку.
   </para>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.intl">
   <title>Модуль Intl</title>

   <para>
    Функции <function>resourcebundle_get</function>, <methodname>ResourceBundle::get</methodname>
    и обращение к смещениям объекта <classname>ResourceBundle</classname> теперь выбрасывают исключение:
    <simplelist>
     <member>
      <exceptionname>TypeError</exceptionname> при недопустимых типах смещения
     </member>
     <member>
      <exceptionname>ValueError</exceptionname> при передаче пустой строки (&string;)
     </member>
     <member>
      <exceptionname>ValueError</exceptionname>, если целочисленный индекс
      не помещается в 32-битное целое число со знаком
     </member>
    </simplelist>
   </para>

   <simpara>
    Метод <methodname>IntlDateFormatter::__construct</methodname>
    теперь выбрасывает ошибку <exceptionname>ValueError</exceptionname>,
    если в параметр <parameter>locale</parameter> передали недопустимое значение.
   </simpara>

   <simpara>
    Метод <methodname>NumberFormatter::__construct</methodname>
    теперь выбрасывает ошибку <exceptionname>ValueError</exceptionname>,
    если в параметр <parameter>locale</parameter> передали недопустимое значение.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.mbstring">
   <title>Модуль MBString</title>

   <simpara>
    Теперь функции <function>mb_encode_numericentity</function>
    и <function>mb_decode_numericentity</function> проверяют,
    что значение параметра <parameter>map</parameter> состоит только из целых числел (&integer;),
    иначе выбрасывают ошибку <exceptionname>ValueError</exceptionname>.
   </simpara>

   <simpara>
    Теперь функция <function>mb_http_input</function>
    выбрасывает ошибку <exceptionname>ValueError</exceptionname> при каждом вызове,
    если в параметр <parameter>type</parameter> передали недопустимое значение.
   </simpara>

   <simpara>
    Теперь функция <function>mb_http_output</function> проверяет,
    что значение параметра <parameter>encoding</parameter> не содержит нулевых байтов,
    иначе выбрасывает ошибку <exceptionname>ValueError</exceptionname>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.odbc">
   <title>ODBC</title>

   <simpara>
    Функция <function>odbc_fetch_row</function> раньше возвращала значение &false;,
    если значение аргумента <parameter>row</parameter> оказывалось меньше или равно <literal>0</literal>.
    Теперь функция выдаёт предупреждение.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.pcntl">
   <title>Модуль PCNTL</title>

   <para>
    Функции <function>pcntl_sigprocmask</function>,
    <function>pcntl_sigwaitinfo</function>
    и <function>pcntl_sigtimedwait</function> теперь выбрасывают исключение:
    <simplelist>
     <member>
      <exceptionname>ValueError</exceptionname>, если массив
      <parameter>signals</parameter> оказался пустым
      (за исключением функции <function>pcntl_sigprocmask</function>,
      если для параметра <parameter>mode</parameter> установили режим <constant>SIG_SETMASK</constant>)
     </member>
     <member>
      <exceptionname>TypeError</exceptionname>, если массив
      <parameter>signals</parameter> содержит значение, которое не принадлежит типу &integer;
     </member>
     <member>
      <exceptionname>ValueError</exceptionname>, если массив
      <parameter>signals</parameter> содержит значение, которое оказалось недопустимым номером сигнала
     </member>
    </simplelist>
   </para>

   <simpara>
    Функция <function>pcntl_sigprocmask</function> теперь выбрасывает
    ошибку <exceptionname>ValueError</exceptionname>, если в аргументе <parameter>mode</parameter>
    передали значение, которое не входит в список: <constant>SIG_BLOCK</constant>, <constant>SIG_UNBLOCK</constant>
    или <constant>SIG_SETMASK</constant>.
   </simpara>

   <para>
    Функция <function>pcntl_sigtimedwait</function> теперь выбрасывает ошибку:
    <simplelist>
     <member>
      <exceptionname>ValueError</exceptionname>, если значение аргумента
      <parameter>seconds</parameter> меньше <literal>0</literal>
     </member>
     <member>
      <exceptionname>ValueError</exceptionname>, если значение аргумента
      <parameter>nanoseconds</parameter> меньше <literal>0</literal>
      или больше <literal>1e9</literal>
     </member>
     <member>
      <exceptionname>ValueError</exceptionname>, если значения аргументов
      <parameter>seconds</parameter> и <parameter>nanoseconds</parameter>
      равны <literal>0</literal>
     </member>
    </simplelist>
   </para>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.simplexml">
   <title>Модуль SimpleXML</title>

   <simpara>
    Вызов функции <function>simplexml_import_dom</function> не с XML-объектом теперь
    вместо исключения <exceptionname>ValueError</exceptionname>
    выбрасывает ошибку <exceptionname>TypeError</exceptionname>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.standard">
   <title>Новые исключения и ошибки в стандартных функциях</title>

   <simpara>
    Функция <function>round</function> теперь проверяет значение параметра <parameter>mode</parameter>
    и выбрасывает ошибку <exceptionname>ValueError</exceptionname> для недопустимых режимов.
    Раньше функция интерпретировала недопустимые режимы округления как режим <constant>PHP_ROUND_HALF_UP</constant>.
   </simpara>

   <simpara>
    Функция <function>str_getcsv</function> теперь выбрасывает
    ошибку <exceptionname>ValueError</exceptionname>, когда
    длина разделителя <parameter>separator</parameter> и ограничителя полей <parameter>enclosure</parameter>
    не равна одному байту, или если в аргументе символа экранирования <parameter>escape</parameter>
    не передали однобайтовый символ или пустую строку.
    Это выравнивает поведение функции, чтобы оно было идентично поведению
    функций <function>fputcsv</function> и <function>fgetcsv</function>.
   </simpara>

   <simpara>
    Функция <function>php_uname</function> теперь выбрасывает ошибку
    <exceptionname>ValueError</exceptionname>,
    если значение аргумента <parameter>mode</parameter> недопустимо.
   </simpara>

   <simpara>
    Опция <literal>"allowed_classes"</literal> функции
    <function>unserialize</function> теперь выбрасывает
    исключения <exceptionname>TypeError</exceptionname>
    и <exceptionname>ValueError</exceptionname>, если в аргументе передали
    не массив (<type>array</type>) имён классов.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.xmlreader">
   <title>Класс XMLReader</title>

   <simpara>
    Передача недопустимой кодировки символов
    в метод <methodname>XMLReader::open</methodname>
    или <methodname>XMLReader::XML</methodname> теперь выбрасывает ошибку
    <exceptionname>ValueError</exceptionname>.
   </simpara>

   <simpara>
    Передача строки (&string;), которая содержит нулевые байты, раньше выдавала
    предупреждение, а теперь выбрасывает ошибку <exceptionname>ValueError</exceptionname>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.xmlwriter">
   <title>Класс XMLWriter</title>

   <simpara>
    Передача строки (&string;), которая содержит нулевые байты, раньше выдавала
    предупреждение, а теперь выбрасывает ошибку <exceptionname>ValueError</exceptionname>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.incompatible.new-warnings-exceptions.xsl">
   <title>Модуль XSL</title>

   <simpara>
    Метод <methodname>XSLTProcessor::setParameter</methodname> теперь выбрасывает ошибку
    <exceptionname>ValueError</exceptionname>, если значения аргументов содержат нулевые байты.
    Метод никогда не работал корректно,
    поэтому теперь такое поведение приводит к исключению.
   </simpara>

   <simpara>
    Вызов метода <methodname>XSLTProcessor::importStyleSheet</methodname> не с XML-объектом теперь
    вместо исключения <exceptionname>ValueError</exceptionname>
    выбрасывает ошибку <exceptionname>TypeError</exceptionname>.
   </simpara>

   <simpara>
    Невозможность вызвать callback-функцию во время оценки теперь выбрасывает исключение,
    а не выдаёт предупреждение.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.incompatible.dom">
  <title>Модуль DOM</title>

  <simpara>
   Отдельные методы модуля DOM раньше возвращали значение &false;
   или выбрасывали исключение <exceptionname>DOMException</exceptionname> с кодом
   <constant>DOM_PHP_ERR</constant>, если не получалось выделить новый узел.
   Теперь методы постоянно выбрасывают исключение <exceptionname>DOMException</exceptionname>
   с кодом <constant>DOM_INVALID_STATE_ERR</constant>.
   Такая ситуация в крайней степени маловероятна и вряд ли затронет прежний код.
   В итоге вместо типа <code>DOMDocument|false</code> методу
   <methodname>DOMImplementation::createDocument</methodname> назначили предварительный
   тип возврата <classname>DOMDocument</classname>.
  </simpara>

  <simpara>
   Раньше объекты <classname>DOMXPath</classname> разрешали клонировать,
   но в итоге получался непригодный объект.
   Клонирование объекта <classname>DOMXPath</classname> больше невозможно
   и теперь выбрасывает ошибку <exceptionname>Error</exceptionname>.
  </simpara>

  <simpara>
   Метод <methodname>DOMImplementation::getFeature</methodname> удалили.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.gmp">
  <title>Класс GMP</title>

  <simpara>
   Класс <classname>GMP</classname> сделали окончательным и поэтому расширение класса теперь невозможно.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.mbstring">
  <title>Модуль MBString</title>

  <simpara>
   В недопустимых строках с ошибками кодировки функция
   <function>mb_substr</function> теперь интерпретирует индексы символов
   аналогично большей части других функций для работы с многобайтовыми строками.
   Поэтому символьные индексы, которые возвращает функция <function>mb_strpos</function>,
   разрешили передавать в функцию <function>mb_substr</function>.
  </simpara>

  <simpara>
   Для строк в кодировке SJIS-Mac, или её псевдониме MacJapanese, индексы символов,
   которые передают в функцию <function>mb_substr</function>, теперь ссылаются на индексы
   кодовых точек кодировки Unicode, которые получаются при преобразовании строки в Unicode.
   Это важно, поскольку около 40 символов кодировки SJIS-Mac преобразовываются
   в последовательность из нескольких кодовых точек Unicode.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.mysqli">
  <title>Модуль MySQLi</title>

  <simpara>
   Невостребованную и незадокументированную константу
   <constant>MYSQLI_SET_CHARSET_DIR</constant> удалили.
  </simpara>

  <simpara>
   Константу <constant>MYSQLI_STMT_ATTR_PREFETCH_ROWS</constant> удалили.
   Функция недоступна в драйвере mysqlnd.
  </simpara>

  <simpara>
   Константы <constant>MYSQLI_CURSOR_TYPE_FOR_UPDATE</constant>
   и <constant>MYSQLI_CURSOR_TYPE_SCROLLABLE</constant> удалили.
   Этот функционал никогда не реализовывали ни в драйвере mysqlnd, ни в библиотеке libmysql.
  </simpara>

  <simpara>
   Невостребованную константу <constant>MYSQLI_TYPE_INTERVAL</constant> —
   заглушку и псевдоним константы <constant>MYSQLI_TYPE_ENUM</constant> —
   удалили.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.mysqlnd">
  <title>Драйвер MySQLnd</title>

  <simpara>
   Код ошибки, которым сообщают о превышении времени ожидания сервера MySQL,
   изменили с <literal>2006</literal> на <literal>4031</literal>
   для серверов MySQL версии 8.0.24 и выше.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.opcache">
  <title>Модуль Opcache</title>

  <simpara>
   Максимальное значение директивы
   <link linkend="ini.opcache.interned-strings-buffer">opcache.interned_strings_buffer</link>
   в 64-разрядных архитектурах теперь составляет <literal>32767</literal> МБ.
   Раньше значение составляло <literal>4095</literal> мегабайтов.
  </simpara>

  <sect3>
   <title>Компилятор JIT</title>

   <simpara>
    Значения конфигурации по умолчанию для JIT-компилятора изменились
    с <link linkend="ini.opcache.jit"><literal>opcache.jit=tracing</literal></link>
    на <link linkend="ini.opcache.jit"><literal>opcache.jit=disable</literal></link>
    и с <link linkend="ini.opcache.jit-buffer-size"><literal>opcache.jit_buffer_size=0</literal></link>
    на <link linkend="ini.opcache.jit-buffer-size"><literal>opcache.jit_buffer_size=64M</literal></link>.
   </simpara>

   <simpara>
    Это не влияет на поведение наблюдаемых объектов по умолчанию,
    поскольку JIT по-прежнему отключён по умолчанию.
    Однако теперь JIT-компиляция отключается параметром
    <link linkend="ini.opcache.jit">opcache.jit</link>,
    а не <link linkend="ini.opcache.jit-buffer-size">opcache.jit_buffer_size</link>.
    Изменение затронет пользователей, которые раньше включали JIT только директивой
    <link linkend="ini.opcache.jit-buffer-size">opcache.jit_buffer_size</link>,
    но не указывали режим JIT-компиляции в директиве <link linkend="ini.opcache.jit">opcache.jit</link>.
    Поэтому чтобы включить JIT-компиляцию потребуется указать значение
    конфигурации для директивы <link linkend="ini.opcache.jit">opcache.jit</link>.
   </simpara>

   <simpara>
    Теперь при включённой <acronym>JIT</acronym>-компиляции
    <acronym>PHP</acronym> будет завершаться с критической ошибкой при запуске,
    если инициализация <acronym>JIT</acronym>-компилятора по какой-либо причине не удалась.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.incompatible.pcntl">
  <title>Модуль PCNTL</title>

  <simpara>
   Функции <function>pcntl_sigprocmask</function>,
   <function>pcntl_sigwaitinfo</function>
   и <function>pcntl_sigtimedwait</function> теперь при каждом вызове
   возвращают значение &false;, если возникла ошибка.
   Раньше в отдельных случаях функции иногда возвращали значение <literal>-1</literal>.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.pcre">
  <title>Модуль PCRE</title>

  <simpara>
   Библиотеку pcre2lib, которая идёт в комплекте поставки, обновили до версии 10.44.
   Поэтому запись <literal>{,3}</literal> теперь распознается как квантификатор, а не как текст.
   Кроме того, изменилось значение отдельных классов символов в режиме UCP.
   Полный перечень изменений приводит
   <link xlink:href="https://github.com/PCRE2Project/pcre2/blob/master/NEWS">список изменений PCRE2</link>.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.pdo-dblib">
  <title>Драйвер PDO_DBLIB</title>

  <simpara>
   Атрибуты <constant>Pdo\Dblib::ATTR_STRINGIFY_UNIQUEIDENTIFIER</constant>
   и <constant>Pdo\Dblib::ATTR_DATETIME_CONVERT</constant> теперь действуют как логические атрибуты
   вместо целочисленных.
   Поэтому установка атрибута методом <methodname>PDO::setAttribute</methodname>
   и получение атрибута методом <methodname>PDO::getAttribute</methodname> ожидает
   и возвращает логическое значение (<type>bool</type>).
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.pdo-firebird">
  <title>Драйвер PDO_FIREBIRD</title>

  <simpara>
   Атрибут <constant>PDO::ATTR_AUTOCOMMIT</constant> теперь действует как логический атрибут
   вместо целочисленного.
   Поэтому установка атрибута методом <methodname>PDO::setAttribute</methodname>
   и получение атрибута методом <methodname>PDO::getAttribute</methodname> ожидает
   и возвращает логическое значение (<type>bool</type>).
  </simpara>

  <simpara>
   Модуль теперь раскрывает отдельные API-интерфейсы СУБД Firebird на языке C++,
   поэтому для сборки модуля теперь требуется компилятор C++.
   Более того, теперь модуль потребуется скомпилировать с библиотекой fbclient 3.0 или выше.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.pdo-mysql">
  <title>Драйвер PDO_MYSQL</title>

  <simpara>
   Атрибуты <constant>PDO::ATTR_AUTOCOMMIT</constant>, <constant>PDO::ATTR_EMULATE_PREPARES</constant>
   и <constant>PDO::MYSQL_ATTR_DIRECT_QUERY</constant> теперь действуют как логические
   атрибуты вместо целочисленных.
   Поэтому установка атрибута методом <methodname>PDO::setAttribute</methodname>
   и получение атрибута методом <methodname>PDO::getAttribute</methodname>
   ожидает и возвращает логическое значение (<type>bool</type>).
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.pdo-pgsql">
  <title>Драйвер PDO_PGSQL</title>

  <simpara>
   Приоритет учётных данных, которые указали в DSN-строке подключения конструктора класса PDO,
   выше, чем приоритет учётных данных, которые указали во втором и третьем аргументах конструктора,
   поскольку учётные данные в DSN-строке подключения ближе к положениям документации.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.simplexml">
  <title>Модуль SimpleXML</title>

  <simpara>
   Объект класса <classname>SimpleXMLElement</classname> — представляет не только элемент в XML-документе,
   но и интерфейс <classname>RecursiveIterator</classname>.
   До PHP 8.4.0 отдельные методы класса наподобие <methodname>SimpleXMLElement::asXML</methodname>
   или <methodname>SimpleXMLElement::getName</methodname>
   и приведение таких экземпляров к строке (&string;) неявно сбрасывали итератор.
  </simpara>
  <para>
   Такое поведение иногда делало циклы бесконечными, поскольку итератор
   отматывался к первому элементу. Приведём пример. Следующий код:
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php

$xmlString = "<root><a><b>1</b><b>2</b><b>3</b></a></root>";
$xml = simplexml_load_string($xmlString);

$nodes = $xml->a->b;
foreach ($nodes as $nodeData) {
    echo "Данные узла: " . $nodeData . "\n";

    $xml = $nodes->asXml();
}

]]>
    </programlisting>
    <simpara>
     …вызовет бесконечный цикл.
    </simpara>
    <screen>
<![CDATA[
Данные узла: 1
Данные узла: 2
Данные узла: 2
Данные узла: 2
Данные узла: 2
Данные узла: 2
Данные узла: 2
// ...
]]>
    </screen>
    <simpara>
     Это поведение исправили, и элемент
     <classname>SimpleXMLElement</classname> больше не будет
     неявно сбрасывать данные итератора, если только итератор не отмотают вручную.
     Поэтому приведённый пример теперь будет выводить следующие данные:
    </simpara>
    <screen>
<![CDATA[
Данные узла: 1
Данные узла: 2
Данные узла: 3
]]>
    </screen>
   </informalexample>
  </para>
 </sect2>

 <sect2 xml:id="migration84.incompatible.soap">
  <title>Модуль SOAP</title>

  <simpara>
   Разработчики представили свойство <property>SoapClient::$typemap</property>
   массивом (<type>array</type>), а не ресурсом (<type>resource</type>).
   Проверки функцией <function>is_resource</function> наподобие
   <code>is_resource($client->typemap)</code> потребуется
   заменить проверкой на &null; вроде <code>$client->typemap !== null</code>.
  </simpara>

  <simpara>
   Модуль SOAP получил необязательную зависимость от модуля
   <link linkend="book.session">session</link>.
   Теперь при запуске будут возникать ошибки,
   если включить модуль <link linkend="book.soap">SOAP</link>, а PHP собрать
   без модуля session, но с флагом конфигурации <option>--enable-rtld-now</option>.
   Проблему решают двумя способами: либо не включают режим rtld-now, либо загружают модуль сессий.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.standard">
  <title>Стандартные функции</title>

  <simpara>
   Теперь при вызове функции <function>strcspn</function>
   с передачей в аргументе <parameter>characters</parameter> пустой строки
   вместо неправильной остановки на первом нулевом байте
   возвращается длина строки.
  </simpara>

  <simpara>
   Функция <function>http_build_query</function> теперь корректно
   обрабатывает типизированные перечисления.
  </simpara>

  <simpara>
   Функции <function>stream_bucket_make_writeable</function>
   и <function>stream_bucket_new</function> теперь возвращают
   экземпляр класса <classname>StreamBucket</classname>, а не класса
   <classname>stdClass</classname>.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.tidy">
  <title>Модуль Tidy</title>

  <simpara>
   Теперь вместо предупреждений и повреждения объекта
   сбои в конструкторе выбрасывают исключение.
  </simpara>
 </sect2>

 <sect2 xml:id="migration84.incompatible.xml">
  <title>Парсер XML</title>

  <simpara>
   Функции семейства <function>xml_set_<replaceable>*</replaceable>_handler</function>
   теперь объявляют и проверяют сигнатуру
   <type class="union"><type>callable</type><type>string</type><type>null</type></type>
   параметров <parameter>handler</parameter>.
   Больше того, значения с типом <type>string</type>, которые соответствуют названиям методов,
   которые задали функцией <function>xml_set_object</function>,
   теперь проверяются на существование метода в классе объекта, который передали прежде.
   Поэтому теперь перед установкой названий методов, которые устанавливаются как <type>callable</type>-обработчики,
   требуется каждый раз вызывать функцию <function>xml_set_object</function>.
   Передача пустой строки для отключения обработчика по-прежнему разрешается, но устарела.
  </simpara>

  <simpara>
   Однако, поскольку функция <function>xml_set_object</function> и передача
   строк, которые не принадлежат типу <type>callable</type>, устарели,
   рекомендуют заменить такие экземпляры <type>callable</type>-обработчиками,
   которые ссылаются непосредственно на метод.
  </simpara>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
