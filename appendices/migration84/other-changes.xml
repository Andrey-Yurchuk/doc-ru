<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b1b039696eedcc82e9c1144eeecbfc0a8a1b3859 Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="migration84.other-changes">
 <title>Другие изменения</title>

 <sect2 xml:id="migration84.other-changes.core">
  <title>Изменения в ядре</title>

  <sect3 xml:id="migration84.other-changes.core.closures">
   <title>Замыкания</title>

   <simpara>
    Названия замыканий изменили так, чтобы имена включали название родительской функции
    и строку, в которой определили замыкание, что помогает различать замыкания
    в трассировках стека или другом месте вывода отладочной информации.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.core.fibers">
   <title>Файберы</title>

   <simpara>
    Переключение файберов теперь разрешили при запуске деструктора. Раньше переключение
    файбров блокировали из-за конфликтов со сборщиком мусора.
   </simpara>

   <simpara>
    Деструкторы теперь разрешается выполнять в отдельном файбере:
   </simpara>

   <simpara>
    Когда в файбере запускается сборка мусора,
    деструкторы, которые вызвал сборщик мусора, выполняются в отдельном файбере:
    gc_destructor_fiber.
    Для выполнения оставшихся деструкторов создаётся новый файбер,
    если этот файбер приостанавливается.
    Сборщик мусора больше не ссылается на предыдущий файбер gc_destructor_fiber,
    поэтому файбер доступен для сборки, раз ссылок на него не осталось.
    Сборщик мусора не соберёт объекты, деструктор которых приостановился,
    до тех пор, пока деструктор не вернется или пока сборщик мусора не уничтожит файбер.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.core.output">
   <title>Обработчики вывода</title>

   <simpara>
    Флаги статуса обработчика вывода, которые передали в параметр <parameter>flags</parameter>
    функции <function>ob_start</function>, теперь очищаются.
   </simpara>

   <simpara>
    Функция <function>output_add_rewrite_var</function> для выбора хостов, которые перезапишутся,
    теперь руководствуется значением директивы
    <link linkend="ini.url-rewriter.hosts"><literal>url_rewriter.hosts</literal></link>
    вместо директивы
    <link linkend="ini.session.trans-sid-hosts"><literal>session.trans_sid_hosts</literal></link>.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.other-changes.sapi">
  <title>Изменения в SAPI-модулях</title>

  <sect3 xml:id="migration84.other-changes.sapi.apache">
   <title>apache2handler</title>

   <simpara>
    Из-за окончания жизненного цикла удалили поддержку веб-серверов Apache 2.0 и 2.2.
    Теперь требуется версия Apache не ниже 2.4.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.sapi.cli">
   <title>Модуль CLI</title>

   <simpara>
    Встроенный сервер ищет индексный файл рекурсивно путём обхода родительских каталогов,
    когда не находит файл.
    Раньше этот процесс пропускался, если путь выглядел так, как будто ссылается на файл,
    т. е. если последний компонент пути содержал точку.
    Тогда возвращалась ошибка 404.
    Поведение изменили для поиска индексного файла во всех случаях.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.sapi.fpm">
   <title>Модуль FPM</title>

   <simpara>
    <!-- TODO Does this need a link? -->
    Настройку <literal>events.mechanism</literal> в файле <filename>/dev/poll</filename>
    для ОС Solaris/Illumos удалили.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.other-changes.functions">
  <title>Изменённые функции</title>

  <sect3 xml:id="migration84.other-changes.functions.core">
   <title>Ядро</title>

   <simpara>
    Функции <function>trigger_error</function> и <function>user_error</function>
    теперь возвращают конкретное логическое значение <type>true</type> вместо общего <type>bool</type>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.dom">
   <title>Модуль DOM</title>

   <simpara>
    В Методе <methodname>DOMDocument::registerNodeClass</methodname>
    предварительный тип возврата определили как <type>true</type>
    вместо прежнего <type>bool</type>,
    поскольку на практике метод возвращал только &true;.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.hash">
   <title>Модуль Hash</title>

   <simpara>
    В функции <function>hash_update</function>
    предварительный тип возврата теперь <type>true</type> вместо
    прежнего <type>bool</type>,
    поскольку на практике метод возвращал только &true;.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.intl">
   <title>Модуль Intl</title>

   <simpara>
    Константы <constant>NumberFormatter::ROUND_TOWARD_ZERO</constant>
    и <constant>NumberFormatter::ROUND_AWAY_FROM_ZERO</constant>
    добавили как синонимы констант
    <constant>NumberFormatter::ROUND_DOWN</constant>
    и <constant>NumberFormatter::ROUND_UP</constant>
    для согласованности с семейством режимов
    <constant>PHP_ROUND_<replaceable>*</replaceable></constant>.
   </simpara>

   <simpara>
    Метод <methodname>ResourceBundle::get</methodname>
    <!-- TODO Use a proper union type for the return type -->
    получил предварительный тип возврата <literal>ResourceBundle|array|string|int|null</literal>.
   </simpara>

   <simpara>
    Функции <function>idn_to_ascii</function> и <function>idn_to_utf8</function>
    теперь выбрасывают ошибки <exceptionname>ValueError</exceptionname> при каждом вызове,
    если имя в параметре <parameter>domain</parameter> оказалось пустым или слишком длинным.
   </simpara>

   <simpara>
    Функции <function>idn_to_ascii</function> и <function>idn_to_utf8</function>
    теперь выбрасывают ошибку <exceptionname>ValueError</exceptionname> при каждом вызове,
    если значение аргумента <parameter>variant</parameter> не равно
    <constant>INTL_IDNA_VARIANT_UTS46</constant>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.libxml">
   <title>Модуль LibXML</title>

   <simpara>
    Функция <function>libxml_set_streams_context</function> теперь сразу выбрасывает ошибку
    <exceptionname>TypeError</exceptionname>, когда в функцию передают ресурс, который
    не относится к контексту потока,
    вместо того, чтобы выбрасывать ошибку позже, когда появляется потоковый контекст.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.mbstring">
   <title>Модуль MBString</title>

   <simpara>
    Поведение функции <function>mb_strcut</function> теперь лучше согласуется
    с недопустимыми для кодировок UTF-8 и UTF-16 строками.
    Для допустимых для кодировок UTF-8 и UTF-16 строк поведение не изменилось.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.odbc">
   <title>Модуль ODBC</title>

   <simpara>
    Разработчики изменили значение по умолчанию для параметра <parameter>row</parameter> в функциях
    <function>odbc_fetch_object</function>,
    <function>odbc_fetch_array</function>
    и <function>odbc_fetch_into</function>, теперь значение равно &null;,
    что согласуется в функцией <function>odbc_fetch_row</function>.
    Предыдущие значения по умолчанию равнялись
    <literal>-1</literal>,
    <literal>-1</literal>
    и <literal>0</literal> соответственно.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.openssl">
   <title>Модуль OpenSSL</title>

   <simpara>
    Параметр <parameter>extra_attributes</parameter> в функции <function>openssl_csr_new</function>
    вместо DN-имени (англ. сокр.: Distinguished Name — уникальное имя) субъекта
    устанавливает атрибут <acronym>CSR</acronym>; раньше функция делала это неправильно.
   </simpara>

   <simpara>
    Параметр <parameter>dn</parameter> в функции
    <function>openssl_csr_new</function> разрешает устанавливать массив (<type>array</type>)
    значений для одной записи.
   </simpara>

   <simpara>
    В функцию <function>openssl_csr_sign</function> добавили
    новый параметр <parameter>serial_hex</parameter>,
    который разрешает устанавливать серийные номера
    в шестнадцатеричном формате.
   </simpara>

   <simpara>
    Разбор значений даты и времени в формате UTCTime языка ASN.1 функцией <function>openssl_x509_parse</function>
    завершится ошибкой, если секунды опустили для версии модуля OpenSSL ниже 3.2 (для таких полей
    возвращает значение <literal>-1</literal>).
    Версия OpenSSL выше 3.3 уже не загружала такие сертификаты.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo">
   <title>Модуль PDO</title>

   <simpara>
    Получить значение атрибута <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
    теперь возможно методом
    <methodname>PDO::getAttribute</methodname>.
   </simpara>

   <simpara>
    Добавили новую константу <constant>PDO::PGSQL_ATTR_RESULT_MEMORY_SIZE</constant>,
    чтобы получать данные о потреблении памяти результатами запросов
    методом <methodname>PDO::getAttribute</methodname> для драйверов, которые поддерживают метод.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo-firebird">
   <title>Драйвер PDO_FIREBIRD</title>

   <simpara>
    Значения атрибутов
    <!-- TODO Is this a class constant of the driver class? -->
    <constant>FB_ATTR_DATE_FORMAT</constant>,
    <constant>FB_ATTR_TIME_FORMAT</constant>
    и <constant>FB_ATTR_TIMESTAMP_FORMAT</constant>
    теперь возможно получать методом
    <!-- TODO Only for the specific driver class? -->
    <methodname>PDO::getAttribute</methodname>.
   </simpara>

   <para>
    Добавили новые атрибуты, которые указывают уровень изоляции транзакции и режим доступа.
    Добавили пять констант, которые относятся к этой функциональности:

    <simplelist>
     <member><constant>Pdo\Firebird::TRANSACTION_ISOLATION_LEVEL</constant></member>
     <member><constant>Pdo\Firebird::READ_COMMITTED</constant></member>
     <member><constant>Pdo\Firebird::REPEATABLE_READ</constant></member>
     <member><constant>Pdo\Firebird::SERIALIZABLE</constant></member>
     <member><constant>Pdo\Firebird::WRITABLE_TRANSACTION</constant></member>
    </simplelist>
   </para>

   <simpara>
    Конструкторе теперь проверяет работоспособность подключений
    при работе с постоянными соединениями.
   </simpara>

   <simpara>
    Содержимое, которое создаёт драйвер, меняется в зависимости от значения флага
    <constant>FB_API_VER</constant> в файле
    <filename class="headerfile">ibase.h</filename>.
    Эту информацию получают методом <methodname>Pdo\Firebird::getApiVersion</methodname>.
    Эта информация теперь также упоминается в выводе функции
    <function>phpinfo</function>.
   </simpara>

   <para>
    Теперь доступны пять новых типов данных:
    <simplelist type="inline">
     <member><literal>INT128</literal></member>
     <member><literal>DEC16</literal></member>
     <member><literal>DEC34</literal></member>
     <member><literal>TIMESTAMP_TZ</literal></member>
     <member><literal>TIME_TZ</literal></member>
    </simplelist>
    .
    Типы доступны начиная с Firebird 4.0.
   </para>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo-mysql">
   <title>Драйвер PDO_MYSQL</title>

   <simpara>
    Значение атрибута
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant>
    <!-- TODO Only for the specific driver class? -->
    теперь возможно получать методом <methodname>PDO::getAttribute</methodname>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo-pgsql">
   <title>Драйвер PDO_PGSQL</title>

   <simpara>
    Добавили поддержку получения информации о потреблении памяти запросами для флага
    <constant>PDO::PGSQL_ATTR_RESULT_MEMORY_SIZE</constant>.
   </simpara>

   <simpara>
    Значение тперь возвращается как число с плавающей точкой
    <type>float</type>, а не как строка (<type>string</type>),
    если столбец принадлежит типу <literal>FLOAT4OID</literal>
    или <literal>FLOAT8OID</literal>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pgsql">
   <title>Модуль PGSQL</title>

   <simpara>
    Параметр <parameter>conditions</parameter>
    функции <function>pg_select</function> теперь необязателен и принимает пустой массив.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.phar">
   <title>Модуль Phar</title>

   <para>
    В методах
    <simplelist type="inline">
     <member><methodname>Phar::setAlias</methodname></member>
     <member><methodname>Phar::setDefaultStub</methodname></member>
    </simplelist>
    предварительный тип возврата <type>bool</type> изменили
    на <type>true</type>.
   </para>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.posix">
   <title>Модуль POSIX</title>

   <simpara>
    Функция <function>posix_isatty</function> теперь устанавливает номер ошибки,
    если аргумент дескриптора файла или потока недопустим.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.reflection">
   <title>Модуль Reflection</title>

   <simpara>
    Метод <methodname>ReflectionGenerator::getFunction</methodname>
    теперь разрешили вызывать, когда завершится выполнение генератора.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.sockets">
   <title>Модуль Sockets</title>

   <simpara>
    Значение по умолчанию для параметра <parameter>backlog</parameter>
    функции <function>socket_create_listen</function> изменили
    на <constant>SOMAXCONN</constant>.
    Раньше значение по умолчанию равнялось <literal>128</literal>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.sodium">
   <title>Модуль Sodium</title>

   <simpara>
    Функции семейства <function>sodium_crypto_aead_aes256gcm_<replaceable>*</replaceable></function>
    теперь доступны для центральных процессоров, которые построили по архитектуре aarch64,
    с криптографическими модулями ARM.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.spl">
   <title>Стандартная PHP-библиотека SPL</title>

   <para>
    Предварительный тип возврата в методах
    <simplelist type="inline">
     <member><methodname>SplPriorityQueue::insert</methodname></member>
     <member><methodname>SplPriorityQueue::recoverFromCorruption</methodname></member>
     <member><methodname>SplHeap::insert</methodname></member>
     <member><methodname>SplHeap::recoverFromCorruption</methodname></member>
    </simplelist>
    изменили с <type>bool</type> на <type>true</type>.
   </para>

   <simpara>
    Класс <classname>SplObjectStorage</classname> теперь реализует
    итератор <interfacename>SeekableIterator</interfacename>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.standard">
   <title>Стандартные функции</title>

   <simpara>

    Значение по умолчанию стоимости <literal>'cost'</literal> для алгоритма хеширования <constant>PASSWORD_BCRYPT</constant>
    в функции <function>password_hash</function> увеличили
    с <literal>10</literal> до <literal>12</literal>.
    <!-- RFC: https://wiki.php.net/rfc/bcrypt_cost_2023 -->
   </simpara>

   <simpara>
    Функция <function>debug_zval_dump</function> теперь указывает, упакован ли массив.
   </simpara>

   <simpara>
    Тип возврата в функции <function>long2ip</function> изменили со <literal>string|false</literal>
    <!-- TODO Proper union type -->
    на <type>string</type>.
   </simpara>

   <simpara>
    <!-- TODO Proper union type -->
    Тип возврата в функции <function>highlight_string</function> изменили
    со <literal>string|bool</literal> на <type>string|true</type>.
   </simpara>

   <simpara>
    <!-- TODO Proper union type -->
    Тип возврата в функции <function>print_r</function> изменили
    со <literal>string|bool</literal> на <type>string|true</type>.
   </simpara>

   <!-- TODO: Someone else take care of this - Girgias -->
   <sect4>
    <title>Округление чисел функцией <function>round</function></title>

    <simpara>
     Тип парамера <parameter>mode</parameter> функции
     <function>round</function> расширили
     <!-- TODO Proper union type -->
     до типа <literal>RoundingMode|int</literal>,
     <!-- TODO should be <enumname> ? -->
     который теперь принимает новое перечисление <classname>RoundingMode</classname>.
     <!-- RFC: https://wiki.php.net/rfc/correctly_name_the_rounding_mode_and_make_it_an_enum -->
    </simpara>

    <para>
     В функцию <function>round</function> добавили четыре новых режима:
     <simplelist type="inline">
      <member><!-- <enumidentifier> -->RoundingMode::PositiveInfinity<!-- </enumidentifier> --></member>
      <member><!-- <enumidentifier> -->RoundingMode::NegativeInfinity<!-- </enumidentifier> --></member>
      <member><!-- <enumidentifier> -->RoundingMode::TowardsZero<!-- </enumidentifier> --></member>
      <member><!-- <enumidentifier> -->RoundingMode::AwayFromZero<!-- </enumidentifier> --></member>
     </simplelist>
     <!-- RFC: https://wiki.php.net/rfc/new_rounding_modes_to_round_function -->
    </para>

    <simpara>
     Внутреннюю реализацию округления до целых чисел переписали,
     чтобы реализацию было легче проверять на корректность и поддерживать.
     По ходу переписывания исправили ряд ошибок округления.
     Например, раньше округление числа <literal>0.49999999999999994</literal>
     до ближайшего целого вернуло бы значение <literal>1.0</literal>
     вместо правильного результата — <literal>0.0</literal>.
     Округление также затронет часть дополнительных входных данных
     и выдаст другой по сравнению с предыдущими версиями PHP результат.
    </simpara>

    <simpara>
     Fixed a bug caused by "pre-rounding" of the <function>round</function> function.
     Previously, using "pre-rounding" to treat a value like <literal>0.285</literal>
     (actually <literal>0.28499999999999998</literal>) as a decimal number
     and round it to <literal>0.29</literal>.
     However, "pre-rounding" incorrectly rounds certain numbers,
     so this fix removes "pre-rounding" and changes the way numbers are compared,
     so that the values are correctly rounded as decimal numbers.
    </simpara>

    <simpara>
     The maximum precision that can be handled by <function>round</function>
     has been extended by one digit.
     For example, <code>round(4503599627370495.5)</code> returned in
     <literal>4503599627370495.5</literal>,
     but now returns <literal>4503599627370496</literal>.
    </simpara>

   </sect4>
  </sect3>

 </sect2>

 <sect2 xml:id="migration84.other-changes.extensions">
  <title>Other Changes to Extensions</title>

  <sect3 xml:id="migration84.other-changes.extensions.curl">
   <title>cURL</title>

   <simpara>
    The minimum libcurl version required is now 7.61.0.
   </simpara>

   <simpara>
    The <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant> option no longer
    has any effect, and is silently ignored.
    This underlying feature was deprecated in libcurl 7.11.1,
    and removed in libcurl 7.62.0.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.gmp">
   <title>GMP</title>

   <!-- RFC: https://wiki.php.net/rfc/fix_up_bcmath_number_class -->
   <simpara>
    Casting a <classname>GMP</classname> object to <type>bool</type> is now
    possible instead of emitting a <constant>E_RECOVERABLE_ERROR</constant>.
    The casting behaviour is overloaded such that a <classname>GMP</classname>
    object representing the value <literal>0</literal> is cast to &false;.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.libxml">
   <title>LibXML</title>

   <simpara>
    The minimum libxml2 version required is now 2.9.4.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.intl">
   <title>Intl</title>

   <simpara>
    The behaviour of Intl class has been normalized to always throw
    <exceptionname>Error</exceptionname> exceptions when attempting to use
    a non-initialized object, or when cloning fails.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.mbstring">
   <title>MBString</title>

   <simpara>
    Unicode data tables have been updated to Unicode 16.0.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.mysqlnd">
   <title>MySQLnd</title>

   <simpara>
    Support for the new VECTOR data type from MySQL 9.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.openssl">
   <title>OpenSSL</title>

   <simpara>
    The minimum OpenSSL version required is now 1.1.1.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.pdo-pgsql">
   <title>PDO_PGSQL</title>

   <simpara>
    The minimum libpq version required is now 10.0.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.pgsql">
   <title>PGSQL</title>

   <simpara>
    The minimum libpq version required is now 10.0.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.spl">
   <title>SPL</title>

   <simpara>
    Out of bounds accesses in <classname>SplFixedArray</classname> now throw
    exceptions of type <exceptionname>OutOfBoundsException</exceptionname>
    instead of <exceptionname>RuntimeException</exceptionname>.
    Because <exceptionname>OutOfBoundsException</exceptionname> is a child
    class of <exceptionname>RuntimeException</exceptionname> no behavioural
    changes are exhibited when attempting to catch those exceptions.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.xsl">
   <title>XSL</title>

   <simpara>
    The typed properties <property>XSLTProcessor::$cloneDocument</property>
    and <property>XSLTProcessor::$doXInclude</property> are now declared
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.zlib">
   <title>Zlib</title>

   <simpara>
    The minimum zlib version required is now 1.2.11.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.other-changes.performance">
  <title>Performance</title>

  <sect3 xml:id="migration84.other-changes.performance.core">
   <title>Core</title>

   <simpara>
    Improved the performance of floating point number parsing and formatting in
    ZTS builds under highly concurrent loads.
    This affects the <function>printf</function> family of functions as well
    as serialization functions such as <function>json_encode</function>,
    or <function>serialize</function>.
   </simpara>

   <simpara>
    <function>sprintf</function> using only <literal>%s</literal> and
    <literal>%d</literal> specifiers will be compiled into the equivalent
    string interpolation, avoiding the overhead of a function call and
    repeatedly parsing the format string.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.bcmath">
   <title>BCMath</title>

   <simpara>
    Improved performance of number conversions and operations.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.dom">
   <title>DOM</title>

   <simpara>
    The performance of <methodname>DOMNode::C14N</methodname> is greatly
    improved for the case without an xpath query.
    This can give a time improvement of easily two order of
    magnitude for documents with tens of thousands of nodes.
   </simpara>

   <simpara>
    Improved performance and reduce memory consumption of XML serialization.
   </simpara>

   <simpara>
    Reduced memory usage of node classes.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.ftp">
   <title>FTP</title>

   <simpara>
    Improved the performance of FTP uploads up to a factor of 10x for large
    uploads.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.hash">
   <title>Hash</title>

   <simpara>
    Added SSE2 and SHA-NI implementations of SHA-256.
    This improves the performance on supported CPUs by ~1.3x (SSE2),
    and 3x - 5x (SHA-NI).
    Credit to Colin Percival / Tarsnap for this optimization.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.mbstring">
   <title>MBString</title>

   <simpara>
    <function>mb_strcut</function> is much faster now for UTF-8
    and UTF-16 strings.
   </simpara>

   <simpara>
    Looking up mbstring encoding names is much faster now.
   </simpara>

   <simpara>
    The performance of converting SJIS-win to Unicode is greatly improved.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.mysqlnd">
   <title>MySQLnd</title>

   <simpara>
    Improved the performance of MySQLnd quoting.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.pcre">
   <title>PCRE</title>

   <simpara>
    Improved the performance of named capture groups.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.random">
   <title>Random</title>

   <simpara>
    Improved the performance of <classname>Random\Randomizer</classname>,
    with a specific focus on the
    <methodname>Random\Randomizer::getBytes</methodname>,
    and <methodname>Random\Randomizer::getBytesFromString</methodname> methods.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.simplexml">
   <title>SimpleXML</title>

   <simpara>
    Improved performance and reduce memory consumption of XML serialization.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.standard">
   <title>Standard</title>

   <simpara>
    The performance of <function>strspn</function> and
    <function>strcspn</function> is greatly improved.
    They now run in linear time instead of being bounded by quadratic time.
   </simpara>

   <simpara>
    Improved the performance of <function>strpbrk</function>.
   </simpara>

   <simpara>
    <function>get_browser</function> is much faster now,
    up to 1.5x - 2.5x for some test cases.
   </simpara>
  </sect3>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
