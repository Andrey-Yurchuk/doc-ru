<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b1b039696eedcc82e9c1144eeecbfc0a8a1b3859 Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="migration84.other-changes">
 <title>Другие изменения</title>

 <sect2 xml:id="migration84.other-changes.core">
  <title>Изменения в ядре</title>

  <sect3 xml:id="migration84.other-changes.core.closures">
   <title>Замыкания</title>

   <simpara>
    Названия замыканий изменили так, чтобы имена включали название родительской функции
    и строку, в которой определили замыкание, что помогает различать замыкания
    в трассировках стека или другом месте вывода отладочной информации.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.core.fibers">
   <title>Файберы</title>

   <simpara>
    Переключение файберов теперь разрешили при запуске деструктора. Раньше переключение
    файберов блокировали из-за конфликтов со сборщиком мусора.
   </simpara>

   <simpara>
    Деструкторы теперь разрешается выполнять в отдельном файбере:
   </simpara>

   <simpara>
    Когда в файбере запускается сборка мусора,
    деструкторы, которые вызвал сборщик мусора, выполняются в отдельном файбере:
    gc_destructor_fiber.
    Для выполнения оставшихся деструкторов создаётся новый файбер,
    если этот файбер приостанавливается.
    Сборщик мусора больше не ссылается на предыдущий файбер gc_destructor_fiber,
    поэтому файбер доступен для сборки, раз ссылок на него не осталось.
    Сборщик мусора не соберёт объекты, деструктор которых приостановился,
    до тех пор, пока деструктор не вернется или пока сборщик мусора не уничтожит файбер.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.core.output">
   <title>Обработчики вывода</title>

   <simpara>
    Флаги статуса обработчика вывода, которые передали в параметр <parameter>flags</parameter>
    функции <function>ob_start</function>, теперь очищаются.
   </simpara>

   <simpara>
    Функция <function>output_add_rewrite_var</function> для выбора хостов, которые перезапишутся,
    теперь руководствуется значением директивы
    <link linkend="ini.url-rewriter.hosts"><literal>url_rewriter.hosts</literal></link>
    вместо директивы
    <link linkend="ini.session.trans-sid-hosts"><literal>session.trans_sid_hosts</literal></link>.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.other-changes.sapi">
  <title>Изменения в SAPI-модулях</title>

  <sect3 xml:id="migration84.other-changes.sapi.apache">
   <title>apache2handler</title>

   <simpara>
    Из-за окончания жизненного цикла удалили поддержку веб-серверов Apache 2.0 и 2.2.
    Теперь требуется версия Apache не ниже 2.4.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.sapi.cli">
   <title>Модуль CLI</title>

   <simpara>
    Встроенный сервер ищет индексный файл рекурсивно путём обхода родительских каталогов,
    когда не находит файл.
    Раньше этот процесс пропускался, если путь выглядел так, как будто ссылается на файл,
    т. е. если последний компонент пути содержал точку.
    Тогда возвращалась ошибка 404.
    Поведение изменили для поиска индексного файла во всех случаях.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.sapi.fpm">
   <title>Модуль FPM</title>

   <simpara>
    <!-- TODO Does this need a link? -->
    Настройку <literal>events.mechanism</literal> в файле <filename>/dev/poll</filename>
    для ОС Solaris/Illumos удалили.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.other-changes.functions">
  <title>Изменённые функции</title>

  <sect3 xml:id="migration84.other-changes.functions.core">
   <title>Ядро</title>

   <simpara>
    Функции <function>trigger_error</function> и <function>user_error</function>
    теперь возвращают конкретное логическое значение <type>true</type> вместо общего <type>bool</type>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.dom">
   <title>Модуль DOM</title>

   <simpara>
    В Методе <methodname>DOMDocument::registerNodeClass</methodname>
    предварительный тип возврата определили как <type>true</type>
    вместо прежнего <type>bool</type>,
    поскольку на практике метод возвращал только &true;.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.hash">
   <title>Модуль Hash</title>

   <simpara>
    В функции <function>hash_update</function>
    предварительный тип возврата теперь <type>true</type> вместо
    прежнего <type>bool</type>,
    поскольку на практике метод возвращал только &true;.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.intl">
   <title>Модуль Intl</title>

   <simpara>
    Константы <constant>NumberFormatter::ROUND_TOWARD_ZERO</constant>
    и <constant>NumberFormatter::ROUND_AWAY_FROM_ZERO</constant>
    добавили как синонимы констант
    <constant>NumberFormatter::ROUND_DOWN</constant>
    и <constant>NumberFormatter::ROUND_UP</constant>
    для согласованности с семейством режимов
    <constant>PHP_ROUND_<replaceable>*</replaceable></constant>.
   </simpara>

   <simpara>
    Метод <methodname>ResourceBundle::get</methodname>
    <!-- TODO Use a proper union type for the return type -->
    получил предварительный тип возврата <literal>ResourceBundle|array|string|int|null</literal>.
   </simpara>

   <simpara>
    Функции <function>idn_to_ascii</function> и <function>idn_to_utf8</function>
    теперь выбрасывают ошибки <exceptionname>ValueError</exceptionname> при каждом вызове,
    если имя в параметре <parameter>domain</parameter> оказалось пустым или слишком длинным.
   </simpara>

   <simpara>
    Функции <function>idn_to_ascii</function> и <function>idn_to_utf8</function>
    теперь выбрасывают ошибку <exceptionname>ValueError</exceptionname> при каждом вызове,
    если значение аргумента <parameter>variant</parameter> не равно
    <constant>INTL_IDNA_VARIANT_UTS46</constant>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.libxml">
   <title>Модуль LibXML</title>

   <simpara>
    Функция <function>libxml_set_streams_context</function> теперь сразу выбрасывает ошибку
    <exceptionname>TypeError</exceptionname>, когда в функцию передают ресурс, который
    не относится к контексту потока,
    вместо того, чтобы выбрасывать ошибку позже, когда появляется потоковый контекст.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.mbstring">
   <title>Модуль MBString</title>

   <simpara>
    Поведение функции <function>mb_strcut</function> теперь лучше согласуется
    с недопустимыми для кодировок UTF-8 и UTF-16 строками.
    Для допустимых для кодировок UTF-8 и UTF-16 строк поведение не изменилось.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.odbc">
   <title>Модуль ODBC</title>

   <simpara>
    Разработчики изменили значение по умолчанию для параметра <parameter>row</parameter> в функциях
    <function>odbc_fetch_object</function>,
    <function>odbc_fetch_array</function>
    и <function>odbc_fetch_into</function>, теперь значение равно &null;,
    что согласуется в функцией <function>odbc_fetch_row</function>.
    Предыдущие значения по умолчанию равнялись
    <literal>-1</literal>,
    <literal>-1</literal>
    и <literal>0</literal> соответственно.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.openssl">
   <title>Модуль OpenSSL</title>

   <simpara>
    Параметр <parameter>extra_attributes</parameter> в функции <function>openssl_csr_new</function>
    вместо DN-имени (англ. сокр.: Distinguished Name — уникальное имя) субъекта
    устанавливает атрибут <acronym>CSR</acronym>; раньше функция делала это неправильно.
   </simpara>

   <simpara>
    Параметр <parameter>dn</parameter> в функции
    <function>openssl_csr_new</function> разрешает устанавливать массив (<type>array</type>)
    значений для одной записи.
   </simpara>

   <simpara>
    В функцию <function>openssl_csr_sign</function> добавили
    новый параметр <parameter>serial_hex</parameter>,
    который разрешает устанавливать серийные номера
    в шестнадцатеричном формате.
   </simpara>

   <simpara>
    Разбор значений даты и времени в формате UTCTime языка ASN.1 функцией <function>openssl_x509_parse</function>
    завершится ошибкой, если секунды опустили для версии модуля OpenSSL ниже 3.2 (для таких полей
    возвращает значение <literal>-1</literal>).
    Версия OpenSSL выше 3.3 уже не загружала такие сертификаты.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo">
   <title>Модуль PDO</title>

   <simpara>
    Получить значение атрибута <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
    теперь возможно методом
    <methodname>PDO::getAttribute</methodname>.
   </simpara>

   <simpara>
    Добавили новую константу <constant>PDO::PGSQL_ATTR_RESULT_MEMORY_SIZE</constant>,
    чтобы получать данные о потреблении памяти результатами запросов
    методом <methodname>PDO::getAttribute</methodname> для драйверов, которые поддерживают метод.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo-firebird">
   <title>Драйвер PDO_FIREBIRD</title>

   <simpara>
    Значения атрибутов
    <!-- TODO Is this a class constant of the driver class? -->
    <constant>FB_ATTR_DATE_FORMAT</constant>,
    <constant>FB_ATTR_TIME_FORMAT</constant>
    и <constant>FB_ATTR_TIMESTAMP_FORMAT</constant>
    теперь возможно получать методом
    <!-- TODO Only for the specific driver class? -->
    <methodname>PDO::getAttribute</methodname>.
   </simpara>

   <para>
    Добавили новые атрибуты, которые указывают уровень изоляции транзакции и режим доступа.
    Добавили пять констант, которые относятся к этой функциональности:

    <simplelist>
     <member><constant>Pdo\Firebird::TRANSACTION_ISOLATION_LEVEL</constant></member>
     <member><constant>Pdo\Firebird::READ_COMMITTED</constant></member>
     <member><constant>Pdo\Firebird::REPEATABLE_READ</constant></member>
     <member><constant>Pdo\Firebird::SERIALIZABLE</constant></member>
     <member><constant>Pdo\Firebird::WRITABLE_TRANSACTION</constant></member>
    </simplelist>
   </para>

   <simpara>
    Конструкторе теперь проверяет работоспособность подключений
    при работе с постоянными соединениями.
   </simpara>

   <simpara>
    Содержимое, которое создаёт драйвер, меняется в зависимости от значения флага
    <constant>FB_API_VER</constant> в файле
    <filename class="headerfile">ibase.h</filename>.
    Эту информацию получают методом <methodname>Pdo\Firebird::getApiVersion</methodname>.
    Эта информация теперь также упоминается в выводе функции
    <function>phpinfo</function>.
   </simpara>

   <para>
    Теперь доступны пять новых типов данных:
    <simplelist type="inline">
     <member><literal>INT128</literal></member>
     <member><literal>DEC16</literal></member>
     <member><literal>DEC34</literal></member>
     <member><literal>TIMESTAMP_TZ</literal></member>
     <member><literal>TIME_TZ</literal></member>
    </simplelist>
    .
    Типы доступны начиная с Firebird 4.0.
   </para>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo-mysql">
   <title>Драйвер PDO_MYSQL</title>

   <simpara>
    Значение атрибута
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant>
    <!-- TODO Only for the specific driver class? -->
    теперь возможно получать методом <methodname>PDO::getAttribute</methodname>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pdo-pgsql">
   <title>Драйвер PDO_PGSQL</title>

   <simpara>
    Добавили поддержку получения информации о потреблении памяти запросами для флага
    <constant>PDO::PGSQL_ATTR_RESULT_MEMORY_SIZE</constant>.
   </simpara>

   <simpara>
    Значение тперь возвращается как число с плавающей точкой
    <type>float</type>, а не как строка (<type>string</type>),
    если столбец принадлежит типу <literal>FLOAT4OID</literal>
    или <literal>FLOAT8OID</literal>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.pgsql">
   <title>Модуль PGSQL</title>

   <simpara>
    Параметр <parameter>conditions</parameter>
    функции <function>pg_select</function> теперь необязателен и принимает пустой массив.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.phar">
   <title>Модуль Phar</title>

   <para>
    В методах
    <simplelist type="inline">
     <member><methodname>Phar::setAlias</methodname></member>
     и <member><methodname>Phar::setDefaultStub</methodname></member>
    </simplelist>
    предварительный тип возврата <type>bool</type> изменили
    на <type>true</type>.
   </para>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.posix">
   <title>Модуль POSIX</title>

   <simpara>
    Функция <function>posix_isatty</function> теперь устанавливает номер ошибки,
    если аргумент дескриптора файла или потока недопустим.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.reflection">
   <title>Модуль Reflection</title>

   <simpara>
    Метод <methodname>ReflectionGenerator::getFunction</methodname>
    теперь разрешили вызывать, когда завершится выполнение генератора.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.sockets">
   <title>Модуль Sockets</title>

   <simpara>
    Значение по умолчанию для параметра <parameter>backlog</parameter>
    функции <function>socket_create_listen</function> изменили
    на <constant>SOMAXCONN</constant>.
    Раньше значение по умолчанию равнялось <literal>128</literal>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.sodium">
   <title>Модуль Sodium</title>

   <simpara>
    Функции семейства <function>sodium_crypto_aead_aes256gcm_<replaceable>*</replaceable></function>
    теперь доступны для центральных процессоров, которые построили по архитектуре aarch64,
    с криптографическими модулями ARM.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.spl">
   <title>Стандартная PHP-библиотека SPL</title>

   <para>
    Предварительный тип возврата в методах
    <simplelist type="inline">
     <member><methodname>SplPriorityQueue::insert</methodname></member>
     <member><methodname>SplPriorityQueue::recoverFromCorruption</methodname></member>
     <member><methodname>SplHeap::insert</methodname></member>
     <member><methodname>SplHeap::recoverFromCorruption</methodname></member>
    </simplelist>
    изменили с <type>bool</type> на <type>true</type>.
   </para>

   <simpara>
    Класс <classname>SplObjectStorage</classname> теперь реализует
    итератор <interfacename>SeekableIterator</interfacename>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.functions.standard">
   <title>Стандартные функции</title>

   <simpara>

    Значение по умолчанию стоимости <literal>'cost'</literal> для алгоритма хеширования <constant>PASSWORD_BCRYPT</constant>
    в функции <function>password_hash</function> увеличили
    с <literal>10</literal> до <literal>12</literal>.
    <!-- RFC: https://wiki.php.net/rfc/bcrypt_cost_2023 -->
   </simpara>

   <simpara>
    Функция <function>debug_zval_dump</function> теперь указывает, упакован ли массив.
   </simpara>

   <simpara>
    Тип возврата в функции <function>long2ip</function> изменили со <literal>string|false</literal>
    <!-- TODO Proper union type -->
    на <type>string</type>.
   </simpara>

   <simpara>
    <!-- TODO Proper union type -->
    Тип возврата в функции <function>highlight_string</function> изменили
    со <literal>string|bool</literal> на <type>string|true</type>.
   </simpara>

   <simpara>
    <!-- TODO Proper union type -->
    Тип возврата в функции <function>print_r</function> изменили
    со <literal>string|bool</literal> на <type>string|true</type>.
   </simpara>

   <!-- TODO: Someone else take care of this - Girgias -->
   <sect4>
    <title>Округление чисел функцией <function>round</function></title>

    <simpara>
     Тип параметра <parameter>mode</parameter> функции
     <function>round</function> расширили
     <!-- TODO Proper union type -->
     до типа <literal>RoundingMode|int</literal>,
     <!-- TODO should be <enumname> ? -->
     который теперь принимает новое перечисление <classname>RoundingMode</classname>.
     <!-- RFC: https://wiki.php.net/rfc/correctly_name_the_rounding_mode_and_make_it_an_enum -->
    </simpara>

    <para>
     В функцию <function>round</function> добавили четыре новых режима:
     <simplelist type="inline">
      <member><!-- <enumidentifier> -->RoundingMode::PositiveInfinity<!-- </enumidentifier> --></member>
      <member><!-- <enumidentifier> -->RoundingMode::NegativeInfinity<!-- </enumidentifier> --></member>
      <member><!-- <enumidentifier> -->RoundingMode::TowardsZero<!-- </enumidentifier> --></member>
      <member><!-- <enumidentifier> -->RoundingMode::AwayFromZero<!-- </enumidentifier> --></member>
     </simplelist>
     <!-- RFC: https://wiki.php.net/rfc/new_rounding_modes_to_round_function -->
    </para>

    <simpara>
     Внутреннюю реализацию округления до целых чисел переписали,
     чтобы реализацию было легче проверять на корректность и поддерживать.
     По ходу переписывания исправили ряд ошибок округления.
     Например, раньше округление числа <literal>0.49999999999999994</literal>
     до ближайшего целого вернуло бы значение <literal>1.0</literal>
     вместо правильного результата — <literal>0.0</literal>.
     Округление также затронет часть дополнительных входных данных
     и выдаст другой по сравнению с предыдущими версиями PHP результат.
    </simpara>

    <simpara>
     Исправили ошибку, которую вызывало «предварительное округление» в функции <function>round</function>.
     Раньше для обработки как десятичного числа, значения наподобие <literal>0.285</literal>,
     которое PHP внутренне представляет как <literal>0.28499999999999998</literal>,
     функция вначале «предварительно округляла» число, а затем округляла результат до <literal>0.29</literal>.
     Однако «предварительное округление» неправильно округляет отдельные числа, поэтому это исправление
     удаляет «предварительное округление» и изменяет способ сравнения чисел, чтобы значения
     правильно округлялись как десятичные числа, а не как числа с плавающей точкой по стандарту IEEE754.
    </simpara>

    <simpara>
     Максимальную точность, с которой функция <function>round</function> умеет обрабатывать числа,
     увеличили на один знак.
     Например, вызов <code>round(4503599627370495.5)</code> возвращал
     число <literal>4503599627370495.5</literal>,
     а теперь возвращает <literal>4503599627370496</literal>.
    </simpara>

   </sect4>
  </sect3>

 </sect2>

 <sect2 xml:id="migration84.other-changes.extensions">
  <title>Другие изменения в модулях</title>

  <sect3 xml:id="migration84.other-changes.extensions.curl">
   <title>Модуль cURL</title>

   <simpara>
    Минимальная версия библиотеки libcurl, которая требуется для работы модуля, теперь 7.61.0.
   </simpara>

   <simpara>
    Опция <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant> больше
    ни на что не влияет, и без предупреждения игнорируется.
    Опция устарела на нижележащем уровне — в библиотеке libcurl 7.11.1,
    а в libcurl 7.62.0 опцию удалили.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.gmp">
   <title>Модуль GMP</title>

   <!-- RFC: https://wiki.php.net/rfc/fix_up_bcmath_number_class -->
   <simpara>
    <classname>GMP</classname>-объекты разрешили приводить к логическому типу <type>bool</type>,
    раньше выдавалась ошибка уровня <constant>E_RECOVERABLE_ERROR</constant>.
    Поведение приведения перегружается так, чтобы <classname>GMP</classname>-объект,
    который представляет значение <literal>0</literal>, приводился к логическому значению &false;.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.libxml">
   <title>Модуль LibXML</title>

   <simpara>
    Минимальная версия библиотеки libxml2, которая требуется для работы модуля, теперь 2.9.4.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.intl">
   <title>Модуль Intl</title>

   <simpara>
    Поведение класса Intl нормализовали так, чтобы при попытке
    использовать неинициализированный объект или при ошибках клонирования
    класс выбрасывал ошибку <exceptionname>Error</exceptionname>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.mbstring">
   <title>Модуль MBString</title>

   <simpara>
    Таблицы данных Юникода обновили до Unicode 16.0.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.mysqlnd">
   <title>Драйвер MySQLnd</title>

   <simpara>
    Добавили поддержку нового типа данных БД MySQL 9 — VECTOR.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.openssl">
   <title>Модуль OpenSSL</title>

   <simpara>
    Минимальная версия библиотеки OpenSSL, которая требуется для работы модуля, теперь 1.1.1.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.pdo-pgsql">
   <title>Драйвер PDO_PGSQL</title>

   <simpara>
    Минимальная версия библиотеки libpq, которая требуется для работы драйвера, теперь 10.0.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.pgsql">
   <title>Модуль PGSQL</title>

   <simpara>
    Минимальная версия библиотеки libpq, которая требуется для работы модуля, теперь 10.0.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.spl">
   <title>Стандартная PHP-библиотека SPL</title>

   <simpara>
    Доступ за пределы массива в <classname>SplFixedArray</classname>
    теперь вместо <exceptionname>RuntimeException</exceptionname>
    выбрасывает исключение <exceptionname>OutOfBoundsException</exceptionname>.
    Поскольку <exceptionname>OutOfBoundsException</exceptionname> —
    дочерний класс <exceptionname>RuntimeException</exceptionname>,
    поведение при попытке перехватить эти исключения не меняется.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.xsl">
   <title>Модуль XSL</title>

   <simpara>
    Объявили типизированные свойства <property>XSLTProcessor::$cloneDocument</property>
    и <property>XSLTProcessor::$doXInclude</property>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.extensions.zlib">
   <title>Модуль Zlib</title>

   <simpara>
    Минимальная версия библиотеки zlib, которая требуется для работы модуля, теперь 1.2.11.
   </simpara>
  </sect3>
 </sect2>

 <sect2 xml:id="migration84.other-changes.performance">
  <title>Производительность</title>

  <sect3 xml:id="migration84.other-changes.performance.core">
   <title>Ядро</title>

   <simpara>
    Улучшили производительность разбора и форматирования чисел с плавающей точкой
    в ZTS-сборках при высокой параллельной нагрузке.
    Это влияет на семейство функций <function>printf</function>,
    и на функции сериализации наподобие <function>json_encode</function>
    или <function>serialize</function>.
   </simpara>

   <simpara>
    Вызов функции <function>sprintf</function> только со спецификаторами <literal>%s</literal>
    и <literal>%d</literal> скомпилирует эквивалентную интерполяцию строки
    без накладных расходов на вызов функции
    и без повторного анализа строки формата.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.bcmath">
   <title>Модуль BCMath</title>

   <simpara>
    Улучили производительность числовых преобразований и операций.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.dom">
   <title>Модуль DOM</title>

   <simpara>
    Производительность метода <methodname>DOMNode::C14N</methodname> значительно
    улучшили при вызове без xpath-выражения.
    Изменение иногда сокращает время запроса на два порядка
    при обработке документов с десятками тысяч узлов.
   </simpara>

   <simpara>
    Улучшили производительность и снизили потребление памяти при XML-сериализации.
   </simpara>

   <simpara>
    Снизили потребление памяти классами узлов.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.ftp">
   <title>Модуль FTP</title>

   <simpara>
    Улучшили производительность загрузки больших файлов
    по протоколу FTP до 10 раз.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.hash">
   <title>Модуль Hash</title>

   <simpara>
    Добавили реализацию алгоритма SHA-256 инструкциями SSE2 и SHA-NI.
    Изменение повышает производительность поддерживаемых процессоров
    примерно в 1,3 раза для SSE2-инструкций и до 3-5 раз для инструкций SHA-NI.
    Благодарим Колина Персиваля (англ. Colin Percival), разработчика сервиса резервного копирования Tarsnap, за эту оптимизацию.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.mbstring">
   <title>Модуль MBString</title>

   <simpara>
    Функция <function>mb_strcut</function> теперь быстрее обрабатывает строки
    в кодировках UTF-8 и UTF-16.
   </simpara>

   <simpara>
    Поиск названий кодировок многобайтовых строк теперь выполняется намного быстрее.
   </simpara>

   <simpara>
    Значительно улучшили производительность преобразования строк в кодировке SJIS-win в кодировку Unicode.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.mysqlnd">
   <title>Драйвер MySQLnd</title>

   <simpara>
    Улучшили производительность при обработке драйвером MySQLnd значений в кавычках в MySQL-запросах.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.pcre">
   <title>Модуль PCRE</title>

   <simpara>
    Улучшили производительность именованных групп захвата.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.random">
   <title>Модуль Random</title>

   <simpara>
    Улучшили производительность класса <classname>Random\Randomizer</classname>,
    повышенное внимание уделили методам
    <methodname>Random\Randomizer::getBytes</methodname>
    и <methodname>Random\Randomizer::getBytesFromString</methodname>.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.simplexml">
   <title>Модуль SimpleXML</title>

   <simpara>
    Улучшили производительность и снизили потребление памяти при XML-сериализации.
   </simpara>
  </sect3>

  <sect3 xml:id="migration84.other-changes.performance.standard">
   <title>Стандартные функции</title>

   <simpara>
    Значительно улучшили производительность функций <function>strspn</function>
    и <function>strcspn</function>.
    Теперь функции работают за линейное время, а не ограничиваются квадратичным временем.
   </simpara>

   <simpara>
    Улучшили производительность функции <function>strpbrk</function>.
   </simpara>

   <simpara>
    Функция <function>get_browser</function> теперь работает
    до 1,5-2,5 раза быстрее в отдельных тестах.
   </simpara>
  </sect3>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
