<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1268a5eebbd09dbc4c4d5272c2bcdc0b035c256c Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<appendix xml:id="transports" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Список транспортных протоколов для работы с сокетами</title>
 <para>
  Список приводит информацию об URL-подобных транспортных протоколах для работы с сокетами, которые поддерживает PHP.
  Эти протоколы транспортного уровня встроили в PHP для работы с функциями наподобие
  <function>fsockopen</function>, которые взаимодействуют с сокетами на основе потоков,
  и функцией <function>stream_socket_client</function>. Протоколы, которые перечисляет список,
  <emphasis>не</emphasis> применяют
  <link linkend="ref.sockets">к функциям класса Socket</link> модуля Sockets.
 </para>

 <para>
  Список транспортов, установленных в текущей версии PHP,
  возвращает функция <function>stream_get_transports</function>.
 </para>

 <section xml:id="transports.inet">
  <title>Сокеты интернет-домена: TCP, UDP, SSL и TLS</title>
  <simpara>
   В список транспортов для сокетов интернет-домена входят протоколы <literal>ssl://</literal>, <literal>tls://</literal>,
   <literal>sslv2://</literal> и <literal>sslv3://</literal>.
  </simpara>

  <note>
   <simpara>
    Функции будут использовать транспортный протокол <literal>tcp://</literal>, если не указали другой транспорт.
   </simpara>
  </note>

  <itemizedlist>
   <listitem><simpara><literal>127.0.0.1</literal></simpara></listitem>
   <listitem><simpara><literal>fe80::1</literal></simpara></listitem>
   <listitem><simpara><literal>www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://127.0.0.1</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://fe80::1</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>udp://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>ssl://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>sslv2://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>sslv3://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>tls://www.example.com</literal></simpara></listitem>
  </itemizedlist>

  <simpara>
   Наряду с целевым адресом сокеты интернет-домена ожидают номер порта.
   При работе с функцией <function>fsockopen</function> порт указывается вторым параметром
   и поэтому не влияет на формирование URL-адреса транспорта. При работе
   с функцией <function>stream_socket_client</function> и другими функциями для работы с потоками,
   как и при работе с традиционными URL-адресами, номер порта указывается как суффикс —
   через двоеточие в конце транспортного URL-адреса.
  </simpara>

  <itemizedlist>
   <listitem><simpara><literal>tcp://127.0.0.1:80</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://[fe80::1]:80</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://www.example.com:80</literal></simpara></listitem>
  </itemizedlist>

  <note>
   <title>Числовые IPv6-адреса с номерами портов</title>
   <simpara>
    Хотя во втором примере примеры IPv4-адресов и имя хоста
    не изменились, за исключением добавления номера порта после
    двоеточия, IPv6-адрес заключили в квадратные скобки:
    <literal>[fe80::1]</literal>. Это сделали, чтобы отличать
    двоеточие в IPv6-адресе от двоеточия—разделителя номера порта.
   </simpara>
  </note>

  <simpara>
   Транспортные протоколы <literal>ssl://</literal> и <literal>tls://</literal>,
   которые доступны, только если PHP скомпилировали с поддержкой модуля openssl, —
   расширения транспорта <literal>tcp://</literal> для включения SSL-шифрования.
  </simpara>

  <simpara>
   Транспорт <literal>ssl://</literal> попытается согласовать соединение по протоколам SSL V2
   или SSL V3, в зависимости от возможностей и предпочтений удаленного хоста.
   Протоколы <literal>sslv2://</literal> и <literal>sslv3://</literal>
   явно выберут протокол SSL V2 или SSL V3.
  </simpara>
 </section>

 <section xml:id="transports.unix">
  <title>Сокеты Unix-домена: UNIX и UDG</title>
  <simpara>
   В список транспортов для сокетов домена Unix входят протоколы <literal>unix://</literal>
   и <literal>udg://</literal>
  </simpara>

  <itemizedlist>
   <listitem><simpara><literal>unix:///tmp/mysock</literal></simpara></listitem>
   <listitem><simpara><literal>udg:///tmp/mysock</literal></simpara></listitem>
  </itemizedlist>

  <simpara>
   Протокол <literal>unix://</literal> открывает доступ к соединению с сокетом на основе потока в Unix-домене.
   Протокол <literal>udg://</literal> предоставляет альтернативный транспорт
   к сокету в домене Unix — через протокол пользовательских датаграмм.
  </simpara>

  <simpara>
   Сокеты Unix-домена, в отличие от сокетов интернет-домена, не ожидают номер порта.
   При работе с функцией <function>fsockopen</function>
   для параметра <parameter>portno</parameter> требуется установить значение 0.
  </simpara>

  <note>
   <simpara>
    ОС Windows не поддерживают сокеты домена Unix.
   </simpara>
  </note>
 </section>

</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
