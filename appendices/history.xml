<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: fecf93309b34b59e23dda35530d83b0f1b05ab84 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="history" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>История PHP и смежных проектов</title>
 <para>
  PHP прошёл долгий путь с момента рождения
  в середине 1990-х. От скромного появления до превращения
  в один из самых популярных языков веб-программирования.
  Эволюция PHP — сказка для компьютерных фанатов. Такой взрывной рост был нелёгкой задачей.
  Краткую историю становления PHP рассказывают главы этого раздела.
  Частичку истории Интернета хранят
  <link xlink:href="&url.php.museum;">в Музее PHP</link> старые выпуски языка.
 </para>

 <sect1 xml:id="history.php">
  <title>История PHP</title>

  <sect2 xml:id="history.phpfi">
   <title>PHP Tools, FI, Construction Kit и PHP/FI</title>
   <para>
    PHP, как знают фанаты языка, — преемник продукта,
    который назывался PHP/FI. Первое воплощение PHP, которое в 1994
    создал Расмус Лердорф, было простым набором CGI-скриптов
    на языке программирования Си. Изначально Расмус
    пользовался скриптами, чтобы отслеживать посещения своего веб-резюме, и назвал
    набор этих скриптов Personal Homepages Tools («Инструменты
    для персональных домашних страниц»), но чаще упоминалось
    название PHP Tools. Со временем требовалось всё больше
    улучшений функциональности. Расмус переписал PHP Tools и создал
    более крупную и богатую реализацию. Новая реализация умела
    взаимодействовать с базами данных и решать другие задачи.
    Так появилась платформа, на которой пользователи создавали
    простые динамические веб-приложения наподобие гостевых книг.
    В июне 1995 года Расмус <link xlink:href="&url.php.release1.0.0;">выложил</link>
    исходный код PHP Tools в открытый доступ, что позволило разработчикам использовать
    наработки Лердорфа по своему усмотрению. Это также разрешало и поощряло пользователей
    исправлять ошибки в коде и улучшать его.
   </para>
   <para>
    В сентябре того же года Расмус посмотрел на PHP шире и — на короткое время — убрал из названия аббревиатуру PHP.
    Теперь в виде инструмента FI (сокращение от «Интерпретатор Форм») новая
    реализация включала в себя набор основных функций
    того PHP, который мы знаем сегодня. Функции языка включали Perl-подобные переменные,
    автоматическую интерпретацию форм и встраиваемый в HTML синтаксис. Синтаксис
    языка был похож на язык программирования Perl, хотя и был гораздо более ограниченным,
    простым, и отчасти противоречивым. Чтобы вставлять код в HTML-файл,
    разработчикам пришлось использовать HTML-комментарии. Хотя этот метод был
    недостаточно хорошо принят, FI по-прежнему набирал популярность как
    CGI-инструмент, но всё-таки не как язык. Однако перемены начались
    в следующем месяце, когда в октябре 1995 года Расмус выпустил полностью
    переписанный код. С вернувшимся именем PHP, но уже сокращённым от Personal
    Home Page Construction Kit, это был первый релиз, который мог похвастаться
    расширенным интерфейсом сценариев. Язык намеренно напоминал язык программирования Си
    по структуре, поэтому разработчики, которые были знакомы с Си,
    Perl и похожими языками, легко воспринимали язык. Поскольку до сих пор разработчики
    ограничивались UNIX- и POSIX-совместимыми системами, они стали исследовать
    пути работы с PHP на системах Windows NT.
   </para>
   <para>
    Код получил ещё одно существенное преобразование в апреле 1996 года.
    Объединив названия предыдущих версий, Расмус представил PHP/FI.
    Реализации второго поколения начали по-настоящему развивать PHP из набора
    инструментов в самостоятельный язык программирования.
    PHP включал в себя встроенную поддержку баз данных DBM, mSQL и Postgres95,
    блоки данных cookies, поддержку функций, которые определяли пользователи, и многое другое.
    В июне PHP/FI присвоили версию 2.0. Интересный факт —
    существовала только одна полная версия PHP 2.0. Когда она, наконец,
    в ноябре 1997 года вышла из статуса бета-версии, базовый движок синтаксического анализа уже
    полностью переписали.
   </para>
   <para>
    Несмотря на короткую историю разработки, PHP/FI продолжал набирать популярность
    в молодом мире веб-разработки. В 1997 и 1998, PHP/FI стал культом для
    нескольких тысяч пользователей по всему миру. Исследования Netcraft в мае 1998 года
    показали, что почти 60 тысяч доменов передавали заголовки, которые содержали значение «PHP»,
    что подтверждало установку на сервере языка PHP.
    Это число равнялось примерно 1 % от всех доменов в Интернете в то время.
    Несмотря на эти впечатляющие цифры, развитие PHP/FI было обречено на ограничения; хотя
    ряд участников вносил незначительный вклад, язык по-прежнему в основном разрабатывал один человек.
   </para>
   <para>
    <example>
     <title>Пример кода на PHP/FI</title>
     <programlisting role="html">
<![CDATA[
<!--include /text/header.html-->

<!--getenv HTTP_USER_AGENT-->
<!--ifsubstr $exec_result Mozilla-->
  Эй, у вас Нетскейп!<p>
<!--endif-->

<!--sql database select * from table where user='$username'-->
<!--ifless $numentries 1-->
  Извините, такой записи нет<p>
<!--endif exit-->
  Добро пожаловать, <!--$user-->!<p>
  На вашем счету осталось <!--$index:0--> "кредитов".<p>

<!--include /text/footer.html-->
]]>
     </programlisting>
    </example>
   </para>
  </sect2>

  <sect2 xml:id="history.php3">
   <title>PHP 3</title>
   <para>
    PHP 3.0 был первой версией, которая напоминала PHP, каким его знают сегодня.
    Посчитав PHP/FI 2.0 всё ещё неэффективным и недостаточно функциональным
    для написания кода в коммерческих приложениях, которые разрабатывали для университетского проекта,
    Энди Гутманс и Зив Сураски из Тель-Авива начали ещё раз заново переписывать
    парсер в 1997 году. Связавшись с Расмусом, они обсудили различные аспекты
    текущей реализации и их новой разработки PHP. Чтобы улучшить движок и использовать
    существующую базу пользователей PHP/FI, Энди, Расмус и Зив решили сотрудничать
    для развития нового, независимого языка программирования. Этот совершенно новый
    язык выпустили под новым названием, без упоминания о персональном назначении,
    как в PHP/FI 2.0.
    Язык переименовали просто в PHP, а его значение превратилось в рекурсивный акроним —
    PHP: Hypertext Preprocessor.
   </para>
   <para>
    Сильной стороной PHP 3.0 была расширяемость ядра.
    Кроме того что PHP обеспечивал пользователей надёжной инфраструктурой из множества
    отдельных баз данных, протоколов и API-интерфейсов, расширяемость PHP 3.0
    привлекла к языку много сторонних разработчиков, которые хотели добавить
    в него свои модули. Возможно, это и был главный ключ к успеху,
    но стоит добавить, что немаловажным шагом оказалась поддержка
    объектно-ориентированного синтаксиса и намного более мощного и последовательного синтаксиса
    самого языка.
   </para>
   <para>
    В июне 1998 года со множеством новых разработчиков со всего мира, которые присоединились
    к проекту, новая команда разработчиков PHP объявила PHP 3.0 официальным преемником
    PHP/FI 2.0. Активная разработка PHP/FI 2.0, которая практически прекратилась в ноябре
    предыдущего года, теперь официально закончилась. Примерно через девять месяцев
    открытого публичного тестирования, когда объявили об официальном выпуске PHP 3.0,
    PHP уже установили на более чем 70 000 доменах по всему миру и язык больше
    не ограничивается POSIX-совместимыми операционными системами. Относительно
    небольшая доля доменов с установленным PHP размещалась на серверах под
    управлением Windows 95, 98 и NT, и Macintosh. На пике популярности
    доля веб-серверов в Интернете, на которые установили PHP 3.0, составляла около 10 %.
   </para>
  </sect2>

  <sect2 xml:id="history.php4">
   <title>PHP 4</title>
   <para>
    К зиме 1998 года, практически сразу после официального выхода PHP 3.0,
    Энди Гутманс и Зив Сураски начали переработку ядра PHP. В задачи входило
    увеличение производительности сложных приложений и улучшение модульности
    кодовой базы PHP. PHP 3.0 разрешил подобным приложениям успешно работать
    с набором баз данных и поддерживать большое количество API-интерфейсов
    и протоколов, но у PHP 3.0 не было качественной поддержки модулей и приложения
    работали неэффективно.
   </para>
   <para>
    Новый движок, который назвали Zend Engine (от имён создателей: Zeev и Andi),
    успешно справлялся с поставленными задачами. Впервые движок представили
    в середине 1999 года. PHP 4.0, основанный на этом движке и принёсший с собой
    набор дополнительных функций, официально вышел в мае 2000 года, почти через
    два года после выхода предшественника. Кроме
    значительного улучшения производительности, в PHP 4.0 был ещё ряд ключевых
    нововведений: поддержка намного большего числа веб-серверов,
    поддержка HTTP-сессий, буферизация вывода, более безопасные способы обработки
    информации, которую вводили пользователи, и набор новых языковых конструкций.
   </para>
  </sect2>

  <sect2 xml:id="history.php5">
   <title>PHP 5</title>
   <para>
    В июле 2004, после долгой разработки и нескольких предварительных выпусков,
    выпустили PHP 5. В основном версия управляется ядром
    <literal>Zend Engine 2.0</literal> с новой объектной моделью
    и десятком других нововведений.
   </para>
   <para>
    Команда разработчиков PHP включает в себя десятки разработчиков, а также десятки
    других организаций, которые работают над проектами, которые связаны с PHP и поддержкой языка:
    библиотекой PEAR, репозиторием PECL и документацией, а также базовой инфраструктурой сети
    более чем из ста серверов на шести из семи континентах мира.
    Основываясь на статистике прошлых лет, можно с уверенностью предположить, что
    PHP теперь установили на десятки или даже, возможно, сотни миллионов доменов
    по всему миру.
   </para>
  </sect2>

  <sect2 xml:id="history.php6">
   <title>PHP 6</title>
   <para>
    В план обновления движка PHP 6 входила полная поддержка Юникода.
    Позже от этой работы отказались, но функции, которые планировались
    для PHP 6, внедрили в очередные выпуски:
    в PHP 5.3 внедрили поддержку <link linkend="language.namespaces">пространств имён</link>,
    а в PHP 5.4 — <link linkend="language.oop5.traits">трейты</link>
    и «короткий» синтаксис массива.
   </para>
  </sect2>

  <sect2 xml:id="history.php7">
   <title>PHP 7</title>
   <para>
    PHP 7.0 выпустили в 2015 с обновлённой версией
    ядра — <literal>Zend Engine 3.0</literal>, в которой улучшили работу
    с памятью и до двух раз по сравнению с PHP 5.6 увеличили производительность,
    включили стабильную поддержку 64-разрядных систем, улучшили работу
    с исключениями, добавили безопасный генератор случайных чисел,
    <link linkend="language.operators.comparison.coalesce">оператор объединения
    с null (??)</link>, <link linkend="language.oop5.anonymous">анонимные
    классы</link> и другие функции.
   </para>
   <para>
    В более поздних выпусках серии PHP 7 появилось больше функций языка:
    <link linkend="function.list">короткий синтаксис присваивания значений списку переменных</link> (7.1),
    объявление типа object параметрам и значениям возврата (7.2), новый гибкий
    <link linkend="language.types.string.syntax.heredoc">heredoc-</link>
    и <link linkend="language.types.string.syntax.nowdoc">nowdoc-синтаксис</link> (7.3),
    типизированные свойства (7.4) и новый
    <link linkend="class.ffi">интерфейс внешних функций</link> (7.4).
   </para>
  </sect2>

  <sect2 xml:id="history.php8">
   <title>PHP 8</title>
   <para>
    Первый выпуск версии состоялся в 2020. PHP 8.0 стал ещё одним крупным обновлением
    языка PHP. Версия содержала много новых функций и оптимизаций, в которые вошли:
    <link linkend="functions.named-arguments">именованные аргументы</link>,
    <link linkend="language.types.declarations.composite.union">объединение
    типов</link>, <link linkend="language.attributes">атрибуты</link>,
    <link linkend="language.oop5.decon.constructor.promotion">продвижение параметров
    конструктора до свойств класса</link>, выражение
    <link linkend="control-structures.match"><literal>match</literal></link>,
    <link linkend="language.oop5.basic.nullsafe">null-безопасный
    оператор (<literal>?-></literal>)</link>, новый оптимизирующий JIT-компилятор
    и улучшения в системе типов, обработке ошибок и согласованности.
   </para>
   <para>
    В более поздних выпусках серии PHP 8 представили новые функции языка,
    в том числе <link linkend="language.enumerations">перечисления</link> (8.1),
    <link linkend="language.fibers">файберы</link> (8.1),
    <link linkend="language.oop5.basic.class.readonly">классы только для чтения</link> (8.2),
    Типы дизъюнктивной нормальной формы (DNF) (8.2) и типизированные
    константы классов (8.3).
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="history.php.related">
  <title>История смежных с PHP проектов</title>

  <!-- Hope Stig and/or Egon can do this

  <sect2 xml:id="history.phpdoc">
   <title>Проект документации по PHP</title>
   <para>
   </para>
  </sect2>

  -->

  <sect2 xml:id="history.pear">
   <title>PEAR</title>
   <para>
    <link xlink:href="&url.php.pear;">PEAR</link> (<literal>PHP Extension and
    Application Repository</literal> - Репозиторий Приложений и Модулей PHP.
    Изначально, PHP Extension and Add-on Repository - Репозиторий Дополнений
    и Модулей PHP) - это PHP-версия базовых классов. В будущем возможен
    его рост и становление ключевым способом публикации модулей PHP среди разработчиков.
   </para>
   <para>
    PEAR зародился в ходе дискуссий на встрече разработчиков PHP (PHP Developers'
    Meeting - PDM), проходившей в январе 2000 года в Тель-Авиве.
    Автором PEAR является Стиг С. Баккен (Stig S. Bakken), который
    посвятил разработку своей первой дочери, Мэлин Баккен (Malin Bakken).
   </para>
   <para>
    С начала 2000 года PEAR вырос до огромного проекта с большим количеством
    разработчиков, работающих над реализацией общего и повторно используемого
    функционала на благо для всего сообщества PHP. В настоящее время PEAR
    включает в себя широкий спектр классов для работы с
    базами данных, кеширования контента, математических вычислений,
    электронной коммерции и многого другого.
   </para>
   <para>
    Дополнительная информация о PEAR может быть найдена в <link
    xlink:href="&url.php.pear.manual;">документации</link>.
   </para>
  </sect2>

  <sect2 xml:id="history.phpqa">
   <title>Инициатива Гарантии Качества PHP</title>
   <para>
    Группа <link xlink:href="&url.php.prerelease;">Инициативы Гарантии Качества
    PHP</link> была основана весной 2000 в ответ на критику недостаточного
    бета-тестирования PHP для производственных окружений. Сейчас эта группа
    состоит из людей, прекрасно понимающих основу кода PHP. Эти разработчики
    тратят множество времени на обнаружение и устранение ошибок в PHP. Кроме
    того, много других членов команды тестируют эти исправления и сообщают о
    результатах их работы на различных платформах.
   </para>
  </sect2>

  <sect2 xml:id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    <link xlink:href="&url.php.gtk;">PHP-GTK</link> является модулем PHP
    для написания GUI-приложений, работающих на стороне клиента. Андрей
    Змиевски (Andrei Zmievski) вспоминает процесс планирования и разработки
    PHP-GTK:
   </para>
   <blockquote>
    <para>
     Я всегда интересовался GUI-программированием, и я нахожу Gtk+ очень
     приятным средством разработки, исключая то, что работать с ним
     на C немного утомительно. После просмотра PyGtk и GTK-Perl, я решил
     попробовать написать интерфейс PHP для работы с Gtk+, пусть с минимальными
     возможностями. Начиная с августа 2000 года, у меня появилось немного больше
     свободного времени и я начал эксперименты. В разработке я основывался на
     PyGtk, который обладает большим количеством возможностей и приятным
     объектно-ориентированным интерфейсом. Джеймс Хэнстридж (James
     Henstridge), автор PyGtk, давал очень полезные советы в течение первых
     этапов разработки.
    </para>
    <para>
     Написание вручную интерфейсов ко всем функциям Gtk+ даже не
     рассматривалось. Я остановился на идее генератора кода, похожего на
     аналогичный генератор PyGtk. Генератор читает <filename>.defs</filename>
     файлы, содержащие информацию о классах, константах и методах Gtk+
     и генерирует C-код, являющийся интерфейсом в PHP.
     То, что не могло быть сгенерировано автоматически, создаётся вручную в
     <filename>.overrides</filename> файлах.
    </para>
    <para>
     Работа над генератором кода и самой инфраструктурой шла достаточно
     долго, ввиду того, что я не имел достаточно свободного времени
     для работы. После того, как я показал PHP-GTK Фрэнку Кромману (Frank
     Kromman), он заинтересовался и начал помогать мне с генератором
     кода и версией для Win32. Когда мы написали и запустили первую программу
     Hello World, это было очень захватывающе. Потребовалось несколько
     месяцев для придания PHP-GTK презентабельного вида и первая версия
     вышла 1 марта 2001 года. История быстро попала в SlashDot.
    </para>
    <para>
     Чувствуя, что PHP-GTK может расти, я создал отдельные почтовые
     конференции, CVS-репозиторий, а также сайт gtk.php.net с помощью Колина
     Виеброка (Colin Viebrock). Требовалась документация и здесь на помощь
     пришёл Джеймс Мур (James Moore).
    </para>
    <para>
     Со времён создания PHP-GTK получил широкую известность. У нас есть своя
     группа документирования, люди начинают писать модули для PHP-GTK и
     все больше и больше прекрасных приложений с его помощью.
    </para>
   </blockquote>
  </sect2>
 </sect1>

 <sect1 xml:id="history.php.books">
  <title>Книги о PHP</title>
  <para>
   С ростом PHP, его начали узнавать по всему миру, как популярный язык
   программирования. Одним из наиболее интересных способов суждения об этом
   может послужить обзор книг о PHP.
  </para>
  <para>
   Насколько нам известно, первой книгой, посвящённой PHP, была чешская
   книга, выпущенная в апреле 1999 года под названием 'PHP - tvorba
   interaktivních internetových aplikací' (<emphasis>PHP - Создание
   интерактивных интернет-приложений</emphasis>). Автором книги является Jirka
   Kosek. В следующем месяце следом за ней выходит немецкая книга Эгона
   Шмидта (Egon Schmid), Кристиана Картуса (Christian Cartus) и Ричарда
   Блюма (Richard Blum). Вскоре после этого была опубликована первая на
   английском языке книга, посвящённая PHP, - 'Core PHP Programming' Леона
   Аткинсона (Leon Atkinson). Все эти книги описывали PHP 3.0.
  </para>
  <para>
   Эти книги были первыми в своём роде, и вскоре было выпущено большое
   количество книг различных авторов и издательств. Существует более 400
   книг на английском, более 100 на немецком, и больше 50 на
   французском и испанском языках! Кроме того, можно найти книги
   о PHP на многих других языках, включая корейский, японский и иврит.
  </para>
  <para>
   Очевидно, что такое большое количество книг, написанных разными авторами
   и опубликованных многими издательствами на столь многих языках, является
   весомым подтверждением мирового успеха PHP.
  </para>
 </sect1>

 <sect1 xml:id="history.php.publications">
  <title>Публикации, посвящённые PHP</title>
  <para>
   По нашей информации, первая статья о PHP была опубликована в чешском
   варианте 'Computerworld' весной 1998 и освещала PHP 3.0. Как и в случае
   с книгами, эта была первая в серии статья из множества посвящённых PHP
   и опубликованных в различных известных журналах.
  </para>
  <para>
   Статьи о PHP публиковались в 'Dr. Dobbs', 'Linux Enterprise', 'Linux
   Magazine' и многих других изданиях. А статьи о переносе основанных на
   ASP приложений на PHP под Windows появились даже в принадлежащей самому
   <productname>Microsoft</productname> <acronym>MSDN</acronym>!
  </para>
 </sect1>

</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
