<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 23ea6be076881a34e1d454e9680968ece085f7f6 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="evembed.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EvEmbed::__construct</refname>
  <refpurpose>Конструктор объекта EvEmbed</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier>
   <methodname>EvEmbed::__construct</methodname>
   <methodparam>
    <type>object</type>
    <parameter>other</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>callable</type>
    <parameter>callback</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>mixed</type>
    <parameter>data</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>int</type>
    <parameter>priority</parameter>
   </methodparam>
  </constructorsynopsis>
  <para>
   Это довольно продвинутый тип наблюдателя, который разрешает встроить один цикл
   событий в другой. Пока поддерживаются только события ввода-вывода
   во встроенном цикле, другие типы наблюдателей иногда обрабатываются с задержкой
   или неправильно, и их не рекомендуют использовать.
  </para>
  <para>
   Подробнее об этом рассказывает страница
   <link xlink:href="http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_embed_code_when_one_backend_">документации libev</link>.
  </para>
  <para>
   Этот наблюдатель наиболее полезен
   в <emphasis>BSD</emphasis> системах без работающего
   <literal>kqueue</literal> для поддержки обработки большого количества сокетов.
   Смотрите пример на этой странице.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>other</parameter>
    </term>
    <listitem>
     <para>
      Экземпляр класса
      <classname>EvLoop</classname>.
      Событийный цикл для встраивания. Этот цикл должен быть встраиваемым. Смотрите
      описание метода <methodname>Ev::embeddableBackends</methodname>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>callback</parameter>
    </term>
    <listitem>
     <para>
      Доступные значения параметра описывает страница
      «<link linkend="ev.watcher-callbacks">Callback-функции наблюдателей</link>».
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>data</parameter>
    </term>
    <listitem>
     <para>
      Пользовательские данные, ассоциированные с наблюдателем.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>priority</parameter>
    </term>
    <listitem>
     <para>
      «<link linkend="ev.constants.watcher-pri">Приоритет наблюдателя</link>».
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример встраивания цикла, который создали через kqueue, в событийный цикл по умолчанию</title>
  <programlisting role="php">
<![CDATA[
<?php
/*
 * Проверьте, доступен ли kqueue, и создайте бэкенд kqueue
 * для взаимодействия с сокетами; часто это работает с любой реализацией kqueue.
 * Сохраните событийный цикл kqueue/socket-only в loop_socket. Опционально указывают
 * флаг EVFLAG_NOENV
 *
 * Пример взяли из
 * http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#Examples_CONTENT-9
 */
$loop        = EvLoop::defaultLoop();
$socket_loop = NULL;
$embed       = NULL;

if (Ev::supportedBackends() & ~Ev::recommendedBackends() & Ev::BACKEND_KQUEUE) {
    if (($socket_loop = new EvLoop(Ev::BACKEND_KQUEUE))) {
        $embed = new EvEmbed($loop);
    }
}

if (!$socket_loop) {
    $socket_loop = $loop;
}

// Теперь используйте $socket_loop для каждого сокета, а $loop для всего остального

?>
]]>
  </programlisting>
  </example>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member>
    <methodname>Ev::embeddableBackends</methodname>
   </member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
