<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b1116af46680f7baf89c46610430a3b63ce9a1f0 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<section xml:id="info.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Настройки PHP/Параметры конфигурации информации</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.assert.active">assert.active</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       Устарело с PHP 8.3.0
      </entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.bail">assert.bail</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Устарело с PHP 8.3.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.warning">assert.warning</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Устарело с PHP 8.3.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.callback">assert.callback</link></entry>
      <entry>NULL</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Устарело с PHP 8.3.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.quiet-eval">assert.quiet_eval</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Удалено в PHP 8.0.0</entry>
     </row>
     <row>
      <entry><link linkend="ini.assert.exception">assert.exception</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>
       До PHP 8.0.0 значение по умолчанию было <literal>"0"</literal>.
       Устарело с PHP 8.3.0
      </entry>
     </row>
     <row>
      <entry><link linkend="ini.enable-dl">enable_dl</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry>&removed.php.future;</entry>
     </row>
     <row>
      <entry><link linkend="ini.max-execution-time">max_execution_time</link></entry>
      <entry>"30"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.max-input-time">max_input_time</link></entry>
      <entry>"-1"</entry>
      <entry><constant>INI_PERDIR</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
      <entry>"64"</entry>
      <entry><constant>INI_PERDIR</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
      <entry>1000</entry>
      <entry><constant>INI_PERDIR</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.zend.enable-gc">zend.enable_gc</link></entry>
      <entry>"1"</entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry></entry>
     </row>
     <row>
      <entry><link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry>Доступна с PHP 8.3.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link></entry>
      <entry>"0"</entry>
      <entry><constant>INI_SYSTEM</constant></entry>
      <entry>Доступна с PHP 8.3.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.fiber.stack-size">fiber.stack_size</link></entry>
      <entry></entry>
      <entry><constant>INI_ALL</constant></entry>
      <entry>Доступна с PHP 8.1.0.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.assert.active">
    <term>
     <parameter>assert.active</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Включение выполнение <function>assert</function>.
      <link linkend="ini.zend.assertions">zend.assertions</link> следует использовать
      вместо этого для управления поведением функции <function>assert</function>.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.bail">
    <term>
     <parameter>assert.bail</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Завершение работы скрипта при провале проверки утверждений.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.warning">
    <term>
     <parameter>assert.warning</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Вызов предупреждений PHP для каждой проваленной проверки утверждения.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.callback">
    <term>
     <parameter>assert.callback</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Пользовательская функция, вызываемая при провале проверки утверждений.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.quiet-eval">
    <term>
     <parameter>assert.quiet_eval</parameter>
     <type>bool</type>
    </term>
    <listitem>
     &warn.feature.removed-8-0-0;
     <para>
      Используйте эту настройку функции <function>error_reporting</function>
      во время выполнения проверки утверждений. При включении настройки сообщения
      об ошибках во время проверки утверждений показываться не будут (неявный
      вызов error_reporting(0)). Если настройка выключена, ошибки будут выдаваться
      в соответствии с настройками <function>error_reporting</function>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.exception">
    <term>
     <parameter>assert.exception</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Выбрасывает исключение <classname>AssertionError</classname> в случае неудачной проверки утверждения.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.enable-dl">
    <term>
     <parameter>enable_dl</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Директива позволяет включать и выключать динамическую подгрузку модулей
      PHP с помощью функции <function>dl</function>.
     </para>
     <para>
      Главной причиной, по которой требуется выключение динамической загрузки,
      является безопасность. С помощью динамической загрузки можно обойти все
      <link linkend="ini.open-basedir">open_basedir</link> ограничения. По
      умолчанию динамическая загрузка разрешена.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-execution-time">
    <term>
     <parameter>max_execution_time</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Эта директива задаёт максимальное время в секундах, в течение которого
      скрипт должен полностью загрузиться. Если этого не происходит, парсер
      завершает работу скрипта. Этот механизм помогает предотвратить зависание сервера
      из-за плохо написанного скрипта. По умолчанию на загрузку даётся
      <literal>30</literal> секунд. Если PHP запущен из
      <link linkend="features.commandline">командной строки</link>, это значение
      по умолчанию равно <literal>0</literal>.
     </para>
     <para>
      В системах, отличных от Windows, на максимальное время выполнения не влияют системные вызовы, потоковые
      операции и т.п. За дополнительной информацией обращайтесь к документации к
      функции <function>set_time_limit</function>.
     </para>
     <para>
      Веб-серверы обычно имеют свои настройки времени ожидания, по превышении которого сами
      завершают выполнение скрипта PHP. В Apache есть директива
      <literal>Timeout</literal>, в IIS есть функция CGI timeout. В обоих случаях
      по умолчанию установлено 300 секунд. Точные значения можно узнать из
      документации к веб-серверу.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-time">
    <term>
     <parameter>max_input_time</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Эта директива задаёт максимальное время в секундах, в течение которого скрипт
      должен разобрать все входные данные, переданные запросами вроде POST или GET.
      Это время измеряется от момента, когда PHP вызван на сервере до
      момента, когда скрипт начинает выполняться.
      Значение по умолчанию <literal>-1</literal>, что означает, что будет использоваться
      <link linkend="ini.max-execution-time">max_execution_time</link>. Если установить
      равным <literal>0</literal>, то ограничений по времени не будет.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-nesting-level">
    <term>
     <parameter>max_input_nesting_level</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Задаёт максимальную глубину вложенности
      <link linkend="language.variables.external">входных переменных</link> (то есть
      <varname>$_GET</varname>, <varname>$_POST</varname>.)
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-vars">
    <term>
     <parameter>max_input_vars</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Сколько <link linkend="language.variables.external">входных переменных</link>
      может быть принято в одном запросе (ограничение накладывается на каждую из
      глобальных переменных $_GET, $_POST и $_COOKIE отдельно).
      Использование этой директивы снижает
      вероятность сбоев в случае атак с использованием хеш-коллизий. Если входных
      переменных больше, чем задано директивой, выбрасывается предупреждение
      <constant>E_WARNING</constant>, а все последующие переменные в запросе
      игнорируются.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.enable-gc">
    <term>
     <parameter>zend.enable_gc</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Включает или отключает сборщик циклических ссылок.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.max-allowed-stack-size">
    <term>
     <parameter>zend.max_allowed_stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Максимальное пространство стека, которое операционная система позволяет занимать программе.
      Попытка занять больше места, чем позволяет операционная система, обычно приводит
      к жёсткому аварийному завершению работы, при этом отладочная информация будет недоступна.
      Чтобы облегчить отладку, движок выбрасывает ошибку <classname>Error</classname> до того,
      как это произойдёт (когда программа использует более
      <link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link>-<link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link>
      байт стека).
     </para>
     <para>
      Рекурсия в пользовательском коде не занимает место в стеке.
      Однако внутренние функции и магические методы потребляют его.
      Очень глубокая рекурсия с участием этих функций может привести к тому,
      что программа исчерпает всё доступное место в стеке.
     </para>
     <para>
      Для этого параметра возможны следующие значения:
      <simplelist>
       <member>
        <literal>0</literal>:
        Автоматическое определение максимального пространства стека,
        которое операционная система позволяет занимать программе.
        Значение используется по умолчанию.
        Если определение невозможно, используется известное системное значение по умолчанию.
       </member>
       <member>
        <literal>-1</literal>: Отключает проверку размера стека в движке.
       </member>
       <member>
        Положительное целое число: Фиксированный размер в байтах.
        Слишком большое значение приведёт к тому же,
        что и отключение проверки размера стека.
       </member>
      </simplelist>
     </para>
     <para>
      Поскольку размер стека <link linkend="language.fibers">файберов</link> определяется
      значением <link linkend="ini.fiber.stack-size">fiber.stack_size</link>,
      значение этого параметра используется вместо <link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link>
      при проверке использования стека во время выполнения файбера.
     </para>
     <note>
      <para>
       Это не связано с переполнениями стека <emphasis>буфера</emphasis>
       и не является функцией безопасности.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.reserved-stack-size">
    <term>
     <parameter>zend.reserved_stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Зарезервированный размер стека, в байтах.
      Значение вычитается из
      <link linkend="ini.zend.max-allowed-stack-size">максимально допустимого размера стека</link>,
      в качестве буфера, при проверке размера стека.
     </para>
     <para>
      Для этого параметра возможны следующие значения:
      <simplelist>
       <member>
        <literal>0</literal>: Автоматическое определение разумного размера.
       </member>
       <member>
        Положительное целое число: Фиксированный размер в байтах.
       </member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.fiber.stack-size">
    <term>
     <parameter>fiber.stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Размер стека в байтах, выделенный для каждого
      <link linkend="language.fibers">файбера</link>.
     </para>
     <para>
      Значение по умолчанию - 1 Мбайт на системах с размером указателя
      менее 8 байт или 2 Мбайт в противном случае.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>
</section>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
