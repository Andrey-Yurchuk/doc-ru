<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4fd318ca791ef360c5b19a17c8045f7446aa9740 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.phpversion" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>phpversion</refname>
  <refpurpose>Получает текущую версию PHP</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>phpversion</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>extension</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция возвращает строку с номером версии текущего PHP-интерпретатора или модуля.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>extension</parameter></term>
     <listitem>
      <para>
       Необязательное имя модуля.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает текущую версию PHP в виде строки (<type>string</type>).
   При передаче в параметр <parameter>extension</parameter>
   строкового (<type>string</type>) аргумента функция <function>phpversion</function>
   возвращает версию модуля или &false;, если информации о версии нет или модуль не включили.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Параметр <parameter>extension</parameter> теперь принимает значение null.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования функции <function>phpversion</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Выводит строку вида 'Текущая версия PHP: 4.1.1'
echo 'Текущая версия PHP: ' . phpversion();

// Выводит строку вида '2.0' или ничего, если модуль не включили
echo phpversion('tidy');

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Пример работы с константой <constant>PHP_VERSION_ID</constant></title>
    <programlisting role="php">
<![CDATA[
<?php

// Константа PHP_VERSION_ID с целочисленным значением версии PHP доступна с PHP 5.2.7.
// Если текущая версия PHP ниже, эмулируем значение константы:
if (!defined('PHP_VERSION_ID')) {
    $version = explode('.', PHP_VERSION);

    define('PHP_VERSION_ID', ($version[0] * 10000 + $version[1] * 100 + $version[2]));
}

/**
 * Константа PHP_VERSION_ID определяют как число, причём чем больше число, тем новее
 * PHP. Значение константы определяют выражением, которое приводит предыдущий абзац:
 *
 * $version_id = $major_version * 10000 + $minor_version * 100 + $release_version;
 *
 * Теперь через константу PHP_VERSION_ID можно проверять, какую функциональность
 * поддерживает текущая версия PHP, для этого не нужно каждый раз вызывать функцию version_compare(),
 * чтобы проверить, поддерживает ли функцию текущая версия PHP.
 *
 * Например, можно определить константы семейства PHP_*_VERSION,
 * которые недоступны в версиях до 5.2.7:
 */
if (PHP_VERSION_ID < 50207) {
    define('PHP_MAJOR_VERSION',   $version[0]);
    define('PHP_MINOR_VERSION',   $version[1]);
    define('PHP_RELEASE_VERSION', $version[2]);

    // и так далее…
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Информацию о версии PHP также даёт предопределённая константа
    <constant>PHP_VERSION</constant>. Дополнительную информацию
    о семантических значениях, из которых состоит полная версия
    выпуска PHP, дают константы семейства <constant>PHP_*_VERSION</constant>.
   </para>
  </note>
  <note>
   <para>
    Отдельные модули определяют свой номер версии,
    но бо́льшая часть встроенных модулей в качестве своего номера
    версии будет использовать версию PHP.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="reserved.constants.core">Константы PHP_VERSION</link></member>
    <member><function>version_compare</function></member>
    <member><function>phpinfo</function></member>
    <member><function>phpcredits</function></member>
    <member><function>zend_version</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
