<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f3c97392225bcb44afff9ddc86529179c81d0f8e Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<set xml:id="set.mysqlinfo">
 <title>Драйверы и плагины MySQL</title>
 <titleabbrev>MySQL</titleabbrev>

 <info xml:id="mysqlinfo.info">
  <abstract>
   <para>
    PHP содержит ряд драйверов и плагинов для доступа к СУБД MySQL.
   </para>
   <para>
    Этот раздел описывает различия и функциональность модулей для работы с MySQL.
   </para>
  </abstract>
 </info>

 <book xml:id="mysql">
  <title>Обзор PHP-драйверов MySQL</title>

  <preface xml:id="mysqlinfo.intro">
   <title>Введение</title>
   <para>
    Доступ к базе данных MySQL получают через несколько API-интерфейсов PHP.
    Пользователи выбирают между модулями
    <link linkend="book.mysqli">mysqli</link>
    или <link linkend="ref.pdo-mysql">PDO_MySQL</link>.
   </para>
   <para>
    Это краткое руководство объясняет
    <link linkend="mysqlinfo.terminology">терминологию</link>, которая описывает
    каждый API, даёт информацию
    <link linkend="mysqlinfo.api.choosing">о выборе API</link>
    и информацию, которая помогает в выборе
    <link linkend="mysqlinfo.library.choosing">библиотеки</link> MySQL
    для работы с API.
   </para>
  </preface>

  <chapter xml:id="mysqlinfo.terminology" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <title>Обзор терминологии</title>
   <para>
    Этот раздел рассказывает об инструментах, которые помогают разрабатывать PHP-приложения,
    которые взаимодействуют с базой данных MySQL.
   </para>

   <para>
    <emphasis role="bold">Что такое API?</emphasis>
   </para>

   <para>
    Интерфейс прикладного программирования (Application Programming Interface, или API)
    определяет классы, методы, функции и переменные, которые нужны приложению
    для решения задачи. Приложениям PHP,
    которые взаимодействуют с базами данных, необходимые API обычно доступны через PHP-модули.
   </para>

   <para>
    API-интерфейсы строят в процедурном или объектно-ориентированном стиле.
    В процедурном API для решения задачи вызывают функции, в объектно-ориентированном API
    инстанцируют классы, а затем вызывают методы этих объектов. Чаще предпочитают
    объектно-ориентированный API, поскольку
    такой подход современнее и помогает лучше организовать код.
   </para>

   <para>
    При написании PHP-приложений доступно несколько вариантов API для подключения к серверу MySQL.
    В этом документе обсуждается, что доступно и как выбрать лучшее решение для приложения.
   </para>

   <para>
    <emphasis role="bold">Что такое коннектор?</emphasis>
   </para>

   <para>
    В документации MySQL термин <emphasis>коннектор (connector)</emphasis>
    относится к программному обеспечению, которое разрешает приложению
    подключаться к серверу базы данных MySQL.
    MySQL предлагает коннекторы для многих языков программирования,
    включая PHP.
   </para>

   <para>
    Если приложение будет взаимодействовать с сервером базы данных,
    потребуется написать PHP-код для соединения с базой данных,
    выполнения запросов и других функций, которые связаны с базой данных.
    Программное обеспечение требуется для доступа к API, который будет
    использовать PHP-приложение, и для управления связью между
    приложением и сервером базы данных, возможно, с подключением других
    промежуточных библиотек, где это требуется.
    Такое ПО называют коннектором, поскольку это программное обеспечение
    разрешает приложению <emphasis>соединиться (connect)</emphasis> с базой данных.
   </para>

   <para>
    <emphasis role="bold">Что такое драйвер?</emphasis>
   </para>

   <para>
    Драйвер — часть ПО, которое разработали для взаимодействия
    с сервером базы данных конкретного типа. Драйвер также может вызывать
    библиотеку наподобие MySQL Client Library
    или MySQL Native Driver. Эти библиотеки реализуют
    низкоуровневый протокол взаимодействия с сервером базы данных MySQL.
   </para>

   <para>
    В качестве примера, слой абстракции базы данных <link linkend="mysqli.overview.pdo">PHP
    Data Objects (PDO)</link> умеет работать с драйверами конкретных баз данных.
    У слоя PDO есть доступ к драйверу PDO MYSQL,
    который разрешает слою абстракции взаимодействовать с сервером MySQL.
   </para>

   <para>
    Термины «коннектор» и «драйвер» часто употребляют как взаимозаменяемые,
    что сбивает с толку. В документации по MySQL термин <quote>драйвер</quote>
    зарезервировали для ПО, которое предоставляет часть пакета коннектора
    для конкретной базы данных.
   </para>

   <para>
    <emphasis role="bold">Что такое модуль?</emphasis>
   </para>

   <para>
    В документации PHP встречается ещё один термин —
    <emphasis>модуль (extension)</emphasis>. Код PHP
    состоит из ядра, к которому подключают дополнительные модули
    для расширения основной функциональности. PHP-модуль <literal>mysqli</literal>
    для работы с MySQL реализовали через инфраструктуру модулей PHP.
   </para>

   <para>
    Модули обычно открывают программисту доступ к API, который разрешает
    пользоваться средствами модуля программно.
    Однако отдельные модули, которые работают с платформой PHP-модулей,
    не открывают PHP-программисту доступ к API.
   </para>

   <para>
    Модуль драйвера PDO MySQL, например, не раскрывает PHP-программисту API,
    но открывает интерфейс к слою PDO, который лежит над уровнем драйвера.
   </para>

   <para>
    У терминов API и «модуль» разные значения, поскольку модуль не обязан открывать программисту API.
   </para>
  </chapter>

  <chapter xml:id="mysqlinfo.api.choosing" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <title>Выбор API</title>
   <para>
    PHP предлагает разные API для доступа к СУБД MySQL.
    Примеры в следующем абзаце показывают взаимодействие с API модулей mysqli и PDO.
    Каждый фрагмент кода создаёт соединение с MySQL-сервером,
    который работает на домене example.com. Код передаёт значение user как имя пользователя,
    а значение password как пароль.
   </para>
   <para>
    <example>
     <title>Сравнение MySQL API</title>
     <programlisting role="php">
<![CDATA[
<?php

// mysqli
$mysqli = new mysqli("example.com", "user", "password", "database");
$result = $mysqli->query("SELECT 'Привет, дорогой пользователь MySQL!' AS _message FROM DUAL");
$row = $result->fetch_assoc();
echo htmlentities($row['_message']);

// PDO
$pdo = new PDO('mysql:host=example.com;dbname=database', 'user', 'password');
$statement = $pdo->query("SELECT 'Привет, дорогой пользователь MySQL!' AS _message FROM DUAL");
$row = $statement->fetch(PDO::FETCH_ASSOC);
echo htmlentities($row['_message']);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <example>
     <title>Сравнение подготовленных запросов</title>
     <programlisting role="php">
<![CDATA[
<?php

// mysqli
$mysqli = new mysqli("example.com", "user", "password", "database");
$statement = $mysqli->prepare("SELECT District FROM City WHERE Name=?");
$statement->execute(["Amersfoort"]);
$result = $statement->get_result();
$row = $result->fetch_assoc();
echo htmlentities($row['District']);

// PDO
$pdo = new PDO('mysql:host=example.com;dbname=database', 'user', 'password');
$statement = $pdo->prepare("SELECT District FROM City WHERE Name=?");
$statement->execute(["Amersfoort"]);
$row = $statement->fetch(PDO::FETCH_ASSOC);
echo htmlentities($row['District']);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <emphasis role="bold">Сравнение возможностей</emphasis>
   </para>
   <para>
    Общая производительность обоих модулей примерно одинакова.
    Хотя производительность модуля составляет только часть общего времени
    выполнения веб-запроса PHP. Часто влияние составляет не более 0,1 %.
   </para>
   <informaltable xml:id="mysqlinfo.api.choosing.changelog">
    <tgroup cols="3">
     <thead>
      <row>
       <entry></entry>
       <entry>ext/mysqli</entry>
       <entry>PDO_MySQL</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Версия PHP, в которой появился модуль</entry>
       <entry>5.0</entry>
       <entry>5.1</entry>
      </row>
      <row>
       <entry>Входит в состав PHP 7.x и 8.x</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>Статус разработки</entry>
       <entry>Активный</entry>
       <entry>Активный</entry>
      </row>
      <row>
       <entry>Жизненный цикл</entry>
       <entry>Активный</entry>
       <entry>Активный</entry>
      </row>
      <row>
       <entry>Рекомендуется для новых проектов</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>Предлагает ООП-интерфейс</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>Предлагает процедурный интерфейс</entry>
       <entry>Да</entry>
       <entry>Нет</entry>
      </row>
      <row>
       <entry>API поддерживает асинхронные неблокирующие запросы через драйвер mysqlnd</entry>
       <entry>Да</entry>
       <entry>Нет</entry>
      </row>
      <row>
       <entry>Постоянные соединения</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>API поддерживает кодировки</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>API поддерживает подготовленные запросы на стороне сервера</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>API поддерживает подготовленные запросы на стороне клиента</entry>
       <entry>Нет</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>API поддерживает хранимые процедуры</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>API поддерживает множественные запросы</entry>
       <entry>Да</entry>
       <entry>Большинство</entry>
      </row>
      <row>
       <entry>API поддерживает транзакции</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>Транзакции контролируются через SQL</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>Поддерживает функциональность MySQL 5.1+</entry>
       <entry>Да</entry>
       <entry>Большинство</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </chapter>

  <chapter xml:id="mysqlinfo.library.choosing" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <title>Выбор библиотеки</title>
   <para>
    Модули mysqli и PDO_MySQL — легковесные обёртки поверх клиентской библиотеки языка C.
    Модули работают либо с библиотекой драйвера <link linkend="book.mysqlnd">mysqlnd</link>,
    либо с клиентской библиотекой языка C <literal>libmysqlclient</literal>.
    Библиотеку выбирают на этапе компиляции.
   </para>
   <para>
    Библиотека mysqlnd — часть дистрибутива PHP.
    Библиотека предлагает функции наподобие ленивых соединений и кеширования запросов,
    включая средства, которые недоступны в библиотеке libmysqlclient,
    поэтому настоятельно рекомендуется выбирать встроенную в PHP библиотеку mysqlnd.
    <link linkend="book.mysqlnd">Документация по mysqlnd</link> даёт дополнительную информацию
    и список средств и функциональности, которую предлагает драйвер.
   </para>
   <para>
    <example>
     <title>Команды конфигурирования библиотеки mysqlnd или libmysqlclient</title>
     <programlisting role="shell">
<![CDATA[
// Рекомендуется, компилируется с драйвером mysqlnd
$ ./configure --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd

// Рекомендуется, компилируется с драйвером mysqlnd
$ ./configure --with-mysqli --with-pdo-mysql

// Не рекомендуется, компилируется с библиотекой libmysqlclient языка C
$ ./configure --with-mysqli=/path/to/mysql_config --with-pdo-mysql=/path/to/mysql_config
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <emphasis role="bold">Сравнение библиотек</emphasis>
   </para>
   <para>
    Рекомендуется работать с библиотекой <link linkend="book.mysqlnd">mysqlnd</link>,
    а не с библиотекой MySQL Client Server (libmysqlclient). Обе библиотеки поддерживаются
    и непрерывно совершенствуются.
   </para>
   <informaltable xml:id="mysqlinfo.library.choosing.changelog">
    <tgroup cols="3">
     <thead>
      <row>
       <entry></entry>
       <entry>MySQL native driver (<link linkend="book.mysqlnd">mysqlnd</link>)</entry>
       <entry>MySQL client server library (<literal>libmysqlclient</literal>)</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Часть дистрибутива PHP</entry>
       <entry>Да</entry>
       <entry>Нет</entry>
      </row>
      <row>
       <entry>Версия PHP, в которой появилась библиотека</entry>
       <entry>5.3.0</entry>
       <entry>Нет данных</entry>
      </row>
      <row>
       <entry>Лицензия</entry>
       <entry>PHP License 3.01</entry>
       <entry>Двойная лицензия</entry>
      </row>
      <row>
       <entry>Статус разработки</entry>
       <entry>Активный</entry>
       <entry>Активный</entry>
      </row>
      <row>
       <entry>Жизненный цикл</entry>
       <entry>Окончание не анонсировано</entry>
       <entry>Окончание не анонсировано</entry>
      </row>
      <row>
       <entry>Компиляция по умолчанию (для всех модулей MySQL)</entry>
       <entry>Да</entry>
       <entry>Нет</entry>
      </row>
      <row>
       <entry>Поддержка протокола сжатия</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>Поддержка протокола SSL</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>Поддержка именованных конвейеров</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>Неблокирующие асинхронные запросы</entry>
       <entry>Да</entry>
       <entry>Нет</entry>
      </row>
      <row>
       <entry>Статистика производительности</entry>
       <entry>Да</entry>
       <entry>Нет</entry>
      </row>
      <row>
       <entry>Конфигурация LOAD LOCAL INFILE учитывает директиву <link linkend="ini.open-basedir">open_basedir</link></entry>
       <entry>Да</entry>
       <entry>нет</entry>
      </row>
      <row>
       <entry>
        Взаимодействие с собственной системой управления памятью PHP (например, соблюдение ограничений памяти PHP)
       </entry>
       <entry>Да</entry>
       <entry>Нет</entry>
      </row>
      <row>
       <entry>Возврат числовых столбцов как целочисленных значений double (COM_QUERY)</entry>
       <entry>Да</entry>
       <entry>нет</entry>
      </row>
      <row>
       <entry>Возврат числовых столбцов как строк (string) (COM_QUERY)</entry>
       <entry>Да</entry>
       <entry>Да</entry>
      </row>
      <row>
       <entry>Поддержка API плагинов</entry>
       <entry>Да</entry>
       <entry>Ограниченно</entry>
      </row>
      <row>
       <entry>Автоматическое переподключение</entry>
       <entry>нет</entry>
       <entry>опционально</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </chapter>

  &reference.mysqlinfo.concepts;

 </book>

 &reference.mysqli.book;
 &reference.mysql-xdevapi.book;
 &reference.mysql.book;
 &reference.mysqlnd.book;

</set>
