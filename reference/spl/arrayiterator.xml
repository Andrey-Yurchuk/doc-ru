<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 14767af0f05dffa6fdb9b49e1a1f4e9ca7022a60 Maintainer: mch Status: ready -->
<!-- Reviewed: no -->
<reference xml:id="class.arrayiterator" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>Класс ArrayIterator</title>
 <titleabbrev>ArrayIterator</titleabbrev>

 <partintro>

  <!-- {{{ ArrayIterator intro -->
  <section xml:id="arrayiterator.intro">
   &reftitle.intro;
   <para>
    Класс разрешает удалять элементы и изменять ключи или значения
    при итерации по <link linkend="language.types.array">массивам</link>
    или <link linkend="language.types.object">объектам</link>.
   </para>
   <para>
    Для многократного перебора одного и того же массива
    создают экземпляр класса <classname>ArrayObject</classname>,
    в конструктор которого передают объект или массив.
    Для обращения к элементам объекта массива создают итератор <classname>ArrayIterator</classname>;
    итератор создают либо в конструкции &foreach;,
    либо вызывают метод <methodname>ArrayObject::getIterator</methodname> на объекте массива вручную.
   </para>
  </section>
  <!-- }}} -->

  <section xml:id="arrayiterator.synopsis">
   &reftitle.classsynopsis;

   <!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <classname>ArrayIterator</classname>
    </ooclass>

    <oointerface>
     <modifier>implements</modifier>
     <interfacename>SeekableIterator</interfacename>
    </oointerface>

    <oointerface>
     <interfacename>ArrayAccess</interfacename>
    </oointerface>

    <oointerface>
     <interfacename>Serializable</interfacename>
    </oointerface>

    <oointerface>
     <interfacename>Countable</interfacename>
    </oointerface>

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="arrayiterator.constants.std-prop-list">ArrayIterator::STD_PROP_LIST</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="arrayiterator.constants.array-as-props">ArrayIterator::ARRAY_AS_PROPS</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.arrayiterator')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[@role='ArrayIterator'])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.arrayiterator')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='ArrayIterator'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>

  </section>

  <section xml:id="arrayiterator.constants">
   &reftitle.constants;
   <section xml:id="arrayiterator.constants.flags">
    <title>Флаги ArrayIterator</title>
    <variablelist>

     <varlistentry xml:id="arrayiterator.constants.std-prop-list">
      <term><constant>ArrayIterator::STD_PROP_LIST</constant></term>
      <listitem>
       <para>
        Свойства объекта ведут себя так же, как при доступе
        к ним как к элементам списка (<function>var_dump</function>, &foreach; и т. д.).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="arrayiterator.constants.array-as-props">
      <term><constant>ArrayIterator::ARRAY_AS_PROPS</constant></term>
      <listitem>
       <para>
        Класс открывает доступ к элементам как к свойствам объекта при чтении и записи.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
  </section>

  <!-- {{{ ArrayIterator properties
  <section xml:id="arrayiterator.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="arrayiterator.props.name">
     <term><varname>name</varname></term>
     <listitem>
      <para>Prop description</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
}}} -->

 </partintro>

 &reference.spl.entities.arrayiterator;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
