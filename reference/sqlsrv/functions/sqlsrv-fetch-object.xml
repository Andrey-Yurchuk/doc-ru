<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4245a355fa612ba8c21db0502d9728258a933e63 Maintainer: evvc Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.sqlsrv-fetch-object" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sqlsrv_fetch_object</refname>
  <refpurpose>Получает следующую строку данных в наборе результатов как объект</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>sqlsrv_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>className</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>ctorParams</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>row</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
  </methodsynopsis>
  <para>
   Извлекает следующую строку данных в наборе результатов как экземпляр указанного класса со свойствами,
   соответствующими именам полей строки и значениям, которые соответствуют значениям полей строки.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       Ресурс оператора, возвращаемый <function>sqlsrv_query</function> или
       <function>sqlsrv_execute</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>className</parameter></term>
     <listitem>
      <para>
       Имя класса для создания экземпляра. Если имя класса не указано, создаётся экземпляр stdClass.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ctorParams</parameter></term>
     <listitem>
      <para>
       Значения передаваемые конструктору указанного класса.
       Если конструктор указанного класса принимает параметры, необходимо предоставить массив ctorParams.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>row</parameter></term>
     <listitem>
      <para>
       Строка, к которой нужно получить доступ. Параметр можно использовать только в том случае,
       если указанный оператор был подготовлен с помощью курсора с возможностью прокрутки.
       В этом случае этот параметр может принимать одно из следующих значений:
       <simplelist>
        <member>SQLSRV_SCROLL_NEXT</member>
        <member>SQLSRV_SCROLL_PRIOR</member>
        <member>SQLSRV_SCROLL_FIRST</member>
        <member>SQLSRV_SCROLL_LAST</member>
        <member>SQLSRV_SCROLL_ABSOLUTE</member>
        <member>SQLSRV_SCROLL_RELATIVE</member>
       </simplelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Указывает строку, к которой будет осуществляться доступ, если для параметра строки установлено
       значение <constant>SQLSRV_SCROLL_ABSOLUTE</constant> или
       <constant>SQLSRV_SCROLL_RELATIVE</constant>.
       Обратите внимание, что первая строка в наборе результатов имеет индекс 0.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   В случае успешного выполнения возвращает объект, &null;, если в наборе результатов больше нет строк
   и &false; в случае возникновения ошибки или если указанный класс не существует.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>sqlsrv_fetch_object</function></title>
    <para>
     В следующем примере показано, как получить строку как объект stdClass.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$serverName = "serverName\sqlexpress";
$connectionInfo = array( "Database"=>"dbName", "UID"=>"username", "PWD"=>"password");
$conn = sqlsrv_connect( $serverName, $connectionInfo);
if( $conn === false ) {
     die( print_r( sqlsrv_errors(), true));
}

$sql = "SELECT fName, lName FROM Table_1";
$stmt = sqlsrv_query( $conn, $sql);
if( $stmt === false ) {
     die( print_r( sqlsrv_errors(), true));
}

// Получение каждой строки как объект.
// Поскольку класс не указан, каждая строка будет получена как объект stdClass.
// Имена свойств соответствуют именам полей.
while( $obj = sqlsrv_fetch_object( $stmt)) {
      echo $obj->fName.", ".$obj->lName."<br />";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <para>
   Если имя класса указано с необязательным параметром $className и у класса есть свойства,
   имена которых совпадают с именами полей набора результатов, к свойствам применяются соответствующие значения набора результатов.
   Если имя поля набора результатов не соответствует свойству класса, свойство с именем поля набора результатов добавляется к объекту,
   а значение набора результатов применяется к свойству.
   При использовании параметра $className применяются следующие правила:
   <simplelist>
      <member>При сопоставлении имён свойств поля учитывается регистр.</member>
      <member>Сопоставление свойств поля происходит независимо от модификаторов доступа.</member>
      <member>Типы данных свойств класса игнорируются при применении значения поля к свойству.</member>
      <member>Если класс не существует, функция возвращает &false; и добавляет ошибку в коллекцию ошибок.</member>
   </simplelist>
   Независимо от того, указан ли параметр $className, если возвращается поле без имени,
   значение поля будет проигнорировано, а в коллекцию ошибок будет добавлено предупреждение.
  </para>
  <para>
   При использовании набора результатов, содержащего несколько столбцов с одинаковым именем,
   может быть лучше использовать <function>sqlsrv_fetch_array</function> или
   комбинацию <function>sqlsrv_fetch</function> и <function>sqlsrv_get_field</function>.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlsrv_fetch</function></member>
    <member><function>sqlsrv_fetch_array</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
