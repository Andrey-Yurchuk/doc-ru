<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4754397753fd79f1c846868b66a2448babab1c54 Maintainer: evvc Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.sqlsrv-fetch-array" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sqlsrv_fetch_array</refname>
  <refpurpose>Возвращает строку как массив</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>sqlsrv_fetch_array</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>fetchType</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>row</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
  </methodsynopsis>
  <para>
   Возвращает следующую доступную строку данных в виде ассоциативного массива,
   числового массива или и того и другого (по умолчанию).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       Ресурс оператора, возвращаемый sqlsrv_query или sqlsrv_prepare.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fetchType</parameter></term>
     <listitem>
      <para>
       Предопределённая константа, указывающая тип возвращаемого массива.
       Возможные значения: <constant>SQLSRV_FETCH_ASSOC</constant>,
       <constant>SQLSRV_FETCH_NUMERIC</constant> или
       <constant>SQLSRV_FETCH_BOTH</constant> (по умолчанию).
      </para>
      <para>
       Тип выборки SQLSRV_FETCH_ASSOC не следует использовать при использовании набора результатов
       с несколькими столбцами с одинаковым именем.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>row</parameter></term>
     <listitem>
      <para>
       Задаёт строку для доступа в результирующем наборе, в котором используется прокручиваемый курсор.
       Возможные значения: <constant>SQLSRV_SCROLL_NEXT</constant>,
       <constant>SQLSRV_SCROLL_PRIOR</constant>, <constant>SQLSRV_SCROLL_FIRST</constant>,
       <constant>SQLSRV_SCROLL_LAST</constant>, <constant>SQLSRV_SCROLL_ABSOLUTE</constant> и
       <constant>SQLSRV_SCROLL_RELATIVE</constant> (по умолчанию).
       Если этот параметр указан, <parameter>fetchType</parameter> должен быть явно определён.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Указывает строку, к которой будет осуществляться доступ, если для параметра строки установлено
       значение <constant>SQLSRV_SCROLL_ABSOLUTE</constant> или
       <constant>SQLSRV_SCROLL_RELATIVE</constant>.
       Обратите внимание, что первая строка в наборе результатов имеет индекс 0.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   В случае успешного выполнения возвращает массив, &null;, если в наборе результатов больше нет строк
   и &false; в случае возникновения ошибки.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Получение ассоциативного массива.</title>
    <programlisting role="php">
<![CDATA[
<?php
$serverName = "serverName\instanceName";
$connectionInfo = array( "Database"=>"dbName", "UID"=>"username", "PWD"=>"password");
$conn = sqlsrv_connect( $serverName, $connectionInfo );
if( $conn === false ) {
    die( print_r( sqlsrv_errors(), true));
}

$sql = "SELECT FirstName, LastName FROM SomeTable";
$stmt = sqlsrv_query( $conn, $sql );
if( $stmt === false) {
    die( print_r( sqlsrv_errors(), true) );
}

while( $row = sqlsrv_fetch_array( $stmt, SQLSRV_FETCH_ASSOC) ) {
      echo $row['LastName'].", ".$row['FirstName']."<br />";
}

sqlsrv_free_stmt( $stmt);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Получение числового массива.</title>
    <programlisting role="php">
<![CDATA[
<?php
$serverName = "serverName\instanceName";
$connectionInfo = array( "Database"=>"dbName", "UID"=>"username", "PWD"=>"password");
$conn = sqlsrv_connect( $serverName, $connectionInfo );
if( $conn === false ) {
    die( print_r( sqlsrv_errors(), true));
}

$sql = "SELECT FirstName, LastName FROM SomeTable";
$stmt = sqlsrv_query( $conn, $sql );
if( $stmt === false) {
    die( print_r( sqlsrv_errors(), true) );
}

while( $row = sqlsrv_fetch_array( $stmt, SQLSRV_FETCH_NUMERIC) ) {
      echo $row[0].", ".$row[1]."<br />";
}

sqlsrv_free_stmt( $stmt);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <para>
   Не указанный <parameter>fetchType</parameter> или явное использование константы <constant>SQLSRV_FETCH_TYPE</constant>
   в приведённых выше примерах вернёт массив, у которого ключи будут как ассоциативные, так и числовые.
  </para>
  <para>
   Если более одного столбца возвращается с одним и тем же именем, последний столбец будет иметь приоритет.
   Чтобы избежать конфликтов имён полей, используйте псевдонимы.
  </para>
  <para>
   Если возвращается столбец без имени, ассоциативный ключ для элемента массива будет пустой строкой ("").
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlsrv_connect</function></member>
    <member><function>sqlsrv_query</function></member>
    <member><function>sqlsrv_errors</function></member>
    <member><function>sqlsrv_fetch</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
