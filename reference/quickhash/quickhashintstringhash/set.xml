<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bfa171ecb7d958d09e9fd576090c95a62caff784 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="quickhashintstringhash.set" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>QuickHashIntStringHash::set</refname>
  <refpurpose>Метод обновляет запись в хеше новым значением или добавляет новую, если запись не существует</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>int</type><methodname>QuickHashIntStringHash::set</methodname>
   <methodparam><type>int</type><parameter>key</parameter></methodparam>
   <methodparam><type>string</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Метод пытается обновить запись новым значением. Если запись ещё не существует, то вместо этого добавляется новая запись.
   Возвращается информация о том, была ли запись добавлена или обновлена.
   Если есть дубликаты ключей, только первый найденный элемент получит обновлённое значение.
   Используйте константу <constant>QuickHashIntStringHash::CHECK_FOR_DUPES</constant> во время создания хеша,
   чтобы предотвратить попадание дублирующих ключей в хеш.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Ключ записи, которую нужно добавить или обновить.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Значение записи. Если передаётся нестроковое значение,
       оно будет автоматически преобразовано в строку, если это возможно.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Метод возвращает 2, если запись была найдена и обновлена,
   1, если запись была добавлена или 0 в случае возникновения ошибки.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>QuickHashIntStringHash::set</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$hash = new QuickHashIntStringHash( 1024 );

echo "Set->Add\n";
var_dump( $hash->get( 46692 ) );
var_dump( $hash->set( 46692, "шестнадцать тысяч девяносто один" ) );
var_dump( $hash->get( 46692 ) );

echo "Set->Update\n";
var_dump( $hash->set( 46692, "двадцать девять тысяч девятьсот шесть" ) );
var_dump( $hash->get( 46692 ) );
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Set->Add
bool(false)
int(2)
string(27) "шестнадцать тысяч девяносто один"
Set->Update
int(1)
string(37) "двадцать девять тысяч девятьсот шесть"
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
