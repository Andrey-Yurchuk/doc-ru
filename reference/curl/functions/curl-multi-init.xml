<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 65d5499d46b23f4e1e4442146cd3ff585d2a91f4 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.curl-multi-init" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_multi_init</refname>
  <refpurpose>Возвращает новый мультидескриптор модуля cURL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>CurlMultiHandle</type><methodname>curl_multi_init</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Функция асинхронно обрабатывает набор cURL-дескрипторов.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает набор cURL-дескрипторов.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Теперь в случае успешного выполнения функция возвращает
       экземпляр класса <classname>CurlMultiHandle</classname>;
       раньше возвращался ресурс (<type>resource</type>).
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования функции <function>curl_multi_init</function></title>
    <para>
     Пример создаст два cURL-дескриптора, добавит их в мультидескриптор
     и обработает дескрипторы асинхронно.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

// Создаём оба cURL-дескриптора
$ch1 = curl_init();
$ch2 = curl_init();

// Устанавливаем URL-адрес и другие параметры
curl_setopt($ch1, CURLOPT_URL, "http://lxr.php.net/");
curl_setopt($ch1, CURLOPT_HEADER, 0);

curl_setopt($ch2, CURLOPT_URL, "http://www.php.net/");
curl_setopt($ch2, CURLOPT_HEADER, 0);

// Создаём мультидескриптор модуля cURL
$mh = curl_multi_init();

// Добавляем два дескриптора в мультидескриптор
curl_multi_add_handle($mh,$ch1);
curl_multi_add_handle($mh,$ch2);

// Запускаем мультидескриптор
do {
    $status = curl_multi_exec($mh, $active);

    if ($active) {
        curl_multi_select($mh);
    }
} while ($active && $status == CURLM_OK);

// Закрываем дескрипторы
curl_multi_remove_handle($mh, $ch1);
curl_multi_remove_handle($mh, $ch2);
curl_multi_close($mh);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_init</function></member>
    <member><function>curl_multi_close</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
