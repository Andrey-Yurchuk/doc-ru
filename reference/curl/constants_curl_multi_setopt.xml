<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 141b05e576781405f9077abbe89e7a8b2a5eb946 Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
<variablelist xml:id="constant.curl-multi-setopt.constants" role="constant_list">
 <title><function>curl_multi_setopt</function></title>
  <varlistentry xml:id="constant.curlmopt-chunk-length-penalty-size">
   <term>
    <constant>CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Указывает порог длины фрагмента в байтах для конвейерной обработки.
     Константа доступна с PHP 7.0.7 и cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-content-length-penalty-size">
   <term>
    <constant>CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Указывает порог размера в байтах для назначения штрафных санкций при конвейерной обработке.
     Константа доступна с PHP 7.0.7 и cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-maxconnects">
   <term>
    <constant>CURLMOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Указывает максимальное количество одновременно открытых соединений,
     которое библиотеке libcurl разрешается кешировать.
     По умолчанию размер будет увеличен до уровня, который вместит в 4 раза больше дескрипторов,
     чем добавили функцией <function>curl_multi_add_handle</function>.
     Когда кеш заполняется, модуль curl закрывает самое старое соединение в кеше,
     чтобы предотвратить увеличение количества открытых подключений.
     Константа доступна с cURL 7.16.3.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-max-concurrent-streams">
   <term>
    <constant>CURLMOPT_MAX_CONCURRENT_STREAMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Указывает максимальное количество одновременных потоков для соединений,
     которые модулю cURL требуется поддерживать при соединениях по протоколу HTTP/2.
     Допустимый диапазон значений составляет от <literal>1</literal>
     до <literal>2 147 483 647</literal> (<literal>2^31 - 1</literal>).
     Значение, которое сюда передали, будет учитываться на основе свойств
     других ресурсов системы.
     Значение по умолчанию равняется <literal>100</literal>.
     Константа доступна с PHP 8.2.0 и cURL 7.67.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-max-host-connections">
   <term>
    <constant>CURLMOPT_MAX_HOST_CONNECTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Указывает максимальное количество подключений к одному хосту.
     Константа доступна с PHP 7.0.7 и cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-max-pipeline-length">
   <term>
    <constant>CURLMOPT_MAX_PIPELINE_LENGTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Указывает максимальное количество запросов в конвейере.
     Константа доступна с PHP 7.0.7 и cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-max-total-connections">
   <term>
    <constant>CURLMOPT_MAX_TOTAL_CONNECTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Указывает максимальное количество одновременно открытых соединений.
     Константа доступна с PHP 7.0.7 и cURL 7.30.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-pipelining">
   <term>
    <constant>CURLMOPT_PIPELINING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Значение 1 включает, а 0 выключает конвейерную обработку. Включение конвейерной обработки
     для мультидескриптора заставит дескриптор выполнить конвейерную обработку по HTTP-протоколу настолько,
     насколько это окажется возможным для передач через этот дескриптор. Это означает, что добавление
     второго запроса, который может использовать уже существующее соединение, «конвейеризует»
     второй запрос через то же соединение.
     Начиная с cURL 7.43.0 это значение — битовая маска,
     и при передаче значения 2 модуль попытается мультиплексировать новую
     передачу через существующие HTTP/2-соединение.
     Значение 3 инструктирует модуль cURL запрашивать конвейерную обработку и мультиплексирование
     независимо друг от друга.
     Начиная с cURL 7.62.0 установка бита конвейерной обработки не даёт никакого эффекта.
     Вместо целочисленных литералов разрешается также указывать константы семейства CURLPIPE_*.
     Константа доступна с cURL 7.16.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlmopt-pushfunction">
   <term>
    <constant>CURLMOPT_PUSHFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Модуль зарегистрирует объект <type>callable</type>, который указали в опции, для обработки пуш-уведомлений
     сервера. Допускается следующая сигнатура вызываемого объекта:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>pushfunction</replaceable></methodname>
      <methodparam><type>resource</type><parameter>parent_ch</parameter></methodparam>
      <methodparam><type>resource</type><parameter>pushed_ch</parameter></methodparam>
      <methodparam><type>array</type><parameter>headers</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>parent_ch</parameter></term>
       <listitem>
        <simpara>
         Родительский cURL-дескриптор (запрос, который сделал клиент).
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>pushed_ch</parameter></term>
       <listitem>
        <simpara>
         Новый cURL-дескриптор для отправленного push-запроса.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>headers</parameter></term>
       <listitem>
        <simpara>
         Заголовки push-обещания.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Push-функция должна возвращать либо
     <constant>CURL_PUSH_OK</constant>, если может обработать пуш,
     или <constant>CURL_PUSH_DENY</constant>, чтобы отклонить пуш.
     Константа доступна с PHP 7.1.0 и cURL 7.44.0
    </para>
   </listitem>
  </varlistentry>
</variablelist>
