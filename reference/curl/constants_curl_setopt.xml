<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b7d6aaa945219da933a0ac2a4b610aa1b09dfcb0 Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
 <variablelist role="constant_list">
  <title><function>curl-setopt</function></title>
  <varlistentry xml:id="constant.curlopt-abstract-unix-socket">
   <term>
    <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Разрешает соединяться с абстрактным сокетом Unix-домена вместо установления
     TCP-соединения с хостом и устанавливает путь к заданной
     строке <type>string</type>. Опция следует той же семантике,
     что и опция <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Обе опции
     разделяют одно хранилище, поэтому для каждого дескриптора разрешается
     установить только одну.
     Константа доступна с PHP 7.3.0 и cURL 7.53.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc">
   <term>
    <constant>CURLOPT_ALTSVC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Передаёт название файла модулю cURL, который функция будет использовать как Alt-Svc-файл кеша
     для чтения существующего содержимого кеша и, возможно, также записи данных
     обратно в файл после передачи, если только для опции <constant>CURLOPT_ALTSVC_CTRL</constant>
     не установили значение <constant>CURLALTSVC_READONLYFILE</constant>.
     Константа доступна с 8.2.0 и cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc-ctrl">
   <term>
    <constant>CURLOPT_ALTSVC_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Заполняет битовую маску правильным набором функций, чтобы проинструктировать дескриптор cURL, как обрабатывать файл Alt-Svc
     при обмене данными через дескриптор. cURL-дескриптор принимает заголовки файла Alt-Svc только по HTTPS-протоколу.
     Функция выполнит запрос к альтернативному источнику, только если источник правильно работает по HTTPS-протоколу.
     Установка хотя бы одного бита включит механизм Alt-Svc. Поведение кеша определяет следующий набор опций:
     <constant>CURLALTSVC_H1</constant>,
     <constant>CURLALTSVC_H2</constant>,
     <constant>CURLALTSVC_H3</constant>
     и <constant>CURLALTSVC_READONLYFILE</constant>.
     Константа доступна с 8.2.0 и cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-autoreferer">
   <term>
    <constant>CURLOPT_AUTOREFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; автоматически установит значение поля <literal>Referer:</literal> в HTTP-заголовках
     запросов, которые следуют по URL-адресу перенаправления в заголовке ответа <literal>Location:</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-aws-sigv4">
   <term>
    <constant>CURLOPT_AWS_SIGV4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Аутентифицирует запрос к веб-службам компании Amazon по AWS-подписи версии 4 в HTTP- или HTTPS-заголовках.
     Опция переопределяет другие типы аутентификации, которые установили
     в опции <constant>CURLOPT_HTTPAUTH</constant>. Этот метод нельзя комбинировать с другими типами аутентификации.
     Константа доступна с 8.2.0 и cURL 7.75.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-binarytransfer">
   <term>
    <constant>CURLOPT_BINARYTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-buffersize">
   <term>
    <constant>CURLOPT_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Размер буфера, который функция будет использовать при каждом чтении данных. При этом функция
     не гарантирует, что обработает запрос.
     Константа доступна с cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo">
   <term>
    <constant>CURLOPT_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя файла, в котором содержится один или набор сертификатов для проверки узла.
     Опцию устанавливают только в сочетании с опцией
     <constant>CURLOPT_SSL_VERIFYPEER</constant>. Иногда требуется указывать абсолютный путь к файлу.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo-blob">
   <term>
    <constant>CURLOPT_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя PEM-файла, в котором содержится один или набор сертификатов для проверки узла.
     Опция переопределяет опцию <constant>CURLOPT_CAINFO</constant>.
     Константа доступна с 8.2.0 и cURL 7.77.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-capath">
   <term>
    <constant>CURLOPT_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Каталог, который содержит набор сертификатов удостоверяющего центра. Опцию указывают
     вместе с опцией <constant>CURLOPT_SSL_VERIFYPEER</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ca-cache-timeout">
   <term>
    <constant>CURLOPT_CA_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.87.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-certinfo">
   <term>
    <constant>CURLOPT_CERTINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; выводит информацию о SSL-сертификации
     в поток <constant>STDERR</constant>
     при безопасной передаче. Константу добавили в cURL 7.19.1.
     Константа будет работать, только если включить опцию <constant>CURLOPT_VERBOSE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Количество секунд, которое функция потратит на попытку установить подключение. Значение 0
     включит бесконечное ожидание.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout-ms">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Количество миллисекунд, которое функция потратит на попытку установить подключение. Значение 0
     включит бесконечное ожидание.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     Эта часть соединения по-прежнему будет использовать разрешение в целую секунду для пределов времени,
     у которых минимальное допустимое время ожидания равно одной секунде, если библиотеку libcurl
     собрали со стандартным резольвером имён системы. Константа доступна с cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-only">
   <term>
    <constant>CURLOPT_CONNECT_ONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; сообщает библиотеке, что требуется аутентифицировать
     прокси-сервер и настройку соединения, но не передавать данные. Опцию реализовали
     для работы с протоколами HTTP, SMTP и POP3.
     Константа доступна с cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-to">
   <term>
    <constant>CURLOPT_CONNECT_TO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Подключается к заданному хосту и порту, а не хосту и порту URL-адреса.
     Опция принимает массив строк в формате
     <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
     Константа доступна с 7.0.7 и cURL 7.49.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookie">
   <term>
    <constant>CURLOPT_COOKIE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Содержимое заголовка <literal>"Cookie: "</literal>, которое функция будет использовать в HTTP-запросе.
     Обратите внимание, что блоки данных cookie разделяются точкой с запятой, за которой следует
     пробел: "<literal>fruit=apple; colour=red</literal>".
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiefile">
   <term>
    <constant>CURLOPT_COOKIEFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя файла, который содержит блоки данных cookies. Блоки cookie
     записывают в файл в формате Netscape или прямо простыми заголовками в HTTP-стиле, которые сбросили
     в файл.
     Функция не будет загружать блоки данных cookies, но обработка cookies
     останется включённой, если имя файла окажется пустой строкой.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiejar">
   <term>
    <constant>CURLOPT_COOKIEJAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла, в котором будут сохраняться внутренние cookie
     при вызове деструктора дескриптора.
     <warning>
      <simpara>
       Начиная с PHP 8.0.0 функция <function>curl_close</function> ничего не делает с дескриптором
       и <emphasis>не</emphasis> уничтожает его. На дескрипторе вызывают конструкцию языка <function>unset</function>,
       если требуется записать cookies до автоматического уничтожения дескриптора.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookielist">
   <term>
    <constant>CURLOPT_COOKIELIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Строка блока данных cookie (то есть одна строка в формате Netscape/Mozilla или стандартный
     заголовок Set-Cookie в HTTP-стиле) добавляет единственный блок cookie во внутреннее хранилище блоков данных cookie.
     Значение <literal>"ALL"</literal> стирает все cookie, которые хранятся в памяти.
     Значение <literal>"SESS"</literal> удаляет из памяти все блоки данных cookie сессии.
     Значение <literal>"FLUSH"</literal> записывает все известные блоки данных cookie в файл,
     который указали в опции <constant>CURLOPT_COOKIEJAR</constant>.
     Значение <literal>"RELOAD"</literal> загружает все блоки данных cookie из файлов,
     которые указали в опции <constant>CURLOPT_COOKIEFILE</constant>. Константа доступна с cURL 7.14.1
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiesession">
   <term>
    <constant>CURLOPT_COOKIESESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; помечает этот блок данных как новую «сессию» блоков cookie. Это заставит библиотеку libcurl
     игнорировать каждый блок данных cookie, который она собирается загрузить и который относится к «сеансовым cookie»
     предыдущей сессии. По умолчанию библиотека libcurl каждый раз сохраняет и загружает
     каждый блок данных cookie, независимо от того, принадлежат ли они к сессионным cookies или нет.
     Сеансовые cookie — cookie без даты истечения срока действия, и они должны быть живыми
     и существующим только для этой «сессии».
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlf">
   <term>
    <constant>CURLOPT_CRLF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; преобразовывает символ новой строки, который указывают в системах Unix,
     в последовательность символов CRLF при передаче.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-customrequest">
   <term>
    <constant>CURLOPT_CUSTOMREQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Пользовательский метод запроса, который функция будет использовать вместо
     <literal>"GET"</literal> или <literal>"HEAD"</literal>
     при отправке HTTP-запроса. Это полезно при запросах
     <literal>"DELETE"</literal> или других, более редких HTTP-запросах.
     Допустимые значения: <literal>"GET"</literal>,
     <literal>"POST"</literal>, <literal>"CONNECT"</literal> и так далее;
     т. е. здесь не нужно вводить всю строку с HTTP-запросом. Например,
     значение <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>
     будет неправильным.
     <note>
      <para>
       Опцию указывают, только после проверки и подтверждения, что сервер поддерживает
       пользовательский метод запроса.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-default-protocol">
   <term>
    <constant>CURLOPT_DEFAULT_PROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Протокол по умолчанию, который функция будет использовать, если название схемы отсутствует в URL-адресе.
     Константа доступна с 7.0.7 и cURL 7.45.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-disallow-username-in-url">
   <term>
    <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция запрещает URL-адреса с именем пользователя. По умолчанию
     имена пользователей разрешаются — значение по умолчанию равно 0.
     Константа доступна с 7.3.0 и cURL 7.61.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-cache-timeout">
   <term>
    <constant>CURLOPT_DNS_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Количество секунд, в течение которых в памяти хранятся DNS-записи.
     По умолчанию значение опции равно 120 секундам, что эквивалентно 2 минутам.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-interface">
   <term>
    <constant>CURLOPT_DNS_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает имя сетевого интерфейса, к которому требуется привязать резольвер DNS-имён.
     Опция принимает только имена интерфейса, а не адреса.
     Константа доступна с 7.0.7 и cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip4">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает локальный IPv4-адрес, к которому требуется привязать резольвер.
     Опция принимает только аргументы, которые содержат один числовой IPv4-адрес в виде строки.
     Константа доступна с 7.0.7 и cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip6">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP6</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает локальный IPv6-адрес, к которому требуется привязать резольвер.
     Опция принимает только аргументы, которые содержат один числовой IPv6-адрес в виде строки.
     Константа доступна с 7.0.7 и cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-shuffle-addresses">
   <term>
    <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция перемешивает адреса, которые вернул DNS-сервер, так, чтобы адреса
     выбирались в случайном порядке, когда имя разрешилось и DNS сервер вернул больше одного IP-адреса.
     Иногда из-за этого функция выбирает IPv4-адрес раньше IPv6-адреса и наоборот.
     Константа доступна с 7.3.0 и cURL 7.60.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-use-global-cache">
   <term>
    <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опции указывают значение &true;, чтобы функция разрешала имена через глобальный DNS-кеш. Опция непотокобезопасна.
     По умолчанию опция условно включена, если PHP собрали не для безопасной работы в потоках (в командной оболочке CLI,
     через интерфейс FCGI, модуль Apache2-Prefork, который работает на основе процессов, а не потоков, и т. д.).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifyhost">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Проверяет поля имени SSL-сертификата DoH-сервера на соответствие имени хоста.
     Константа доступна с 8.2.0 и cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifypeer">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Проверяет подлинность SSL-сертификата DoH-сервера.
     Константа доступна с 8.2.0 и cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifystatus">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Просит дескриптор cURL проверить статус сертификата DoH-сервера
     через TLS-расширение «Запрос статуса сертификата» (OCSP-сшивание).
     Константа доступна с 8.2.0 и cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-url">
   <term>
    <constant>CURLOPT_DOH_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Задаёт URL-адрес, по которому DoH-сервер будет разрешать имена.
     Константа доступна с 8.1.0 и cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-egdsocket">
   <term>
    <constant>CURLOPT_EGDSOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Аналогична опции <constant>CURLOPT_RANDOM_FILE</constant>, за исключением имени файла
     сокета демона сбора энтропии (Entropy Gathering Daemon).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-encoding">
   <term>
    <constant>CURLOPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Содержимое заголовка <literal>"Accept-Encoding: "</literal>.
     Опция помогает декодировать ответ. Опция поддерживает следующие кодировки:
     <literal>"identity"</literal>, <literal>"deflate"</literal>
     и <literal>"gzip"</literal>. При установке пустой строки — <literal>""</literal> —
     отправляется заголовок, который содержит все типы кодировок, которые поддерживает опция.
     Константа доступна с cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-expect-100-timeout-ms">
   <term>
    <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Время ожидания ответов с заголовком <literal>Expect: 100-continue</literal> в миллисекундах.
     Значение по умолчанию равно 1000 миллисекунд.
     Константа доступна с 7.0.7 и cURL 7.36.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-failonerror">
   <term>
    <constant>CURLOPT_FAILONERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция возвращает подробную информацию о сбое, если вернулся HTTP-код ответа,
     который больше или равен 400. Поведение по умолчанию возвращает
     страницу, а код игнорирует.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-file">
   <term>
    <constant>CURLOPT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Файл, в который функция запишет результат передачи. По умолчанию
     функция отправляет вывод в поток <constant>STDOUT</constant> — окно браузера.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-filetime">
   <term>
    <constant>CURLOPT_FILETIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция попытается получить дату изменения
     удалённого документа. Значение также получают функцией
     <function>curl_getinfo</function> с опцией
     <constant>CURLINFO_FILETIME</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-followlocation">
   <term>
    <constant>CURLOPT_FOLLOWLOCATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; дескриптор следует перенаправлениям
     заголовка ответа <literal>"Location: "</literal>, который сервер отправляет
     в HTTP-заголовках.
     Смотрите также описание опции <constant>CURLOPT_MAXREDIRS</constant>.
     Константа недоступна, если включили директиву
     <link xmlns="http://docbook.org/ns/docbook" linkend="ini.open-basedir">open_basedir</link>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-forbid-reuse">
   <term>
    <constant>CURLOPT_FORBID_REUSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; принудительно закрывает соединение после завершения
     обработки, чтобы соединение не попадало в пул открытых соединений и становилось недоступным для повторной передачи.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fresh-connect">
   <term>
    <constant>CURLOPT_FRESH_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; принудительно устанавливает новое соединение
     вместо передачи через кешированное.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpappend">
   <term>
    <constant>CURLOPT_FTPAPPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция добавляет данные в конец файла на удалённом источнике,
     а не перезаписывает.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpascii">
   <term>
    <constant>CURLOPT_FTPASCII</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Псевдоним опции
     <constant>CURLOPT_TRANSFERTEXT</constant>. Лучше предпочесть оригинальную опцию, а не псевдоним.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftplistonly">
   <term>
    <constant>CURLOPT_FTPLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция перечисляет только список имён файлов
     в FTP-каталоге, а не информацию о размерах, датах и т. д.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpport">
   <term>
    <constant>CURLOPT_FTPPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение, которое функция будет использовать, чтобы получить
     IP-адрес для FTP-команды "PORT". Команда "PORT"
     просит удалённый сервер подключиться к заданному через опцию IP-адресу.
     Опция принимает значения в виде простого IP-адреса, имени хоста, имени сетевого
     интерфейса (в системах Unix) или простого дефиса '-', чтобы использовать системный
     IP-адрес по умолчанию.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpsslauth">
   <term>
    <constant>CURLOPT_FTPSSLAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает метод FTP-аутентификации (в активном режиме):
     <constant>CURLFTPAUTH_SSL</constant> — сначала проверяется SSL-протокол,
     <constant>CURLFTPAUTH_TLS</constant> — сначала проверяется TLS-протокол
     или <constant>CURLFTPAUTH_DEFAULT</constant> — дескриптор cURL решает сам.
     Константа доступна с cURL 7.12.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-create-missing-dirs">
   <term>
    <constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция создаёт несуществующие каталоги, если FTP-операция
     обнаруживает путь, который не существует.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-filemethod">
   <term>
    <constant>CURLOPT_FTP_FILEMETHOD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Сообщает, каким методом получать доступ к файлу на FTP- или SFTP-сервере. Опция принимает возможные значения:
     <constant>CURLFTPMETHOD_DEFAULT</constant>,
     <constant>CURLFTPMETHOD_MULTICWD</constant>,
     <constant>CURLFTPMETHOD_NOCWD</constant>
     м <constant>CURLFTPMETHOD_SINGLECWD</constant>.
     Константа доступна с cURL 7.15.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl">
   <term>
    <constant>CURLOPT_FTP_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-eprt">
   <term>
    <constant>CURLOPT_FTP_USE_EPRT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Для опции указывают значение &true;, чтобы функция отправляла EPRT- и LPRT-команды при активных FTP-загрузках.
     Значение &false; отключит команды EPRT и LPRT и функция будет передавать только команду PORT.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-epsv">
   <term>
    <constant>CURLOPT_FTP_USE_EPSV</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция сначала пробует команду EPSV
     для передачи по FTP-протоколу, прежде чем откатиться к команде PASV. Значение &false;
     отключает передачу EPSV-команды.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-happy-eyeballs-timeout-ms">
   <term>
    <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Отдаёт преимущество IPv6-протоколу при подключении по алгоритму Happy Eyeballs.
     Алгоритм Happy Eyeballs пытается подключиться как к IPv4-адресам,
     так и к IPv6-адресам хостов с двойным стеком, но сначала на время ожидания
     в миллисекундах отдаёт преимущество протоколу IPv6.
     Значение по умолчанию — CURL_HET_DEFAULT, которое составляет 200 миллисекунд.
     Константа доступна с 7.3.0 и cURL 7.59.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-haproxyprotocol">
   <term>
    <constant>CURLOPT_HAPROXYPROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция отправляет заголовок протокола HAProxy PROXY v1 в начале соединения.
     Действие по умолчанию — не отправлять этот заголовок.
     Константа доступна с 7.3.0 и cURL 7.60.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-header">
   <term>
    <constant>CURLOPT_HEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; включает заголовок в вывод.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headerfunction">
   <term>
    <constant>CURLOPT_HEADERFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает два аргумента.
     Первый — cURL-ресурс, второй —
     строка с данными заголовка, которые требуется записать. Записать данные заголовков требуется
     этой функцией обратного вызова. Функция возвращает
     количество байтов, которое она записала.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headeropt">
   <term>
    <constant>CURLOPT_HEADEROPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Отправляет заголовки прокси-серверу и хосту, или отдельно.
     Опция принимает значения <constant>CURLHEADER_UNIFIED</constant> и <constant>CURLHEADER_SEPARATE</constant>.
     С cURL 7.42.1 значение по умолчанию равно <constant>CURLHEADER_SEPARATE</constant>,
     в предыдущих версиях значение по умолчанию равнялось <constant>CURLHEADER_UNIFIED</constant>.
     Константа доступна с 7.0.7 и cURL 7.37.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts">
   <term>
    <constant>CURLOPT_HSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя файла HSTS-кеша (HTTP Strict Transport Security).
     Константа доступна с 8.2.0 и cURL 7.74.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts-ctrl">
   <term>
    <constant>CURLOPT_HSTS_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Управляет поведением механизма HSTS (HTTP Strict Transport Security).
     Заполните битовую маску правильным набором значений, чтобы проинструктировать
     дескриптор cURL, как обрабатывать HSTS-хосты при передаче с этим дескриптором.
     Константа <constant>CURLHSTS_ENABLE</constant> включает запоминаемый (in-memory) кеш HSTS.
     Если файл HSTS-кеша определили, установка значения <constant>CURLHSTS_READONLYFILE</constant>
     сделает файл доступным только для чтения. Константа доступна с 8.2.0 и cURL 7.74.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http09-allowed">
   <term>
    <constant>CURLOPT_HTTP09_ALLOWED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Определяет, разрешить ли ответы по протоколу HTTP/0.9. Начиная с libcurl 7.66.0 значение по умолчанию равно &false;;
     раньше значение по умолчанию равнялось &true;.
     Константа доступна с PHP 7.3.15 или 7.4.3 и cURL 7.64.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http200aliases">
   <term>
    <constant>CURLOPT_HTTP200ALIASES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Массив ответов с HTTP-кодом 200, которые будут рассматриваться как действительные
     ответы, а не как ошибки.
     Константа доступна с cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpauth">
   <term>
    <constant>CURLOPT_HTTPAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает метод HTTP-аутентификации. Опция принимает следующие значения:
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_DIGEST</constant>,
     <constant>CURLAUTH_GSSNEGOTIATE</constant>,
     <constant>CURLAUTH_NTLM</constant>,
     <constant>CURLAUTH_AWS_SIGV4</constant>,
     <constant>CURLAUTH_ANY</constant>
     и <constant>CURLAUTH_ANYSAFE</constant>.
     Побитовый оператор ИЛИ — <literal>|</literal> — указывают, чтобы объединить
     больше одного метода. При объединении методов дескриптор cURL опросит сервер, чтобы узнать,
     какие методы поддерживает сервер, и выберет лучший.
     Параметр <constant>CURLAUTH_ANY</constant> устанавливает все биты. Дескриптор cURL автоматически выберет
     тот, который посчитает самым безопасным.
     Параметр <constant>CURLAUTH_ANYSAFE</constant> устанавливает все биты, кроме <constant>CURLAUTH_BASIC</constant>.
     дескриптор cURL автоматически выберет тот, который посчитает самым безопасным.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpget">
   <term>
    <constant>CURLOPT_HTTPGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция сбрасывает HTTP-метод запроса на метод GET.
     Поскольку метод GET — метод по умолчанию, опцию передают,
     только если метод HTTP-запроса для того же дескриптора изменяли на другой.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpheader">
   <term>
    <constant>CURLOPT_HTTPHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Массив полей HTTP-заголовка для установки в формате
     <code>
      array('Content-type: text/plain', 'Content-length: 100')
     </code>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpproxytunnel">
   <term>
    <constant>CURLOPT_HTTPPROXYTUNNEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; включает туннелирование каждого запроса через HTTP-прокси.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-content-decoding">
   <term>
    <constant>CURLOPT_HTTP_CONTENT_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &false; опция возвращает необработанное тело HTTP-ответа.
     Константа доступна с cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-version">
   <term>
    <constant>CURLOPT_HTTP_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция принимает следующие значения:
     <constant>CURL_HTTP_VERSION_NONE</constant> (значение по умолчанию; CURL сам решает, какую версию использовать),
     <constant>CURL_HTTP_VERSION_1_0</constant> (принудительно соединяться по протоколу HTTP/1.0),
     <constant>CURL_HTTP_VERSION_1_1</constant> (принудительно соединяться по протоколу HTTP/1.1),
     <constant>CURL_HTTP_VERSION_2_0</constant> (попытаться соединиться по протоколу HTTP/2.0),
     <constant>CURL_HTTP_VERSION_2</constant> (псевдоним параметра <constant>CURL_HTTP_VERSION_2_0</constant>),
     <constant>CURL_HTTP_VERSION_2TLS</constant> (попытаться соединиться только по протоколу HTTP/2.0 по протоколу TLS (HTTPS))
     или <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant> (выполнять HTTP-запросы без TLS по протоколу HTTP/2.0
     без отката до протокола HTTP/1.1).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infile">
   <term>
    <constant>CURLOPT_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Файл, из которого требуется считывать данные при передаче в удалённый источник.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infilesize">
   <term>
    <constant>CURLOPT_INFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Предполагаемый размер файла в байтах при отправке файла на удалённый сайт.
     Обратите внимание, опция не ограничивает объём данных, которые библиотека libcurl фактически отправляет,
     поскольку фактический объём передаваемых данных зависит от того, что возвращает callback-функция опции
     <constant>CURLOPT_READFUNCTION</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-interface">
   <term>
    <constant>CURLOPT_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название исходящего сетевого интерфейса, который надо использовать. Опция
     принимает значения в виде имени интерфейса, IP-адреса или имени хоста.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ipresolve">
   <term>
    <constant>CURLOPT_IPRESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Разрешает приложению выбрать, какие IP-адреса использовать при разрешении имён хостов.
     Это интересно только для имён хостов, которые разрешают
     адреса больше чем в одну версию IP-протокола. Опция принимает следующие значения:
     <constant>CURL_IPRESOLVE_WHATEVER</constant>,
     <constant>CURL_IPRESOLVE_V4</constant>,
     <constant>CURL_IPRESOLVE_V6</constant> и по умолчанию —
     <constant>CURL_IPRESOLVE_WHATEVER</constant>..
     Константа доступна с cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert-blob">
   <term>
    <constant>CURLOPT_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL-сертификат издателя из блока памяти, который содержит двоичные данные сертификата
     удостоверяющего центра.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keep-sending-on-error">
   <term>
    <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция продолжает отправку тела запроса, если HTTP-код возврата
     равен или больше 300. Действие по умолчанию остановило бы отправку и закрыло
     поток или соединение. Опцию указывают при ручной NTLM-аутентификации.
     Большей части приложений опция не требуется.
     Константа доступна с 7.3.0 и cURL 7.51.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keypasswd">
   <term>
    <constant>CURLOPT_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Пароль, который требуется закрытому ключу в опции <constant>CURLOPT_SSLKEY</constant>
     или <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>.
     Константа доступна с cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krb4level">
   <term>
    <constant>CURLOPT_KRB4LEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Уровень безопасности KRB4 (сетевой протокол аутентификации Kerberos 4). Опция принимает
     следующие значения в порядке от наименее к наиболее сильному:
     <literal>"clear"</literal>,
     <literal>"safe"</literal>,
     <literal>"confidential"</literal>,
     <literal>"private".</literal>.
     Опция будет использовать значение <literal>"private"</literal>,
     если аргумент опции окажется строкой, которая не совпадает со значениями списка.
     Опция отключит KRB4-безопасность при установке значения &null;. Защита KRB4
     работает пока только с FTP-транзакциями.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-login-options">
   <term>
    <constant>CURLOPT_LOGIN_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает параметры входа в систему для конкретного протокола, например,
     указывает предпочтительный механизм аутентификации через "AUTH=NTLM" или "AUTH=*",
     и работает в связке с опцией
     <constant>CURLOPT_USERNAME</constant>.
     Константа доступна с 7.0.7 и cURL 7.34.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-limit">
   <term>
    <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     PHP посчитает скорость передачи чрезмерно низкой и прервёт передачу, если в течение заданного опцией
     <constant>CURLOPT_LOW_SPEED_TIME</constant> количества секунд скорость передачи в байтах в секунду
     будет ниже значения этой опции.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-time">
   <term>
    <constant>CURLOPT_LOW_SPEED_TIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Количество секунд, в течение которых скорость будет ниже значения
     опции <constant>CURLOPT_LOW_SPEED_LIMIT</constant>, перед тем как PHP посчитает
     скорость передачи чрезмерно низкой и прервёт передачу.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt-alllowfails">
   <term>
    <constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     При отправке данных больше чем одному получателю cURL по умолчанию прерывает SMTP-диалог, если хотя бы
     один получатель отправляет ошибку на команду RCPT TO. Эта опция заставляет cURL игнорировать ошибки
     и продолжать с оставшимися допустимыми получателями. С этим флагом cURL прервёт SMTP-диалог и вернёт ошибку,
     которую получил от последней команды RCPT TO, если все получатели вызвали ошибку команды RCPT TO.
     Константа доступна с 8.2.0 и cURL 7.69.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxage-conn">
   <term>
    <constant>CURLOPT_MAXAGE_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное время простоя, в течение которого модулю разрешается оценивать существующее соединение
     как доступное для повторной передачи.
     По умолчанию максимальный срок равен <literal>118</literal> секундам.
     Константа доступна с 8.2.0 и cURL 7.65.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxconnects">
   <term>
    <constant>CURLOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное количество постоянных соединений, которое разрешается устанавливать модулю.
     При достижении предела самое старое соединение в кеше закрывается,
     чтобы предотвратить увеличение числа открытых соединений.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize-large">
   <term>
    <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальный размер файла в байтах, который модулю разрешается скачивать. Передача не начнётся
     и вернёт значение константы <constant>CURLE_FILESIZE_EXCEEDED</constant>,
     если размер файла, который запросил дескриптор, окажется больше этого значения.
     Опция не влияет на скачивание файлов, размер которых функция не знает до скачивания,
     даже если в итоге размер файла превысит предел.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxlifetime-conn">
   <term>
    <constant>CURLOPT_MAXLIFETIME_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное время в секундах с момента установки соединения, в течение которого
     модулю разрешается оценивать существующее соединение как доступное для повторной передачи.
     Если функция обнаружит в кеше соединение старше этого значения,
     она закроет просроченное соединение, как только завершит текущие передачи.
     Значение по умолчанию, которое равно 0 секунд, отключает опцию и делает каждое соединение
     доступным для повторной передачи.
     Константа доступна с 8.2.0 и cURL 7.80.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxredirs">
   <term>
    <constant>CURLOPT_MAXREDIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное количество HTTP-перенаправлений, которому разрешается следовать. Опцию
     указывают вместе с опцией <constant>CURLOPT_FOLLOWLOCATION</constant>.
     Значение по умолчанию, которое равно <literal>20</literal>, предотвращает бесконечные перенаправления.
     Установка значения <literal>-1</literal> разрешит бесконечные перенаправления, а значение <literal>0</literal>
     откажет в перенаправлениях.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-recv-speed-large">
   <term>
    <constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Если совокупная средняя в течение передачи скорость скачивания превысит это значение в байтах
     в секунду, то функция приостановит скачивание,
     чтобы поддерживать среднюю скорость ниже или равной
     значению опции. По умолчанию скорость не ограничивается.
     Константа доступна с cURL 7.15.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-send-speed-large">
   <term>
    <constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Если совокупная средняя в течение передачи скорость отправки данных превысит это значение в байтах
     в секунду, то функция приостановит отправку,
     чтобы поддерживать среднюю скорость ниже или равной
     значению опции. По умолчанию скорость не ограничивается.
     Константа доступна с cURL 7.15.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mime-options">
   <term>
    <constant>CURLOPT_MIME_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.81.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mute">
   <term>
    <constant>CURLOPT_MUTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция отключит сообщения функций модуля cURL. Константу удалили с cURL 7.15.5;
     вместо неё указывают опцию <constant xmlns="http://docbook.org/ns/docbook">CURLOPT_RETURNTRANSFER</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc">
   <term>
    <constant>CURLOPT_NETRC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция будет сканировать файл <filename>~/.netrc</filename>,
     чтобы найти имя пользователя и пароль удалённого сайта, с которым устанавливается
     соединение.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nobody">
   <term>
    <constant>CURLOPT_NOBODY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция исключает тело ответа из вывода.
     Затем для HTTP-метода запроса устанавливается значение HEAD. Изменение значения этой опции на &false;
     не изменяет метод на GET.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noprogress">
   <term>
    <constant>CURLOPT_NOPROGRESS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; отключает индикатор прогресса cURL-передачи.
     <note>
      <para>
       PHP автоматически устанавливает опции значение &true;. Значение изменяют только
       в целях отладки.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nosignal">
   <term>
    <constant>CURLOPT_NOSIGNAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция игнорирует функции модуля cURL, которые вызывают отправку сигнала
     PHP-процессу. В многопоточных SAPI-интерфейсах опция включается по умолчанию,
     поэтому по-прежнему разрешается использовать параметры времени ожидания.
     Константа доступна с cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-passwdfunction">
   <term>
    <constant>CURLOPT_PASSWDFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает три аргумента.
     Первым идёт cURL-дескриптор, вторым —
     строка с запросом пароля, третьим —
     максимальная длина пароля. Функция обратного вызова должна вернуть строку с паролем.
     Константу удалили с PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-password">
   <term>
    <constant>CURLOPT_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Пароль для аутентификации.
     Константа доступна с cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-path-as-is">
   <term>
    <constant>CURLOPT_PATH_AS_IS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция игнорирует обработку последовательностей из двух точек в названиях путей.
     Константа доступна с 7.0.7 и cURL 7.42.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pinnedpublickey">
   <term>
    <constant>CURLOPT_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Прикрепляет открытый ключ.
     Строка содержит или название PEM- или DEX-файла с открытым ключом, который прикрепит опция,
     sha256-хеши с префиксом "sha256//" в кодировке base64, которые разделили точкой с запятой ";".
     Константа доступна с 7.0.7 и cURL 7.39.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pipewait">
   <term>
    <constant>CURLOPT_PIPEWAIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; укажет модулю дождаться соединения, чтобы подтвердить или опровергнуть
     конвейеризацию или мультиплексирование перед продолжением работы.
     Константа доступна с 7.0.7 и cURL 7.43.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-port">
   <term>
    <constant>CURLOPT_PORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Альтернативный номер порта для подключения.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-post">
   <term>
    <constant>CURLOPT_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция выполняет стандартный запрос HTTP-методом POST. Этот вид POST-запроса
     устанавливает тип тела запроса <literal>application/x-www-form-urlencoded</literal>,
     который часто встречается при отправке HTML-форм.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postfields">
   <term>
    <constant>CURLOPT_POSTFIELDS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Полные данные для отправки в HTTP-запросе методом POST.
     Параметр передаёт данные либо
     как URL-кодированную строку наподобие '<literal>para1=val1&amp;para2=val2&amp;...</literal>',
     либо как массив, в котором названия полей — ключи, а поля с данными — значения.
     Функция установит для заголовка <literal>Content-Type</literal>
     значение <literal>multipart/form-data</literal>,
     если значением параметра <parameter>value</parameter> окажется массив.
     Файлы отправляют как объекты классов <classname>CURLFile</classname>
     или <classname>CURLStringFile</classname>, которые присваивают значениям ассоциативного массива,
     который передают в параметр <parameter>value</parameter>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postquote">
   <term>
    <constant>CURLOPT_POSTQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Массив FTP-команд, которые требуется выполнить на сервере после выполнения FTP-запроса.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postredir">
   <term>
    <constant>CURLOPT_POSTREDIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Битовая маска из значений 1 (301 Moved Permanently), 2 (302 Found)
     и 4 (303 See Other), которую устанавливают, когда требуется продолжать обработку HTTP-запроса методом POST
     при наступлении конкретного типа перенаправления
     и установленной опции <constant>CURLOPT_FOLLOWLOCATION</constant>.
     Константа доступна с cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pre-proxy">
   <term>
    <constant>CURLOPT_PRE_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает строку (<type>string</type>), которая содержит название хоста или точечно-числовой
     IP-адрес, который функция будет использовать как предварительный прокси, к которому библиотека curl подключается перед
     подключением к HTTP- или HTTPS-прокси, который указали
     в опции <constant>CURLOPT_PROXY</constant> для запроса, который предстоит выполнить.
     В качестве значения предварительного прокси-сервер опция принимает только SOCKS-прокси с префиксом,
     который указывает тип сокета, например <literal>socks4://</literal>.
     Числовой IPv6-адрес требуется записывать внутри квадратных скобок,
     например <literal>socks5://[2001:0db8:85a3:0000:0000:8a2e:0370:7334]</literal>.
     Установка препрокси в виде пустой строки явно отключит подключение через предварительный прокси.
     Номер порта добавляют в конце строки препрокси после имени хоста через двоеточие,
     например: <literal>socks5://127.0.0.1:1080</literal>.
     Номер порта прокси также указывают отдельно —
     в опции <constant>CURLOPT_PROXYPORT</constant>.
     Значение по умолчанию для порта прокси — 1080, если порт не указали.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-private">
   <term>
    <constant>CURLOPT_PRIVATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Данные, которые требуется связать с cURL-дескриптором. Эти данные затем
     будут доступны для извлечения через вызов функции <function>curl_getinfo</function>
     с флагом <constant>CURLINFO_PRIVATE</constant>.
     cURL-дескриптор ничего не делает с этими данными.
     При работе с cURL-мультидескриптором эти закрытые данные обычно
     играют роль уникального ключа для идентификации простого cURL-дескриптора.
     Константа доступна с cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-progressfunction">
   <term>
    <constant>CURLOPT_PROGRESSFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает пять аргументов.
     Первый — cURL-дескриптор, второй — общее количество байтов,
     которое, как ожидается, функция скачает в текущей передаче, третий —
     количество байтов, которые функция уже скачала, четвёртый — общее количество
     байтов, которое, как ожидается, функция передаст в этой передаче, и пятый —
     количество байтов, которые функция уже передала.
     <note>
      <para>
       Callback-функция вызывается, только если для опции <constant>CURLOPT_NOPROGRESS</constant>
       установили значение &false;.
      </para>
     </note>
     Возврат из функции обратного вызова ненулевого значения прерывает передачу
     и устанавливает ошибку <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols">
   <term>
    <constant>CURLOPT_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Битовая маска из значений констант семейства <constant>CURLPROTO_*</constant>. Битовая маска
     ограничивает протоколы, по которым библиотеке libcurl разрешается передавать данные. Ограничение протоколов
     помогает настраивать библиотеку libcurl на поддержку широкого диапазона протоколов, но при этом ограничивать
     отдельные передачи разрешением на работу только с частью протоколов. По умолчанию библиотека
     libcurl будет принимать все протоколы, которые она поддерживает.
     Дополнительную информацию даёт описание опции <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
     Допустимые опции, которыми устанавливают протоколы:
     <constant>CURLPROTO_HTTP</constant>,
     <constant>CURLPROTO_HTTPS</constant>,
     <constant>CURLPROTO_FTP</constant>,
     <constant>CURLPROTO_FTPS</constant>,
     <constant>CURLPROTO_SCP</constant>,
     <constant>CURLPROTO_SFTP</constant>,
     <constant>CURLPROTO_TELNET</constant>,
     <constant>CURLPROTO_LDAP</constant>,
     <constant>CURLPROTO_LDAPS</constant>,
     <constant>CURLPROTO_DICT</constant>,
     <constant>CURLPROTO_FILE</constant>,
     <constant>CURLPROTO_TFTP</constant>,
     <constant>CURLPROTO_MQTT</constant>
     и <constant>CURLPROTO_ALL</constant>.
     Константа доступна с cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols-str">
   <term>
    <constant>CURLOPT_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy">
   <term>
    <constant>CURLOPT_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP-прокси для туннелирования запросов.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyauth">
   <term>
    <constant>CURLOPT_PROXYAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Метод или методы HTTP-аутентификации для прокси-соединения.
     Опция принимает те же битовые маски, которые даёт описание опции
     <constant>CURLOPT_HTTPAUTH</constant>. Пока для прокси-аутентификации
     поддерживаются только опции <constant>CURLAUTH_BASIC</constant>
     и <constant>CURLAUTH_NTLM</constant>.
     Константа доступна с cURL 7.10.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyheader">
   <term>
    <constant>CURLOPT_PROXYHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Массив пользовательских HTTP-заголовков для передачи прокси.
     Константа доступна с 7.0.7 и cURL 7.37.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyport">
   <term>
    <constant>CURLOPT_PROXYPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Номер порта прокси-сервера, к которому требуется подключиться. Номер порта также устанавливают
     отдельно — через опцию <constant>CURLOPT_PROXY</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxytype">
   <term>
    <constant>CURLOPT_PROXYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Или <constant>CURLPROXY_HTTP</constant> (по умолчанию),
     <constant>CURLPROXY_SOCKS4</constant>,
     <constant>CURLPROXY_SOCKS5</constant>,
     <constant>CURLPROXY_SOCKS4A</constant>,
     или <constant>CURLPROXY_SOCKS5_HOSTNAME</constant>.
     Константа доступна с cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyuserpwd">
   <term>
    <constant>CURLOPT_PROXYUSERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя пользователя и пароль в формате
     <literal>username:password</literal> для подключения
     к прокси-серверу.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo">
   <term>
    <constant>CURLOPT_PROXY_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Путь к пакету сертификатов прокси-сервера, которые выдал центр сертификации. Опция принимает
     строку (<type>string</type>) с названием файла, который содержит один или набор сертификатов
     для проверки HTTPS-прокси.
     Назначение параметра — подключение к прокси-серверу по протоколу HTTPS, а не к HTTPS-серверу.
     По умолчанию опция содержит системный путь хранения, по которому предполагает
     найти cacert-файл с пакетом сертификатов библиотеки libcurl.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo-blob">
   <term>
    <constant>CURLOPT_PROXY_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя PEM-файла, который содержит один или набор сертификатов для проверки HTTPS-прокси.
     Назначение параметра — подключение к прокси-серверу по протоколу HTTPS, а не к HTTPS-серверу.
     По умолчанию опция содержит системный путь хранения, по которому предполагает
     найти cacert-файл с пакетом сертификатов библиотеки libcurl.
     Константа доступна с 8.2.0 и cURL 7.77.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-capath">
   <term>
    <constant>CURLOPT_PROXY_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Каталог, который содержит набор сертификатов центра сертификации для проверки HTTPS-прокси.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-crlfile">
   <term>
    <constant>CURLOPT_PROXY_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает название файла путём конкатенации списка отзыва сертификатов
     (англ. Certificate Revocation List, CRL) в формате PEM для проверки сертификата
     во время SSL-обмена.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла издателя SSL-сертификата прокси-сервера.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert-blob">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL-сертификат издателя для прокси-сервера, который хранится в блоке памяти, который содержит
     двоичные данные сертификата удостоверяющего центра.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-keypasswd">
   <term>
    <constant>CURLOPT_PROXY_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает строку, которую функция будет использовать как пароль, который требуется
     для подключения к HTTPS-прокси с закрытым ключом <constant>CURLOPT_PROXY_SSLKEY</constant>.
     Парольная фраза не нужна для загрузки сертификата, но она требуется для загрузки закрытого ключа отправителя.
     Назначение параметра — подключение к прокси-серверу по протоколу HTTPS, а не к HTTPS-серверу.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-pinnedpublickey">
   <term>
    <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает закреплённый открытый ключ для HTTPS-прокси. Опция принимает строку с именем файла
     прикреплённого открытого ключа отправителя. Опция ждёт файл в формате PEM или DER.
     Опция также принимает строку с sha256-хешами с префиксом "sha256//" в кодировке base64,
     которые разделили точкой с запятой ";".
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-service-name">
   <term>
    <constant>CURLOPT_PROXY_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название службы аутентификации прокси-сервера.
     Константа доступна с PHP 7.0.7, cURL 7.43.0 (для HTTP-прокси) и cURL 7.49.0 (для SOCKS5-прокси).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла клиентского сертификата отправителя для подключения к прокси-серверу по HTTPS-протоколу.
     Формат по умолчанию — P12 для защищенного протокола транспортного уровня и PEM для других движков;
     формат можно изменить опцией <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
     При работе с библиотекой NSS или по защищённым транспортным протоколам (Secure Transport)
     опция также принимает псевдоним сертификата,
     с которым отправитель проходит аутентификацию. Псевдоним указывают так, как он хранится в базе данных безопасности.
     Перед названием файла — если требуется файл из текущего каталога — добавляют префикс «./»,
     чтобы избежать путаницы с псевдонимом сертификата.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcerttype">
   <term>
    <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Формат клиентского сертификата отправителя для подключения к прокси-серверу по HTTPS-протоколу.
     Опция поддерживает форматы PEM и DER, за исключением подключений к системам с движком на базе
     защищённых транспортных протоколов (Secure Transport).
     Механизмы на основе библиотеки OpenSSL (версии 0.9.3 или новее) и защищённых транспортных протоколов Secure Transport
     (на операционных системах iOS 5 или новее, или OS X 10.7 или новее) поддерживают также формат P12
     для PKCS#12-кодированных файлов. Значение по умолчанию равно "PEM".
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Клиентский сертификат SSL-прокси из блока памяти, который содержит двоичные данные сертификата.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла закрытого ключа отправителя для подключения к HTTPS-прокси.
     Формат по умолчанию: "PEM"; формат можно изменить
     опцией <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
     Следующая часть параграфа относится только к операционным системам iOS и Mac OS X:
     функция игнорирует опцию, если модуль cURL собрали с поддержкой
     защищённых протоколов транспортного уровня (Secure Transport). Опция доступна с включённой встроенной поддержкой
     TLS-протокола. Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkeytype">
   <term>
    <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает формат закрытого ключа отправителя. Опция поддерживает форматы: PEM, DER и ENG.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Закрытый ключ для сертификата прокси-сервера из блока памяти,
     который содержит двоичные данные сертификата.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslversion">
   <term>
    <constant>CURLOPT_PROXY_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа из следующего списка:
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       Лучше не устанавливать эту опцию и оставить значение по умолчанию —
       <constant>CURL_SSLVERSION_DEFAULT</constant>,
       которое попытается определить версию удалённого SSL-протокола.
      </simpara>
     </warning>
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-cipher-list">
   <term>
    <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Определяет список шифров для подключения к прокси-серверу по HTTPS-протоколу.
     Опция принимает только синтаксически корректный список,
     который состоит из одного или нескольких строковых значений с названиями шифров,
     разделенных двоеточиями. Опция также принимает разделители в виде запятых и пробелов,
     но чаще пользуются двоеточием, а символы !, - и + указывают как операторы.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-options">
   <term>
    <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает параметры поведения SSL-прокси. Параметры устанавливают как битовую маску из следующих констант:
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
     </simplelist>
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifyhost">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение <literal>2</literal> устанавливают, чтобы сверить поля
     имени сертификата HTTPS-прокси с именем прокси-сервера.
     Со значением <literal>0</literal> соединение успешно выполняется
     независимо от имён в сертификате.
     При работе с опцией соблюдают осторожность!
     В curl 7.28.0 и более ранних версиях значение <literal>1</literal> рассматривается как опция отладки.
     С версии curl 7.28.1 до 7.65.3 функция возвращает ошибку <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant>.
     Начиная с curl 7.66.0 и далее значения <literal>1</literal> и <literal>2</literal> обрабатываются как одно и то же значение.
     В производственных средах значение опции требуется оставлять равным <literal>2</literal> (значение по умолчанию).
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifypeer">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Проверяет SSL-сертификат прокси-сервера. Со значением &false; опция останавливает проверку
     сертификата однорангового узла. Альтернативные сертификаты для проверки
     указывают через опцию <constant>CURLOPT_CAINFO</constant>,
     а каталог сертификатов указывают через опцию
     <constant>CURLOPT_CAPATH</constant>. При установке значения &false; проверка сертификата
     однорангового узла завершается успешно независимо от подлинности сертификата. Значение по умолчанию равняется &true;.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tls13-ciphers">
   <term>
    <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Список наборов шифров для подключения к прокси по протоколу TLS 1.3.
     Опция принимает только синтаксически правильный список, который состоит из одного
     или нескольких строковых значений с названиями наборов шифров, разделённых двоеточиями. Опция будет
     работать, только если curl собрали для работы с библиотекой OpenSSL 1.1.1 или новее.
     При работе с другим SSL-бэкендом попробуют установить наборы шифров протокола TLS 1.3
     через опцию <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>.
     Константа доступна с 7.3.0 и cURL 7.61.0, если модуль собрали с поддержкой OpenSSL &gt;= 1.1.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-password">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция устанавливает пароль для TLS-аутентификации методом, который указали в опции
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Для работы опции требуется также
     установить параметр <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-type">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Метод аутентификации по протоколу TLS для HTTPS-соединения.
     Опция поддерживает метод <literal>"SRP"</literal>.
     <note>
      <para>
       Аутентификация по безопасному удаленному паролю (англ. Secure Remote Password, SRP) по протоколу TLS
       работает взаимно, только если у обеих сторон есть общий секрет. TLS-SRP-аутентификация будет работать,
       только если опции <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
       и <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> тоже установили.
      </para>
     </note>
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-username">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя пользователя для TLS-аутентификации прокси-сервера по протоколу HTTPS для метода, который указали
     в опции <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Для работы опции требуется также
     установить параметр <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>.
     Константа доступна с 7.3.0 и cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-put">
   <term>
    <constant>CURLOPT_PUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Для опции устанавливают значение &true;, чтобы отправить файл HTTP-методом PUT. Файл, который требуется
     разместить на сервере методом PUT, указывают в опции <constant>CURLOPT_INFILE</constant>,
     а предполагаемый размер файла указывают через опцию <constant>CURLOPT_INFILESIZE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quick-exit">
   <term>
    <constant>CURLOPT_QUICK_EXIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.87.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quote">
   <term>
    <constant>CURLOPT_QUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Массив FTP-команд, которые требуется выполнить на сервере перед FTP-запросом.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-random-file">
   <term>
    <constant>CURLOPT_RANDOM_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла — источника случайных данных с начальным числом (seed), которое инициализирует
     генератор случайных чисел для передач по протоколу SSL.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-range">
   <term>
    <constant>CURLOPT_RANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Диапазон или диапазоны данных в формате <literal>"X-Y"</literal>,
     которые требуется извлечь, при этом индексы байтов — X или Y — разрешается не указывать. HTTP-передачи
     также поддерживают набор интервалов с разделением запятыми в формате
     <literal>"X-Y,N-M"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readfunction">
   <term>
    <constant>CURLOPT_READFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция принимает callback-функцию, которая принимает три аргумента.
     Первый — cURL-дескриптор, второй —
     ресурс потока, который передали модулю cURL через опцию
     <constant>CURLOPT_INFILE</constant>, и третий — максимальный объём
     данных для чтения. От callback-функции требуется возвращать строку,
     длина которой равна или меньше количества запрашиваемых данных,
     которую функция обратного вызова обычно считывает из ресурса потока, который установили во втором параметре.
     Об окончании данных в источнике — состояние <literal>EOF</literal> — функция сообщает возвратом пустой строки.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Битовая маска из значений констант семейства <constant>CURLPROTO_*</constant>,
     которая ограничивает протоколы, по которым библиотеке libcurl разрешается передавать данные
     при следовании перенаправлениям при включённой опции <constant>CURLOPT_FOLLOWLOCATION</constant>.
     Опция ограничивает отдельные передачи в перенаправлениях только
     подмножеством протоколов. По умолчанию библиотека libcurl разрешает все протоколы,
     за исключением URI-схемы FILE и протокола копирования файлов SCP. В версиях до 7.19.4 перенаправление
     действовало для всех протоколов без исключения.
     Описание опции <constant>CURLOPT_PROTOCOLS</constant> приводит список констант со значениями протоколов.
     Константа доступна с cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols-str">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-referer">
   <term>
    <constant>CURLOPT_REFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Содержимое заголовка <literal>"Referer: "</literal>, который функция
     передаст в HTTP-запросе.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-request-target">
   <term>
    <constant>CURLOPT_REQUEST_TARGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 7.3.0 и cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resolve">
   <term>
    <constant>CURLOPT_RESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Указывает пользовательский адрес для конкретной пары хоста и порта. Массив
     строк, которые содержат имя хоста, порт и IP-адрес, и в которых каждый элемент отделили
     двоеточием. Опция принимает строки в формате:
     <code>
      array("example.com:80:127.0.0.1")
     </code>
     Константа доступна с cURL 7.21.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resume-from">
   <term>
    <constant>CURLOPT_RESUME_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция устанавливает смещение в байтах, с которого требуется возобновить передачу.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-returntransfer">
   <term>
    <constant>CURLOPT_RETURNTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция указывает функции <function>curl_exec</function>,
     чтобы та вернула результат передачи в виде строки,
     а не выводила результат в стандартные потоки.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-safe-upload">
   <term>
    <constant>CURLOPT_SAFE_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение по умолчанию равно &true;, что отключает поддержку префикса <literal>@</literal>
     при загрузке файлов через опцию <constant>CURLOPT_POSTFIELDS</constant>,
     что означает, что значения, которые начинаются с символа <literal>@</literal>, разрешается
     безопасно передавать как поля. Альтернативный способ — отправлять файлы как объекты
     класса <classname>CURLFile</classname>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-authzid">
   <term>
    <constant>CURLOPT_SASL_AUTHZID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Идентификатор авторизации authzid для передачи. Параметр указывают только при работе с простым механизмом
     аутентификации PLAIN SASL, в котором это необязательно. Функция отправит на сервер вместе с паролем только
     идентификатор аутентификации authcid, который указали в имени пользователя, если для опции не указали значение.
     Сервер получит идентификатор авторизации authzid из идентификатора аутентификации authcid,
     если идентификатор авторизации не указали, а затем будет использовать идентификатор авторизации внутренне.
     Константа доступна с 8.2.0 и cURL 7.66.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-ir">
   <term>
    <constant>CURLOPT_SASL_IR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция разрешит отправку первоначального ответа в первом пакете.
     Константа доступна с 7.0.7 и cURL 7.31.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-service-name">
   <term>
    <constant>CURLOPT_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя службы аутентификации.
     Константа доступна с 7.0.7 и cURL 7.43.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-share">
   <term>
    <constant>CURLOPT_SHARE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция принимает разделяемый cURL-дескриптор, который возвращает функция <function>curl_share_init</function>.
     Разрешает cURL-дескриптору использовать данные из разделяемого дескриптора.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-auth">
   <term>
    <constant>CURLOPT_SOCKS5_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция устанавливает метод или методы SOCKS5-аутентификации. Опция принимает значения:
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_GSSAPI</constant>,
     <constant>CURLAUTH_NONE</constant>.
     Побитовый оператор ИЛИ (<literal>|</literal>) объединяет
     больше одного метода. При установке больше одного метода модуль cURL опросит сервер, чтобы понять,
     какие методы он поддерживает, и выберет лучший.
     Метод <constant>CURLAUTH_BASIC</constant> разрешает аутентификацию по имени пользователя и паролю.
     Метод <constant>CURLAUTH_GSSAPI</constant> разрешает аутентификацию через интерфейс GSS-API.
     Метод <constant>CURLAUTH_NONE</constant> разрешает передачу без аутентификации.
     Значение по умолчанию равно объединению методов: <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
     Имя пользователя и пароль устанавливают через опцию <constant>CURLOPT_PROXYUSERPWD</constant>.
     Константа доступна с 7.3.0 и cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-auth-types">
   <term>
    <constant>CURLOPT_SSH_AUTH_TYPES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция принимает битовую маску из одного или нескольких значений:
     <constant>CURLSSH_AUTH_PUBLICKEY</constant>,
     <constant>CURLSSH_AUTH_PASSWORD</constant>,
     <constant>CURLSSH_AUTH_HOST</constant>,
     <constant>CURLSSH_AUTH_KEYBOARD</constant>. Флаг
     <constant>CURLSSH_AUTH_ANY</constant> разрешит библиотеке libcurl выбрать значение.
     Константа доступна с cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-compression">
   <term>
    <constant>CURLOPT_SSH_COMPRESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; включает встроенное SSH-сжатие. Это просьба, а не указание;
     сервер не обязан её выполнять.
     Константа доступна с 7.3.0 и cURL 7.56.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-hostkeyfunction">
   <term>
    <constant>CURLOPT_SSH_HOSTKEYFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.84.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-md5">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Строка, которая содержит 32 шестнадцатеричные цифры. Строку требуется формировать
     как контрольную сумму открытого ключа удалённого хоста по алгоритму MD5, а библиотека libcurl отклонит
     соединение с хостом, если контрольные md5-суммы не совпадают.
     Опция работает только с SCP- и SFTP-передачами.
     Константа доступна с cURL 7.17.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-sha256">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция принимает Base64-кодированный SHA256-хеш открытого ключа удалённого хоста.
     Передача завершится ошибкой, если хеш не соответствует хешу удалённого хоста.
     Константа доступна с 8.2.0 и cURL 7.80.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-private-keyfile">
   <term>
    <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла закрытого ключа отправителя. Без этой опции библиотека libcurl по умолчанию
     извлекает закрытый ключ из файла $HOME/.ssh/id_dsa, если переменную окружения HOME установили,
     и просто файл "id_dsa" в текущем каталоге, если переменную HOME не установили.
     Пароль для файлов, которые защитили паролем, устанавливают через опцию
     <constant>CURLOPT_KEYPASSWD</constant>.
     Константа доступна с cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-public-keyfile">
   <term>
    <constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя файла открытого ключа отправителя. Без этой опции библиотека libcurl по умолчанию
     извлекает открытый ключ из файла $HOME/.ssh/id_dsa.pub, если переменную окружения HOME установили,
     и просто файл "id_dsa.pub" в текущем каталоге, если переменную HOME не установили.
     Константа доступна с cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert">
   <term>
    <constant>CURLOPT_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя файла с сертификатом в формате PEM.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcertpasswd">
   <term>
    <constant>CURLOPT_SSLCERTPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Пароль, который требуется для сертификата, который указали в опции
     <constant>CURLOPT_SSLCERT</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcerttype">
   <term>
    <constant>CURLOPT_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Формат сертификата. Опция поддерживает форматы
     <literal>"PEM"</literal> (по умолчанию), <literal>"DER"</literal>
     и <literal>"ENG"</literal>.
     С OpenSSL 0.9.3 опция также поддерживает формат <literal>"P12"</literal>
     (для PKCS#12-кодированных файлов).
     Константа доступна с cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert-blob">
   <term>
    <constant>CURLOPT_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL-сертификат клиента из области памяти, которая содержит двоичные данные.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine">
   <term>
    <constant>CURLOPT_SSLENGINE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Идентификатор криптографического движка закрытого SSL-ключа,
     который указали в опции <constant>CURLOPT_SSLKEY</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine-default">
   <term>
    <constant>CURLOPT_SSLENGINE_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Идентификатор криптографического движка асимметричных
     операций шифрования.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey">
   <term>
    <constant>CURLOPT_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя файла с закрытым SSL-ключом.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeypasswd">
   <term>
    <constant>CURLOPT_SSLKEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Секретный пароль, который требуется для закрытого SSL-ключа, который указали в опции
     <constant>CURLOPT_SSLKEY</constant>.
     <note>
      <para>
       Поскольку опция содержит конфиденциальный пароль,
       PHP-скрипт с паролем хранят в безопасном месте.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeytype">
   <term>
    <constant>CURLOPT_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Тип закрытого SSL-ключа, который указали в опции
     <constant>CURLOPT_SSLKEY</constant>. Типы ключей, которые поддерживает опция:
     <literal>"PEM"</literal> (по умолчанию), <literal>"DER"</literal>
     и <literal>"ENG"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey-blob">
   <term>
    <constant>CURLOPT_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Закрытый ключ клиентского сертификата из области памяти, которая содержит двоичные данные.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslversion">
   <term>
    <constant>CURLOPT_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция принимает константы из следующего списка:
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv2</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
     </simplelist>
     .
     Максимальную версию протокола TLS устанавливают константой семейства
     <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>.
     Опция принимает объединение константы семейства
     <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>
     с константой семейства <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>
     через побитовое ИЛИ.

     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant> (максимальная версия, которую поддерживает библиотека)</member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       Лучше не устанавливать опцию и оставить значения по умолчанию,
       поскольку установка значения
       <constant>CURL_SSLVERSION_SSLv2</constant>
       или
       <constant>CURL_SSLVERSION_SSLv3</constant>
       серьёзную угрозу безопасности, если помнить
       об уязвимостях в протоколах SSLv2 и SSLv3.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-cipher-list">
   <term>
    <constant>CURLOPT_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Список шифров для передач по протоколу SSL. Например,
     <literal>RC4-SHA</literal> и <literal>TLSv1</literal> — допустимый
     список шифров.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-ec-curves">
   <term>
    <constant>CURLOPT_SSL_EC_CURVES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Разделённый двоеточиями список алгоритмов эллиптических кривых. Например,
     <literal>X25519:P-521</literal> — допустимый список из двух эллиптических кривых.
     Опция определят алгоритмы обмена клиентскими ключами во время SSL-рукопожатия,
     если cURL-дескриптор SSL-бэкенда собрали с поддержкой этой опции.
     Константа доступна с 8.2.0 и cURL 7.73.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-alpn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_ALPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &false; отключает расширение ALPN во время SSL-рукопожатия (если на SSL-бэкенде
     библиотеку libcurl собрали с поддержкой ALPN-расширения TLS-протокола), которое
     согласовывает протокол безопасного соединения по протоколу HTTP2.
     Константа доступна с 7.0.7 и cURL 7.36.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-npn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_NPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &false; отключает расширение NPN во время SSL-рукопожатия (если на SSL-бэкенде
     библиотеку libcurl собрали с поддержкой ALPN-расширения TLS-протокола), которое
     согласовывает протокол безопасного соединения по протоколу HTTP2.
     Константа доступна с 7.0.7 и cURL 7.36.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-falsestart">
   <term>
    <constant>CURLOPT_SSL_FALSESTART</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; включает режим ложного старта во время TLS-рукопожатия.
     Константа доступна с 7.0.7 и cURL 7.42.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-options">
   <term>
    <constant>CURLOPT_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает параметры SSL-поведения в виде битовой маски из следующих констант:
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_AUTO_CLIENT_CERT</constant></member>
      <member><constant>CURLSSLOPT_NATIVE_CA</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
      <member><constant>CURLSSLOPT_REVOKE_BEST_EFFORT</constant></member>
     </simplelist>
     Константа доступна с 7.0.7. и cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifyhost">
   <term>
    <constant>CURLOPT_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение <literal>2</literal> указывают, чтобы убедиться, что поле общего имени (Common Name)
     или поле альтернативного имени субъекта (Subject Alternate Name) в сертификате однорангового SSL-узла
     соответствует имени хоста. Значение <literal>0</literal> указывают, чтобы не проверять имена.
     Значение <literal>1</literal> не следует использовать.
     В производственных средах значение параметра оставляют
     равным <literal>2</literal> (значение по умолчанию).
     Поддержку значения <literal>1</literal> удалили в cURL 7.28.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifypeer">
   <term>
    <constant>CURLOPT_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &false; опция останавливает проверку сертификата однорангового
     узла. Альтернативные сертификаты для проверки
     указывают через опцию <constant>CURLOPT_CAINFO</constant>,
     а каталог сертификатов указывают через
     опцию <constant>CURLOPT_CAPATH</constant>. С cURL 7.10 значение по умолчанию равно &true;. Пакет
     по умолчанию устанавливается начиная с cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifystatus">
   <term>
    <constant>CURLOPT_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция проверяет статус сертификата.
     Константа доступна с 7.0.7 и cURL 7.41.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stderr">
   <term>
    <constant>CURLOPT_STDERR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Альтернативное место для вывода ошибок, в которое функция будет выводить ошибки вместо
     стандартного потока <constant>STDERR</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stream-weight">
   <term>
    <constant>CURLOPT_STREAM_WEIGHT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает вес числового потока. Опция принимает значения от 1 до 256.
     Константа доступна с 7.0.7 и cURL 7.46.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-suppress-connect-headers">
   <term>
    <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; при включённой опции <constant>CURLOPT_HTTPPROXYTUNNEL</constant> и запросе CONNECT
     подавляет заголовки ответов CONNECT прокси-сервера из пользовательских callback-функций,
     которые указали в опциях <constant>CURLOPT_HEADERFUNCTION</constant> и <constant>CURLOPT_WRITEFUNCTION</constant>
     Константа доступна с 7.3.0 и cURL 7.54.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-fastopen">
   <term>
    <constant>CURLOPT_TCP_FASTOPEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; включает механизм TCP Fast Open.
     Константа доступна с 7.0.7 и cURL 7.49.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepalive">
   <term>
    <constant>CURLOPT_TCP_KEEPALIVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением <literal>1</literal> опция будет отправлять пакеты для проверки активности TCP-соединения. Задержкой
     и частотой проверок управляют через опции <constant>CURLOPT_TCP_KEEPIDLE</constant>
     и <constant>CURLOPT_TCP_KEEPINTVL</constant>, если только операционная система
     поддерживает эти параметры. Со значением по умолчанию, которое равно <literal>0</literal>, модуль не проверяет
     активность соединения. Константа доступна с cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepidle">
   <term>
    <constant>CURLOPT_TCP_KEEPIDLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает задержку простоя соединения в секундах, которую операционная система выдержит
     перед отправкой пакета проверки активности соединения, если опцию
     <constant>CURLOPT_TCP_KEEPALIVE</constant> включили. Не каждая операционная система поддерживает эту опцию.
     Значение по умолчанию равно <literal>60</literal>.
     Константа доступна с cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepintvl">
   <term>
    <constant>CURLOPT_TCP_KEEPINTVL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает интервал ожидания в секундах, который операционная система будет выдерживать между отправкой пакетов
     проверки активности соединения, если опцию <constant>CURLOPT_TCP_KEEPALIVE</constant> включили.
     Не каждая операционная система поддерживает эту опцию.
     Значение по умолчанию равно <literal>60</literal>.
     Константа доступна с cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-nodelay">
   <term>
    <constant>CURLOPT_TCP_NODELAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; отключает алгоритм TCP-протокола Nagle, который пытается минимизировать
     количество мелких пакетов в сети.
     Константа доступна с cURL 7.11.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-no-options">
   <term>
    <constant>CURLOPT_TFTP_NO_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; отключает отправку запросов TFTP-параметров.
     Константа доступна с 7.0.7 и cURL 7.48.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timecondition">
   <term>
    <constant>CURLOPT_TIMECONDITION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает способ трактовки опции <constant>CURLOPT_TIMEVALUE</constant>.
     Значение <constant>CURL_TIMECOND_IFMODSINCE</constant> указывают, чтобы
     функция возвращала страницу, только если она изменилась со времени,
     которое указали в опции <constant>CURLOPT_TIMEVALUE</constant>.
     Функция вернёт заголовок <literal>"304 Not Modified"</literal>,
     если страница не изменилась и значение опции <constant>CURLOPT_HEADER</constant> равно &true;.
     Значение <constant>CURL_TIMECOND_IFUNMODSINCE</constant> даёт обратный эффект.
     Со значением <constant>CURL_TIMECOND_NONE</constant> опция игнорирует
     опцию <constant>CURLOPT_TIMEVALUE</constant> и каждый раз возвращает страницу.
     Значение по умолчанию — <constant>CURL_TIMECOND_NONE</constant>.
     До cURL 7.46.0 значением по умолчанию было значение константы <constant>CURL_TIMECOND_IFMODSINCE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout">
   <term>
    <constant>CURLOPT_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное время выполнения функций модуля cURL в секундах.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout-ms">
   <term>
    <constant>CURLOPT_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное время выполнения функций модуля cURL
     в миллисекундах.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     Эта часть соединения по-прежнему будет использовать разрешение в целую секунду для времён ожидания
     с минимальным допустимым временем ожидания в одну секунду,
     если библиотеку libcurl собрали со стандартным резольвером имён системы.
     Константа доступна с cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue">
   <term>
    <constant>CURLOPT_TIMEVALUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Время в секундах с 1 января 1970 года. Значение использует опция
     <constant>CURLOPT_TIMECONDITION</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue-large">
   <term>
    <constant>CURLOPT_TIMEVALUE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Время в секундах с 1 января 1970 года. Значение использует опция
     <constant>CURLOPT_TIMECONDITION</constant>. Значение по умолчанию равно 0.
     Разница между этой опцией и опцией <constant>CURLOPT_TIMEVALUE</constant>
     состоит в типе аргумента. В системах, в которых размер структуры данных, которая принадлежит типу 'long',
     составляет всего 32 бита, для установки дат после 2038 года требуется указывать этот параметр.
     Константа доступна с 7.3.0 и cURL 7.59.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tls13-ciphers">
   <term>
    <constant>CURLOPT_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Список наборов шифров для подключения по протоколу TLS 1.3. Опция принимает только синтаксически правильный список,
     который состоит из одного или нескольких строковых значений с названиями наборов шифров, разделённых двоеточиями.
     Опция будет работать, только если curl собрали с библиотекой OpenSSL 1.1.1 или новее.
     При работе с другим SSL-бэкендом попробуют установить наборы шифров протокола TLS 1.3
     через опцию <constant>CURLOPT_SSL_CIPHER_LIST</constant>.
     Константа доступна с 7.3.0 и cURL 7.61.0, если модуль собрали с поддержкой OpenSSL &gt;= 1.1.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfertext">
   <term>
    <constant>CURLOPT_TRANSFERTEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; устанавливает ASCII-режим для FTP-передач.
     При передаче данных по протоколу LDAP
     данные возвращаются простым текстом вместо HTML-разметки. В системах Windows
     это не установит стандартный поток вывода <constant>STDOUT</constant> в бинарный режим.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unix-socket-path">
   <term>
    <constant>CURLOPT_UNIX_SOCKET_PATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Разрешает использовать сокеты UNIX-доменов как конечные точки
     соединения и устанавливает путь к заданной строке (<type>string</type>).
     Константа доступна с 7.0.7 и cURL 7.40.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unrestricted-auth">
   <term>
    <constant>CURLOPT_UNRESTRICTED_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция продолжает отправку имени пользователя и пароля
     при следовании по перенаправлениям при включённой опции
     <constant>CURLOPT_FOLLOWLOCATION</constant>, даже когда
     название хоста изменилось.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upkeep-interval-ms">
   <term>
    <constant>CURLOPT_UPKEEP_INTERVAL_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Отдельные протоколы со встроенным механизмом «поддержки соединения в рабочем состоянии»
     отправляют небольшой объем трафика через установленные соединения,
     чтобы держать соединения открытыми. Опция определяет интервал, в течение которого будет поддерживаться соединение.
     Действующий и единственный протокол с механизмом сохранения соединения — HTTP/2. Когда
     интервал поддержки соединения истекает, протокол HTTP/2 отправляет в соединение кадр PING.
     Значение по умолчанию – <literal>60</literal> секунд.
     Константа доступна с 8.2.0 и cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload">
   <term>
    <constant>CURLOPT_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Для опции указывают значение &true;, чтобы подготовить файл к отправке на сервер.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload-buffersize">
   <term>
    <constant>CURLOPT_UPLOAD_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает размер буфера, с которым cURL-дескриптор будет работать при отправке файла, в байтах.
     Размер буфера отправки файла по умолчанию — 64 килобайта. Максимальный размер буфера, который разрешается
     установить, — 2 мегабайта. Минимальный допустимый размер — 16 килобайтов.
     Константа доступна с 8.2.0 и cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-url">
   <term>
    <constant>CURLOPT_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     URL-адрес, который требуется получить. Значение также устанавливают при инициализации
     сеанса функцией <function>curl_init</function>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-useragent">
   <term>
    <constant>CURLOPT_USERAGENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Содержимое заголовка <literal>"User-Agent: "</literal>, которое функция отправит
     в HTTP-запросе.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-username">
   <term>
    <constant>CURLOPT_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя пользователя, которое функция отправит при аутентификации.
     Константа доступна с cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-userpwd">
   <term>
    <constant>CURLOPT_USERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя пользователя и пароль в формате
     <literal>"[username]:[password]"</literal>, которые функция отправит
     при установке соединения.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-verbose">
   <term>
    <constant>CURLOPT_VERBOSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция выводит подробную информацию о передаче. Записывает вывод
     в поток <constant>STDERR</constant> или в файл, который указали
     в опции <constant>CURLOPT_STDERR</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writefunction">
   <term>
    <constant>CURLOPT_WRITEFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает два аргумента.
     Первый — cURL-ресурс, второй —
     строка с данными для записи. Сохранить данные требуется
     этой функцией обратного вызова. Функция должна вернуть точное
     количество байтов, которое она записала, или передача прервётся и функция выдаст ошибку.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writeheader">
   <term>
    <constant>CURLOPT_WRITEHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Файл, в который записываются заголовки передачи.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ws-options">
   <term>
    <constant>CURLOPT_WS_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.86.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xferinfofunction">
   <term>
    <constant>CURLOPT_XFERINFOFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает два аргумента.
     У опции то же назначение, что и у опции <constant>CURLOPT_PROGRESSFUNCTION</constant>,
     но более современное, лучше предпочесть эту cURL-опцию.
     Константа доступна с 8.2.0 и cURL 7.32.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xoauth2-bearer">
   <term>
    <constant>CURLOPT_XOAUTH2_BEARER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Указывает токен доступа для протокола OAuth 2.0.
     Константа доступна с 7.0.7 и cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
