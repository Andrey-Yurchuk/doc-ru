<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b7d6aaa945219da933a0ac2a4b610aa1b09dfcb0 Maintainer: malferov Status: ready -->
<!-- Reviewed: no -->
 <variablelist role="constant_list">
  <title><function>curl-setopt</function></title>
  <varlistentry xml:id="constant.curlopt-abstract-unix-socket">
   <term>
    <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Разрешает соединяться с абстрактным сокетом Unix-домена вместо установления
     TCP-соединения с хостом и устанавливает путь к заданной
     строке <type>string</type>. Опция следует той же семантике,
     что и опция <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Обе опции
     разделяют одно хранилище, поэтому для каждого дескриптора разрешается
     установить только одну.
     Константа доступна с PHP 7.3.0 и cURL 7.53.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc">
   <term>
    <constant>CURLOPT_ALTSVC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Передаёт название файла модулю cURL, который функция будет использовать как Alt-Svc-файл кеша
     для чтения существующего содержимого кеша и, возможно, также записи данных
     обратно в файл после передачи, если только для опции <constant>CURLOPT_ALTSVC_CTRL</constant>
     не установили значение <constant>CURLALTSVC_READONLYFILE</constant>.
     Константа доступна с 8.2.0 и cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc-ctrl">
   <term>
    <constant>CURLOPT_ALTSVC_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Заполняет битовую маску правильным набором функций, чтобы проинструктировать дескриптор cURL, как обрабатывать файл Alt-Svc
     при обмене данными через дескриптор. cURL-дескриптор принимает заголовки файла Alt-Svc только по HTTPS-протоколу.
     Функция выполнит запрос к альтернативному источнику, только если источник правильно работает по HTTPS-протоколу.
     Установка хотя бы одного бита включит механизм Alt-Svc. Поведение кеша определяет следующий набор опций:
     <constant>CURLALTSVC_H1</constant>,
     <constant>CURLALTSVC_H2</constant>,
     <constant>CURLALTSVC_H3</constant>
     и <constant>CURLALTSVC_READONLYFILE</constant>.
     Константа доступна с 8.2.0 и cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-autoreferer">
   <term>
    <constant>CURLOPT_AUTOREFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; автоматически установит значение поля <literal>Referer:</literal> в HTTP-заголовках
     запросов, которые следуют по URL-адресу перенаправления в заголовке ответа <literal>Location:</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-aws-sigv4">
   <term>
    <constant>CURLOPT_AWS_SIGV4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Аутентифицирует запрос к веб-службам компании Amazon по AWS-подписи версии 4 в HTTP- или HTTPS-заголовках.
     Опция переопределяет другие типы аутентификации, которые установили
     в опции <constant>CURLOPT_HTTPAUTH</constant>. Этот метод нельзя комбинировать с другими типами аутентификации.
     Константа доступна с 8.2.0 и cURL 7.75.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-binarytransfer">
   <term>
    <constant>CURLOPT_BINARYTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-buffersize">
   <term>
    <constant>CURLOPT_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Размер буфера, который функция будет использовать при каждом чтении данных. При этом функция
     не гарантирует, что обработает запрос.
     Константа доступна с cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo">
   <term>
    <constant>CURLOPT_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя файла, в котором содержится один или набор сертификатов для проверки узла.
     Опцию устанавливают только в сочетании с опцией
     <constant>CURLOPT_SSL_VERIFYPEER</constant>. Иногда требуется указывать абсолютный путь к файлу.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo-blob">
   <term>
    <constant>CURLOPT_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя PEM-файла, в котором содержится один или набор сертификатов для проверки узла.
     Опция переопределяет опцию <constant>CURLOPT_CAINFO</constant>.
     Константа доступна с 8.2.0 и cURL 7.77.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-capath">
   <term>
    <constant>CURLOPT_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Каталог, который содержит набор сертификатов удостоверяющего центра. Опцию указывают
     вместе с опцией <constant>CURLOPT_SSL_VERIFYPEER</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ca-cache-timeout">
   <term>
    <constant>CURLOPT_CA_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.87.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-certinfo">
   <term>
    <constant>CURLOPT_CERTINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; выводит информацию о SSL-сертификации
     в поток <constant>STDERR</constant>
     при безопасной передаче. Константу добавили в cURL 7.19.1.
     Константа будет работать, только если включить опцию <constant>CURLOPT_VERBOSE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Количество секунд, которое функция потратит на попытку установить подключение. Значение 0
     включит бесконечное ожидание.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout-ms">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Количество миллисекунд, которое функция потратит на попытку установить подключение. Значение 0
     включит бесконечное ожидание.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     Эта часть соединения по-прежнему будет использовать разрешение в целую секунду для пределов времени,
     у которых минимальное допустимое время ожидания равно одной секунде, если библиотеку libcurl
     собрали со стандартным резольвером имён системы. Константа доступна с cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-only">
   <term>
    <constant>CURLOPT_CONNECT_ONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; сообщает библиотеке, что требуется аутентифицировать
     прокси-сервер и настройку соединения, но не передавать данные. Опцию реализовали
     для работы с протоколами HTTP, SMTP и POP3.
     Константа доступна с cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-to">
   <term>
    <constant>CURLOPT_CONNECT_TO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Подключается к заданному хосту и порту, а не хосту и порту URL-адреса.
     Опция принимает массив строк в формате
     <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
     Константа доступна с 7.0.7 и cURL 7.49.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookie">
   <term>
    <constant>CURLOPT_COOKIE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Содержимое заголовка <literal>"Cookie: "</literal>, которое функция будет использовать в HTTP-запросе.
     Обратите внимание, что блоки данных cookie разделяются точкой с запятой, за которой следует
     пробел: "<literal>fruit=apple; colour=red</literal>"
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiefile">
   <term>
    <constant>CURLOPT_COOKIEFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя файла, который содержит блоки данных cookies. Блоки cookie
     записывают в файл в формате Netscape или прямо простыми заголовками в HTTP-стиле, которые сбросили
     в файл.
     Функция не будет загружать блоки данных cookies, но обработка cookies
     останется включённой, если имя файла окажется пустой строкой
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiejar">
   <term>
    <constant>CURLOPT_COOKIEJAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла, в котором будут сохраняться внутренние cookie
     при вызове деструктора дескриптора.
     <warning>
      <simpara>
       Начиная с PHP 8.0.0 функция <function>curl_close</function> ничего не делает с дескриптором
       и <emphasis>не</emphasis> уничтожает его. На дескрипторе вызывают конструкцию языка <function>unset</function>,
       если требуется записать cookies до автоматического уничтожения дескриптора.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookielist">
   <term>
    <constant>CURLOPT_COOKIELIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Строка блока данных cookie (то есть одна строка в формате Netscape/Mozilla или стандартный
     заголовок Set-Cookie в HTTP-стиле) добавляет единственный блок cookie во внутреннее хранилище блоков данных cookie.
     Значение <literal>"ALL"</literal> стирает все cookie, которые хранятся в памяти.
     Значение <literal>"SESS"</literal> удаляет из памяти все блоки данных cookie сессии.
     Значение <literal>"FLUSH"</literal> записывает все известные блоки данных cookie в файл,
     который указали в опции <constant>CURLOPT_COOKIEJAR</constant>.
     Значение <literal>"RELOAD"</literal> загружает все блоки данных cookie из файлов,
     которые указали в опции <constant>CURLOPT_COOKIEFILE</constant>. Константа доступна с cURL 7.14.1
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiesession">
   <term>
    <constant>CURLOPT_COOKIESESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; помечает этот блок данных как новую «сессию» блоков cookie. Это заставит библиотеку libcurl
     игнорировать каждый блок данных cookie, который она собирается загрузить и который относится к «сеансовым cookie»
     предыдущей сессии. По умолчанию библиотека libcurl каждый раз сохраняет и загружает
     каждый блок данных cookie, независимо от того, принадлежат ли они к сессионным cookies или нет.
     Сеансовые cookie — cookie без даты истечения срока действия, и они должны быть живыми
     и существующим только для этой «сессии».
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlf">
   <term>
    <constant>CURLOPT_CRLF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; преобразовывает символ новой строки, который указывают в системах Unix,
     в последовательность символов CRLF при передаче.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-customrequest">
   <term>
    <constant>CURLOPT_CUSTOMREQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Пользовательский метод запроса, который функция будет использовать вместо
     <literal>"GET"</literal> или <literal>"HEAD"</literal>
     при отправке HTTP-запроса. Это полезно при запросах
     <literal>"DELETE"</literal> или других, более редких HTTP-запросах.
     Допустимые значения: <literal>"GET"</literal>,
     <literal>"POST"</literal>, <literal>"CONNECT"</literal> и так далее;
     т. е. здесь не нужно вводить всю строку с HTTP-запросом. Например,
     значение <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>
     будет неправильным.
     <note>
      <para>
       Опцию указывают, только после проверки и подтверждения, что сервер поддерживает
       пользовательский метод запроса.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-default-protocol">
   <term>
    <constant>CURLOPT_DEFAULT_PROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Протокол по умолчанию, который функция будет использовать, если название схемы отсутствует в URL-адресе.
     Константа доступна с 7.0.7 и cURL 7.45.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-disallow-username-in-url">
   <term>
    <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция запрещает URL-адреса с именем пользователя. По умолчанию
     имена пользователей разрешаются — значение по умолчанию равно 0.
     Константа доступна с 7.3.0 и cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-cache-timeout">
   <term>
    <constant>CURLOPT_DNS_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Количество секунд, в течение которых в памяти хранятся DNS-записи.
     По умолчанию значение опции равно 120 секундам, что эквивалентно 2 минутам.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-interface">
   <term>
    <constant>CURLOPT_DNS_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает имя сетевого интерфейса, к которому требуется привязать резольвер DNS-имён.
     Опция принимает только имена интерфейса, а не адреса.
     Константа доступна с 7.0.7 и cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip4">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает локальный IPv4-адрес, к которому требуется привязать резольвер.
     Опция принимает только аргументы, которые содержат один числовой IPv4-адрес в виде строки.
     Константа доступна с 7.0.7 и cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip6">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP6</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает локальный IPv6-адрес, к которому требуется привязать резольвер.
     Опция принимает только аргументы, которые содержат один числовой IPv6-адрес в виде строки.
     Константа доступна с 7.0.7 и cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-shuffle-addresses">
   <term>
    <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция перемешивает адреса, которые вернул DNS-сервер, так, чтобы адреса
     выбирались в случайном порядке, когда имя разрешилось и DNS сервер вернул больше одного IP-адреса.
     Иногда из-за этого функция выбирает IPv4-адрес раньше IPv6-адреса и наоборот.
     Константа доступна с 7.3.0 и cURL 7.60.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-use-global-cache">
   <term>
    <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опции указывают значение &true;, чтобы функция разрешала имена через глобальный DNS-кеш. Опция непотокобезопасна.
     По умолчанию опция условно включена, если PHP собрали не для безопасной работы в потоках (в командной оболочке CLI,
     через интерфейс FCGI, модуль Apache2-Prefork, который работает на основе процессов, а не потоков, и т. д.).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifyhost">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Проверяет поля имени SSL-сертификата DoH-сервера на соответствие имени хоста.
     Константа доступна с 8.2.0 и cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifypeer">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Проверяет подлинность SSL-сертификата DoH-сервера.
     Константа доступна с 8.2.0 и cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifystatus">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Просит дескриптор cURL проверить статус сертификата DoH-сервера
     через TLS-расширение «Запрос статуса сертификата» (OCSP-сшивание).
     Константа доступна с 8.2.0 и cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-url">
   <term>
    <constant>CURLOPT_DOH_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Задаёт URL-адрес, по которому DoH-сервер будет разрешать имена.
     Константа доступна с 8.1.0 и cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-egdsocket">
   <term>
    <constant>CURLOPT_EGDSOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Аналогична опции <constant>CURLOPT_RANDOM_FILE</constant>, за исключением имени файла
     сокета демона сбора энтропии (Entropy Gathering Daemon).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-encoding">
   <term>
    <constant>CURLOPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Содержимое заголовка <literal>"Accept-Encoding: "</literal>.
     Опция помогает декодировать ответ. Опция поддерживает следующие кодировки:
     <literal>"identity"</literal>, <literal>"deflate"</literal>
     и <literal>"gzip"</literal>. При установке пустой строки — <literal>""</literal> —
     отправляется заголовок, который содержит все типы кодировок, которые поддерживает опция.
     Константа доступна с cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-expect-100-timeout-ms">
   <term>
    <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Время ожидания ответов с заголовком <literal>Expect: 100-continue</literal> в миллисекундах.
     Значение по умолчанию равно 1000 миллисекунд.
     Константа доступна с 7.0.7 и cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-failonerror">
   <term>
    <constant>CURLOPT_FAILONERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция возвращает подробную информацию о сбое, если вернулся HTTP-код ответа,
     который больше или равен 400. Поведение по умолчанию возвращает
     страницу, а код игнорирует.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-file">
   <term>
    <constant>CURLOPT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Файл, в который функция запишет результат передачи. По умолчанию
     функция отправляет вывод в поток <constant>STDOUT</constant> — окно браузера.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-filetime">
   <term>
    <constant>CURLOPT_FILETIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция попытается получить дату изменения
     удалённого документа. Значение также получают функцией
     <function>curl_getinfo</function> с опцией
     <constant>CURLINFO_FILETIME</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-followlocation">
   <term>
    <constant>CURLOPT_FOLLOWLOCATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; дескриптор следует перенаправлениям
     заголовка ответа <literal>"Location: "</literal>, который сервер отправляет
     в HTTP-заголовках.
     Смотрите также описание опции <constant>CURLOPT_MAXREDIRS</constant>.
     Константа недоступна, если включили директиву
     <link xmlns="http://docbook.org/ns/docbook" linkend="ini.open-basedir">open_basedir</link>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-forbid-reuse">
   <term>
    <constant>CURLOPT_FORBID_REUSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; принудительно закрывает соединение после завершения
     обработки, чтобы соединение не попадало в пул открытых соединений и становилось недоступным для повторной передачи.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fresh-connect">
   <term>
    <constant>CURLOPT_FRESH_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; принудительно устанавливает новое соединение
     вместо передачи через кешированное.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpappend">
   <term>
    <constant>CURLOPT_FTPAPPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция добавляет данные в конец файла на удалённом источнике,
     а не перезаписывает.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpascii">
   <term>
    <constant>CURLOPT_FTPASCII</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Псевдоним опции
     <constant>CURLOPT_TRANSFERTEXT</constant>. Лучше предпочесть оригинальную опцию, а не псевдоним.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftplistonly">
   <term>
    <constant>CURLOPT_FTPLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция перечисляет только список имён файлов
     в FTP-каталоге, а не информацию о размерах, датах и т. д.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpport">
   <term>
    <constant>CURLOPT_FTPPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение, которое функция будет использовать, чтобы получить
     IP-адрес для FTP-команды "PORT". Команда "PORT"
     просит удалённый сервер подключиться к заданному через опцию IP-адресу.
     Опция принимает значения в виде простого IP-адреса, имени хоста, имени сетевого
     интерфейса (в системах Unix) или простого дефиса '-', чтобы использовать системный
     IP-адрес по умолчанию.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpsslauth">
   <term>
    <constant>CURLOPT_FTPSSLAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает метод FTP-аутентификации (в активном режиме):
     <constant>CURLFTPAUTH_SSL</constant> — сначала проверяется SSL-протокол,
     <constant>CURLFTPAUTH_TLS</constant> — сначала проверяется TLS-протокол
     или <constant>CURLFTPAUTH_DEFAULT</constant> — дескриптор cURL решает сам.
     Константа доступна с cURL 7.12.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-create-missing-dirs">
   <term>
    <constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция создаёт несуществующие каталоги, если FTP-операция
     обнаруживает путь, который не существует.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-filemethod">
   <term>
    <constant>CURLOPT_FTP_FILEMETHOD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Сообщает, каким методом получать доступ к файлу на FTP- или SFTP-сервере. Опция принимает возможные значения:
     <constant>CURLFTPMETHOD_DEFAULT</constant>,
     <constant>CURLFTPMETHOD_MULTICWD</constant>,
     <constant>CURLFTPMETHOD_NOCWD</constant>
     м <constant>CURLFTPMETHOD_SINGLECWD</constant>.
     Константа доступна с cURL 7.15.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl">
   <term>
    <constant>CURLOPT_FTP_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-eprt">
   <term>
    <constant>CURLOPT_FTP_USE_EPRT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Для опции указывают значение &true;, чтобы функция отправляла EPRT- и LPRT-команды при активных FTP-загрузках.
     Значение &false; отключит команды EPRT и LPRT и функция будет передавать только команду PORT.
     only.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-epsv">
   <term>
    <constant>CURLOPT_FTP_USE_EPSV</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция сначала пробует команду EPSV
     для передачи по FTP-протоколу, прежде чем откатиться к команде PASV. Значение &false;
     отключает передачу EPSV-команды.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-happy-eyeballs-timeout-ms">
   <term>
    <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Отдаёт преимущество IPv6-протоколу при подключении по алгоритму Happy Eyeballs. Алгоритм Happy Eyeballs пытается
     подключиться как к IPv4-адресам, так и к IPv6-адресам хостов с двойным стеком,
     отдавая преимущество сначала протоколу IPv6 на время ожидания в миллисекундах.
     Значение по умолчанию — CURL_HET_DEFAULT, которое составляет 200 миллисекунд.
     Константа доступна с 7.3.0 и cURL 7.59.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-haproxyprotocol">
   <term>
    <constant>CURLOPT_HAPROXYPROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция отправляет заголовок протокола HAProxy PROXY v1 в начале соединения.
     Действие по умолчанию — не отправлять этот заголовок.
     Константа доступна с 7.3.0 и cURL 7.60.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-header">
   <term>
    <constant>CURLOPT_HEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; включает заголовок в вывод.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headerfunction">
   <term>
    <constant>CURLOPT_HEADERFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает два аргумента.
     Первый — cURL-ресурс, второй —
     строка с данными заголовка, которые требуется записать. Записать данные заголовков требуется
     этой функцией обратного вызова. Функция возвращает
     количество байтов, которое она записала.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headeropt">
   <term>
    <constant>CURLOPT_HEADEROPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Отправляет заголовки прокси-серверу и хосту, или отдельно.
     Опция принимает значения <constant>CURLHEADER_UNIFIED</constant> и <constant>CURLHEADER_SEPARATE</constant>.
     С cURL 7.42.1 значение по умолчанию равно <constant>CURLHEADER_SEPARATE</constant>,
     в предыдущих версиях значение по умолчанию равнялось <constant>CURLHEADER_UNIFIED</constant>.
     Константа доступна с 7.0.7 и cURL 7.37.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts">
   <term>
    <constant>CURLOPT_HSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя файла HSTS-кеша (HTTP Strict Transport Security).
     Константа доступна с 8.2.0 и cURL 7.74.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts-ctrl">
   <term>
    <constant>CURLOPT_HSTS_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Управляет поведением механизма HSTS (HTTP Strict Transport Security).
     Заполните битовую маску правильным набором значений, чтобы проинструктировать
     дескриптор cURL, как обрабатывать HSTS-хосты при передаче с этим дескриптором.
     Константа <constant>CURLHSTS_ENABLE</constant> включает запоминаемый (in-memory) кеш HSTS.
     Если файл HSTS-кеша определили, установка значения <constant>CURLHSTS_READONLYFILE</constant>
     сделает файл доступным только для чтения. Константа доступна с 8.2.0 и cURL 7.74.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http09-allowed">
   <term>
    <constant>CURLOPT_HTTP09_ALLOWED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Определяет, разрешить ли ответы по протоколу HTTP/0.9. Начиная с libcurl 7.66.0 значение по умолчанию равно &false;;
     раньше значение по умолчанию равнялось &true;.
     Константа доступна с PHP 7.3.15 или 7.4.3 и cURL 7.64.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http200aliases">
   <term>
    <constant>CURLOPT_HTTP200ALIASES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Массив ответов с HTTP-кодом 200, которые будут рассматриваться как действительные
     ответы, а не как ошибки.
     Константа доступна с cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpauth">
   <term>
    <constant>CURLOPT_HTTPAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает метод HTTP-аутентификации. Опция принимает следующие значения:
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_DIGEST</constant>,
     <constant>CURLAUTH_GSSNEGOTIATE</constant>,
     <constant>CURLAUTH_NTLM</constant>,
     <constant>CURLAUTH_AWS_SIGV4</constant>,
     <constant>CURLAUTH_ANY</constant>
     и <constant>CURLAUTH_ANYSAFE</constant>.
     Побитовый оператор ИЛИ — <literal>|</literal> — указывают, чтобы объединить
     больше одного метода. При объединении методов дескриптор cURL опросит сервер, чтобы узнать,
     какие методы поддерживает сервер, и выберет лучший.
     Параметр <constant>CURLAUTH_ANY</constant> устанавливает все биты. Дескриптор cURL автоматически выберет
     тот, который посчитает самым безопасным.
     Параметр <constant>CURLAUTH_ANYSAFE</constant> устанавливает все биты, кроме <constant>CURLAUTH_BASIC</constant>.
     дескриптор cURL автоматически выберет тот, который посчитает самым безопасным.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpget">
   <term>
    <constant>CURLOPT_HTTPGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция сбрасывает HTTP-метод запроса на метод GET.
     Поскольку метод GET — метод по умолчанию, опцию передают,
     только если метод HTTP-запроса для того же дескриптора изменяли на другой.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpheader">
   <term>
    <constant>CURLOPT_HTTPHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Массив полей HTTP-заголовка для установки в формате
     <code>
      array('Content-type: text/plain', 'Content-length: 100')
     </code>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpproxytunnel">
   <term>
    <constant>CURLOPT_HTTPPROXYTUNNEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; включает туннелирование каждого запроса через HTTP-прокси.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-content-decoding">
   <term>
    <constant>CURLOPT_HTTP_CONTENT_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &false; опция возвращает необработанное тело HTTP-ответа.
     Константа доступна с cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-version">
   <term>
    <constant>CURLOPT_HTTP_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Опция принимает следующие значения:
     <constant>CURL_HTTP_VERSION_NONE</constant> (значение по умолчанию; CURL сам решает, какую версию использовать),
     <constant>CURL_HTTP_VERSION_1_0</constant> (принудительно соединяться по протоколу HTTP/1.0),
     <constant>CURL_HTTP_VERSION_1_1</constant> (принудительно соединяться по протоколу HTTP/1.1),
     <constant>CURL_HTTP_VERSION_2_0</constant> (попытаться соединиться по протоколу HTTP/2.0),
     <constant>CURL_HTTP_VERSION_2</constant> (псевдоним параметра <constant>CURL_HTTP_VERSION_2_0</constant>),
     <constant>CURL_HTTP_VERSION_2TLS</constant> (попытаться соединиться только по протоколу HTTP/2.0 по протоколу TLS (HTTPS))
     или <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant> (выполнять HTTP-запросы без TLS по протоколу HTTP/2.0
     без отката до протокола HTTP/1.1).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infile">
   <term>
    <constant>CURLOPT_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Файл, из которого требуется считывать данные при передаче в удалённый источник.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infilesize">
   <term>
    <constant>CURLOPT_INFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Предполагаемый размер файла в байтах при отправке файла на удалённый сайт.
     Обратите внимание, опция не ограничивает объём данных, которые библиотека libcurl фактически отправляет,
     поскольку фактический объём передаваемых данных зависит от того, что возвращает callback-функция опции
     <constant>CURLOPT_READFUNCTION</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-interface">
   <term>
    <constant>CURLOPT_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название исходящего сетевого интерфейса, который надо использовать. Опция
     принимает значения в виде имени интерфейса, IP-адреса или имени хоста.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ipresolve">
   <term>
    <constant>CURLOPT_IPRESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Разрешает приложению выбрать, какие IP-адреса использовать при разрешении имён хостов.
     Это интересно только для имён хостов, которые разрешают
     адреса больше чем в одну версию IP-протокола. Опция принимает следующие значения:
     <constant>CURL_IPRESOLVE_WHATEVER</constant>,
     <constant>CURL_IPRESOLVE_V4</constant>,
     <constant>CURL_IPRESOLVE_V6</constant> и по умолчанию —
     <constant>CURL_IPRESOLVE_WHATEVER</constant>..
     Константа доступна с cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert-blob">
   <term>
    <constant>CURLOPT_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL-сертификат издателя из блока памяти, который содержит двоичные данные сертификата
     удостоверяющего центра.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keep-sending-on-error">
   <term>
    <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция продолжает отправку тела запроса, если HTTP-код возврата
     равен или больше 300. Действие по умолчанию остановило бы отправку и закрыло
     поток или соединение. Опцию указывают при ручной NTLM-аутентификации.
     Большей части приложений опция не требуется.
     Константа доступна с 7.3.0 и cURL 7.51.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keypasswd">
   <term>
    <constant>CURLOPT_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Пароль, который требуется закрытому ключу в опции <constant>CURLOPT_SSLKEY</constant>
     или <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>.
     Константа доступна с cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krb4level">
   <term>
    <constant>CURLOPT_KRB4LEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Уровень безопасности KRB4 (сетевой протокол аутентификации Kerberos 4). Опция принимает
     следующие значения в порядке от наименее к наиболее сильному:
     <literal>"clear"</literal>,
     <literal>"safe"</literal>,
     <literal>"confidential"</literal>,
     <literal>"private".</literal>.
     Опция будет использовать значение <literal>"private"</literal>,
     если аргумент опции окажется строкой, которая не совпадает со значениями списка.
     Опция отключит KRB4-безопасность при установке значения &null;. Защита KRB4
     работает пока только с FTP-транзакциями.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-login-options">
   <term>
    <constant>CURLOPT_LOGIN_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает параметры входа в систему для конкретного протокола, например,
     указывает предпочтительный механизм аутентификации через "AUTH=NTLM" или "AUTH=*",
     и работает в связке с опцией
     <constant>CURLOPT_USERNAME</constant>.
     Константа доступна с 7.0.7 и cURL 7.34.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-limit">
   <term>
    <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     PHP посчитает скорость передачи чрезмерно низкой и прервёт передачу, если в течение заданного опцией
     <constant>CURLOPT_LOW_SPEED_TIME</constant> количества секунд скорость передачи в байтах в секунду
     будет ниже значения этой опции.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-time">
   <term>
    <constant>CURLOPT_LOW_SPEED_TIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Количество секунд, в течение которых скорость будет ниже значения
     опции <constant>CURLOPT_LOW_SPEED_LIMIT</constant>, перед тем как PHP посчитает
     скорость передачи чрезмерно низкой и прервёт передачу.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt-alllowfails">
   <term>
    <constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     При отправке данных больше чем одному получателю cURL по умолчанию прерывает SMTP-диалог, если хотя бы
     один получатель отправляет ошибку на команду RCPT TO. Эта опция заставляет cURL игнорировать ошибки
     и продолжать с оставшимися допустимыми получателями. С этим флагом cURL прервёт SMTP-диалог и вернёт ошибку,
     которую получил от последней команды RCPT TO, если все получатели вызвали ошибку команды RCPT TO.
     Константа доступна с 8.2.0 и cURL 7.69.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxage-conn">
   <term>
    <constant>CURLOPT_MAXAGE_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное время простоя, в течение которого модулю разрешается оценивать существующее соединение
     как доступное для повторной передачи.
     По умолчанию максимальный срок равен <literal>118</literal> секундам.
     Константа доступна с 8.2.0 и cURL 7.65.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxconnects">
   <term>
    <constant>CURLOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное количество постоянных соединений, которое разрешается устанавливать модулю.
     При достижении предела самое старое соединение в кеше закрывается,
     чтобы предотвратить увеличение числа открытых соединений.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize-large">
   <term>
    <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальный размер файла в байтах, который модулю разрешается скачивать. Передача не начнётся
     и вернёт значение константы <constant>CURLE_FILESIZE_EXCEEDED</constant>,
     если размер файла, который запросил дескриптор, окажется больше этого значения.
     Опция не влияет на скачивание файлов, размер которых функция не знает до скачивания,
     даже если в итоге размер файла превысит предел.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxlifetime-conn">
   <term>
    <constant>CURLOPT_MAXLIFETIME_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное время в секундах с момента установки соединения, в течение которого
     модулю разрешается оценивать существующее соединение как доступное для повторной передачи.
     Если функция обнаружит в кеше соединение старше этого значения,
     она закроет просроченное соединение, как только завершит текущие передачи.
     Значение по умолчанию, которое равно 0 секунд, отключает опцию и делает каждое соединение
     доступным для повторной передачи.
     Константа доступна с 8.2.0 и cURL 7.80.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxredirs">
   <term>
    <constant>CURLOPT_MAXREDIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Максимальное количество HTTP-перенаправлений, которому разрешается следовать. Опцию
     указывают вместе с опцией <constant>CURLOPT_FOLLOWLOCATION</constant>.
     Значение по умолчанию, которое равно <literal>20</literal>, предотвращает бесконечные перенаправления.
     Установка значения <literal>-1</literal> разрешит бесконечные перенаправления, а значение <literal>0</literal>
     откажет в перенаправлениях.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-recv-speed-large">
   <term>
    <constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Если совокупная средняя в течение передачи скорость скачивания превысит это значение в байтах
     в секунду, то функция приостановит скачивание,
     чтобы поддерживать среднюю скорость ниже или равной
     значению опции. По умолчанию скорость не ограничивается.
     Константа доступна с cURL 7.15.5
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-send-speed-large">
   <term>
    <constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Если совокупная средняя в течение передачи скорость отправки данных превысит это значение в байтах
     в секунду, то функция приостановит отправку,
     чтобы поддерживать среднюю скорость ниже или равной
     значению опции. По умолчанию скорость не ограничивается.
     Константа доступна с cURL 7.15.5
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mime-options">
   <term>
    <constant>CURLOPT_MIME_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.81.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mute">
   <term>
    <constant>CURLOPT_MUTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция отключит сообщения функций модуля cURL. Константу удалили с cURL 7.15.5;
     вместо неё указывают опцию <constant xmlns="http://docbook.org/ns/docbook">CURLOPT_RETURNTRANSFER</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc">
   <term>
    <constant>CURLOPT_NETRC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция будет сканировать файл <filename>~/.netrc</filename>,
     чтобы найти имя пользователя и пароль удалённого сайта, с которым устанавливается
     соединение.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nobody">
   <term>
    <constant>CURLOPT_NOBODY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция исключает тело ответа из вывода.
     Затем для HTTP-метода запроса устанавливается значение HEAD. Изменение значения этой опции на &false;
     не изменяет метод на GET.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noprogress">
   <term>
    <constant>CURLOPT_NOPROGRESS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; отключает индикатор прогресса cURL-передачи.
     <note>
      <para>
       PHP автоматически устанавливает опции значение &true;. Значение изменяют только
       в целях отладки.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nosignal">
   <term>
    <constant>CURLOPT_NOSIGNAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция игнорирует функции модуля cURL, которые вызывают отправку сигнала
     PHP-процессу. В многопоточных SAPI-интерфейсах опция включается по умолчанию,
     поэтому по-прежнему разрешается использовать параметры времени ожидания.
     Константа доступна с cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-passwdfunction">
   <term>
    <constant>CURLOPT_PASSWDFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает три аргумента.
     Первым идёт cURL-дескриптор, вторым —
     строка с запросом пароля, третьим —
     максимальная длина пароля. Функция обратного вызова должна вернуть строку с паролем.
     Константу удалили с PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-password">
   <term>
    <constant>CURLOPT_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Пароль для аутентификации.
     Константа доступна с cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-path-as-is">
   <term>
    <constant>CURLOPT_PATH_AS_IS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция игнорирует обработку последовательностей из двух точек в названиях путей.
     Константа доступна с 7.0.7 и cURL 7.42.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pinnedpublickey">
   <term>
    <constant>CURLOPT_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Прикрепляет открытый ключ.
     Строка содержит или название PEM- или DEX-файла с открытым ключом, который прикрепит опция,
     sha256-хеши с префиксом "sha256//" в кодировке base64, которые разделили точкой с запятой ";".
     Константа доступна с 7.0.7 и cURL 7.39.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pipewait">
   <term>
    <constant>CURLOPT_PIPEWAIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Значение &true; укажет модулю дождаться соединения, чтобы подтвердить или опровергнуть
     конвейеризацию или мультиплексирование перед продолжением работы.
     Константа доступна с 7.0.7 и cURL 7.43.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-port">
   <term>
    <constant>CURLOPT_PORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Альтернативный номер порта для подключения.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-post">
   <term>
    <constant>CURLOPT_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; функция выполняет стандартный запрос HTTP-методом POST. Этот вид POST-запроса
     устанавливает тип тела запроса <literal>application/x-www-form-urlencoded</literal>,
     который часто встречается при отправке HTML-форм.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postfields">
   <term>
    <constant>CURLOPT_POSTFIELDS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Полные данные для отправки в HTTP-запросе методом POST.
     Параметр передаёт данные либо
     как URL-кодированную строку наподобие '<literal>para1=val1&amp;para2=val2&amp;...</literal>',
     либо как массив, в котором названия полей — ключи, а поля с данными — значения.
     Функция установит для заголовка <literal>Content-Type</literal>
     значение <literal>multipart/form-data</literal>,
     если значением параметра <parameter>value</parameter> окажется массив.
     Файлы отправляют как объекты классов <classname>CURLFile</classname>
     или <classname>CURLStringFile</classname>, которые присваивают значениям ассоциативного массива,
     который передают в параметр <parameter>value</parameter>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postquote">
   <term>
    <constant>CURLOPT_POSTQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Массив FTP-команд, которые требуется выполнить на сервере после выполнения FTP-запроса.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postredir">
   <term>
    <constant>CURLOPT_POSTREDIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Битовая маска из значений 1 (301 Moved Permanently), 2 (302 Found)
     и 4 (303 See Other), которую устанавливают, когда требуется продолжать обработку HTTP-запроса методом POST
     при наступлении конкретного типа перенаправления
     и установленной опции <constant>CURLOPT_FOLLOWLOCATION</constant>.
     Константа доступна с cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pre-proxy">
   <term>
    <constant>CURLOPT_PRE_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает строку (<type>string</type>), которая содержит название хоста или точечно-числовой
     IP-адрес, который функция будет использовать как предварительный прокси, к которому библиотека curl подключается перед
     подключением к HTTP- или HTTPS-прокси, который указали
     в опции <constant>CURLOPT_PROXY</constant> для запроса, который предстоит выполнить.
     В качестве значения предварительного прокси-сервер опция принимает только SOCKS-прокси с префиксом,
     который указывает тип сокета, например <literal>socks4://</literal>.
     Числовой IPv6-адрес требуется записывать внутри квадратных скобок,
     например <literal>socks5://[2001:0db8:85a3:0000:0000:8a2e:0370:7334]</literal>.
     Установка препрокси в виде пустой строки явно отключит подключение через предварительный прокси.
     Номер порта добавляют в конце строки препрокси после имени хоста через двоеточие,
     например: <literal>socks5://127.0.0.1:1080</literal>.
     Номер порта прокси также указывают отдельно —
     в опции <constant>CURLOPT_PROXYPORT</constant>.
     Значение по умолчанию для порта прокси — 1080, если порт не указали.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-private">
   <term>
    <constant>CURLOPT_PRIVATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Данные, которые требуется связать с cURL-дескриптором. Эти данные затем
     будут доступны для извлечения через вызов функции <function>curl_getinfo</function>
     с флагом <constant>CURLINFO_PRIVATE</constant>.
     cURL-дескриптор ничего не делает с этими данными.
     При работе с cURL-мультидескриптором эти закрытые данные обычно
     играют роль уникального ключа для идентификации простого cURL-дескриптора.
     Константа доступна с cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-progressfunction">
   <term>
    <constant>CURLOPT_PROGRESSFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает пять аргументов.
     Первый — cURL-дескриптор, второй — общее количество байтов,
     которое, как ожидается, функция скачает в текущей передаче, третий —
     количество байтов, которые функция уже скачала, четвёртый — общее количество
     байтов, которое, как ожидается, функция передаст в этой передаче, и пятый —
     количество байтов, которые функция уже передала.
     <note>
      <para>
       Callback-функция вызывается, только если для опции <constant>CURLOPT_NOPROGRESS</constant>
       установили значение &false;.
      </para>
     </note>
     Возврат из функции обратного вызова ненулевого значения прерывает передачу
     и устанавливает ошибку <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols">
   <term>
    <constant>CURLOPT_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Битовая маска из значений констант семейства <constant>CURLPROTO_*</constant>. Битовая маска
     ограничивает протоколы, по которым библиотеке libcurl разрешается передавать данные. Ограничение протоколов
     помогает настраивать библиотеку libcurl на поддержку широкого диапазона протоколов, но при этом ограничивать
     отдельные передачи разрешением на работу только с частью протоколов. По умолчанию библиотека
     libcurl будет принимать все протоколы, которые она поддерживает.
     Дополнительную информацию даёт описание опции <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
     Допустимые опции, которыми устанавливают протоколы:
     <constant>CURLPROTO_HTTP</constant>,
     <constant>CURLPROTO_HTTPS</constant>,
     <constant>CURLPROTO_FTP</constant>,
     <constant>CURLPROTO_FTPS</constant>,
     <constant>CURLPROTO_SCP</constant>,
     <constant>CURLPROTO_SFTP</constant>,
     <constant>CURLPROTO_TELNET</constant>,
     <constant>CURLPROTO_LDAP</constant>,
     <constant>CURLPROTO_LDAPS</constant>,
     <constant>CURLPROTO_DICT</constant>,
     <constant>CURLPROTO_FILE</constant>,
     <constant>CURLPROTO_TFTP</constant>,
     <constant>CURLPROTO_MQTT</constant>
     и <constant>CURLPROTO_ALL</constant>.
     Константа доступна с cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols-str">
   <term>
    <constant>CURLOPT_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.85.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy">
   <term>
    <constant>CURLOPT_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     HTTP-прокси для туннелирования запросов.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyauth">
   <term>
    <constant>CURLOPT_PROXYAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Метод или методы HTTP-аутентификации для прокси-соединения.
     Опция принимает те же битовые маски, которые даёт описание опции
     <constant>CURLOPT_HTTPAUTH</constant>. Пока для прокси-аутентификации
     поддерживаются только опции <constant>CURLAUTH_BASIC</constant>
     и <constant>CURLAUTH_NTLM</constant>.
     Константа доступна с cURL 7.10.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyheader">
   <term>
    <constant>CURLOPT_PROXYHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Массив пользовательских HTTP-заголовков для передачи прокси.
     Константа доступна с 7.0.7 и cURL 7.37.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyport">
   <term>
    <constant>CURLOPT_PROXYPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Номер порта прокси-сервера, к которому требуется подключиться. Номер порта также устанавливают
     отдельно — через опцию <constant>CURLOPT_PROXY</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxytype">
   <term>
    <constant>CURLOPT_PROXYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Или <constant>CURLPROXY_HTTP</constant> (по умолчанию),
     <constant>CURLPROXY_SOCKS4</constant>,
     <constant>CURLPROXY_SOCKS5</constant>,
     <constant>CURLPROXY_SOCKS4A</constant>,
     или <constant>CURLPROXY_SOCKS5_HOSTNAME</constant>.
     Константа доступна с cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyuserpwd">
   <term>
    <constant>CURLOPT_PROXYUSERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя пользователя и пароль в формате
     <literal>username:password</literal> для подключения
     к прокси-серверу.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo">
   <term>
    <constant>CURLOPT_PROXY_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Путь к пакету сертификатов прокси-сервера, которые выдал центр сертификации. Опция принимает
     строку (<type>string</type>) с названием файла, который содержит один или набор сертификатов
     для проверки HTTPS-прокси.
     Назначение параметра — подключение к прокси-серверу по протоколу HTTPS, а не к HTTPS-серверу.
     По умолчанию опция содержит системный путь хранения, по которому предполагает
     найти cacert-файл с пакетом сертификатов библиотеки libcurl.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo-blob">
   <term>
    <constant>CURLOPT_PROXY_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя PEM-файла, который содержит один или набор сертификатов для проверки HTTPS-прокси.
     Назначение параметра — подключение к прокси-серверу по протоколу HTTPS, а не к HTTPS-серверу.
     По умолчанию опция содержит системный путь хранения, по которому предполагает
     найти cacert-файл с пакетом сертификатов библиотеки libcurl.
     Константа доступна с 8.2.0 и cURL 7.77.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-capath">
   <term>
    <constant>CURLOPT_PROXY_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Каталог, который содержит набор сертификатов центра сертификации для проверки HTTPS-прокси.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-crlfile">
   <term>
    <constant>CURLOPT_PROXY_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает название файла путём конкатенации списка отзыва сертификатов
     (англ. Certificate Revocation List, CRL) в формате PEM для проверки сертификата
     во время SSL-обмена.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла издателя SSL-сертификата прокси-сервера.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert-blob">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL-сертификат издателя для прокси-сервера, который хранится в блоке памяти, который содержит
     двоичные данные сертификата удостоверяющего центра.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-keypasswd">
   <term>
    <constant>CURLOPT_PROXY_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает строку, которую функция будет использовать как пароль, который требуется
     для подключения к HTTPS-прокси с закрытым ключом <constant>CURLOPT_PROXY_SSLKEY</constant>.
     Парольная фраза не нужна для загрузки сертификата, но она требуется для загрузки закрытого ключа отправителя.
     Назначение параметра — подключение к прокси-серверу по протоколу HTTPS, а не к HTTPS-серверу.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-pinnedpublickey">
   <term>
    <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Устанавливает закреплённый открытый ключ для HTTPS-прокси. Опция принимает строку с именем файла
     прикреплённого открытого ключа отправителя. Опция ждёт файл в формате PEM или DER.
     Опция также принимает строку с sha256-хешами с префиксом "sha256//" в кодировке base64,
     которые разделили точкой с запятой ";".
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-service-name">
   <term>
    <constant>CURLOPT_PROXY_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название службы аутентификации прокси-сервера.
     Константа доступна с PHP 7.0.7, cURL 7.43.0 (для HTTP-прокси) и cURL 7.49.0 (для SOCKS5-прокси).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла клиентского сертификата отправителя для подключения к прокси-серверу по HTTPS-протоколу.
     Формат по умолчанию — P12 для защищенного протокола транспортного уровня и PEM для других движков;
     формат можно изменить опцией <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
     При работе с библиотекой NSS или по защищённым транспортным протоколам (Secure Transport)
     опция также принимает псевдоним сертификата,
     с которым отправитель проходит аутентификацию. Псевдоним указывают так, как он хранится в базе данных безопасности.
     Перед названием файла — если требуется файл из текущего каталога — добавляют префикс «./»,
     чтобы избежать путаницы с псевдонимом сертификата.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcerttype">
   <term>
    <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Формат клиентского сертификата отправителя для подключения к прокси-серверу по HTTPS-протоколу.
     Опция поддерживает форматы PEM и DER, за исключением подключений к системам с движком на базе
     защищённых транспортных протоколов (Secure Transport).
     Механизмы на основе библиотеки OpenSSL (версии 0.9.3 или новее) и защищённых транспортных протоколов Secure Transport
     (на операционных системах iOS 5 или новее, или OS X 10.7 или новее) поддерживают также формат P12
     для PKCS#12-кодированных файлов. Значение по умолчанию равно "PEM".
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Клиентский сертификат SSL-прокси из блока памяти, который содержит двоичные данные сертификата
     удостоверяющего центра.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Название файла закрытого ключа отправителя для подключения к HTTPS-прокси.
     Формат по умолчанию: "PEM"; формат можно изменить
     опцией <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
     Следующая часть параграфа относится только к операционным системам iOS и Mac OS X:
     функция игнорирует опцию, если модуль cURL собрали с поддержкой
     защищённых протоколов транспортного уровня (Secure Transport). Опция доступна с включённой встроенной поддержкой
     TLS-протокола. Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkeytype">
   <term>
    <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Формат закрытого ключа отправителя. Опция поддерживает форматы: PEM, DER и ENG.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Private key for proxy cert from memory blob.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslversion">
   <term>
    <constant>CURLOPT_PROXY_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     One of
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       It is better to not set this option and leave the default
       <constant>CURL_SSLVERSION_DEFAULT</constant>
       which will attempt to figure out the remote SSL protocol version.
      </simpara>
     </warning>
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-cipher-list">
   <term>
    <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The list of ciphers to use for the connection to the HTTPS proxy.
     The list must be syntactically correct, it consists of one or more cipher
     strings separated by colons. Commas or spaces are also acceptable separators
     but colons are normally used, !, - and + can be used as operators.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-options">
   <term>
    <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set proxy SSL behavior options, which is a bitmask of the following constants:
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
     </simplelist>
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifyhost">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to <literal>2</literal> to verify in the HTTPS proxy's certificate name fields against the proxy name.
     When set to <literal>0</literal> the connection succeeds regardless of the names used in the certificate.
     Use that ability with caution!
     <literal>1</literal> treated as a debug option in curl 7.28.0 and earlier.
     From curl 7.28.1 to 7.65.3 <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> is returned.
     From curl 7.66.0 onwards <literal>1</literal> and <literal>2</literal> is treated as the same value.
     In production environments the value of this option should be kept at <literal>2</literal> (default value).
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifypeer">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; to stop cURL from verifying the peer's certificate.
     Alternate certificates to verify against can be
     specified with the <constant>CURLOPT_CAINFO</constant> option
     or a certificate directory can be specified with the
     <constant>CURLOPT_CAPATH</constant> option.
     When set to false, the peer certificate verification succeeds regardless. &true; by default.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tls13-ciphers">
   <term>
    <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The list of cipher suites to use for the TLS 1.3 connection to a proxy.
     The list must be syntactically correct, it consists of one or more
     cipher suite strings separated by colons. This option is currently used
     only when curl is built to use OpenSSL 1.1.1 or later.
     If you are using a different SSL backend you can try setting
     TLS 1.3 cipher suites by using the <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant> option. Available when built with OpenSSL &gt;= 1.1.1.
     Константа доступна с 7.3.0 и cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-password">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The password to use for the TLS authentication method specified with the
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant> option. Requires that the
     <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> option to also be set.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-type">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The method of the TLS authentication used for the HTTPS connection.
     Supported method is <literal>"SRP"</literal>.
     <note>
      <para>
       Secure Remote Password (SRP) authentication for TLS provides mutual authentication
       if both sides have a shared secret. To use TLS-SRP, you must also set the
       <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> and
       <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> options.
      </para>
     </note>
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-username">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The username to use for the HTTPS proxy TLS authentication method specified with the
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant> option. Requires that the
     <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> option to also be set.
     Константа доступна с 7.3.0 и cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-put">
   <term>
    <constant>CURLOPT_PUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to HTTP PUT a file. The file to PUT must
     be set with <constant>CURLOPT_INFILE</constant> and
     <constant>CURLOPT_INFILESIZE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quick-exit">
   <term>
    <constant>CURLOPT_QUICK_EXIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.87.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quote">
   <term>
    <constant>CURLOPT_QUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     An array of FTP commands to execute on the server prior to the FTP
     request.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-random-file">
   <term>
    <constant>CURLOPT_RANDOM_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A filename to be used to seed the random number generator for SSL.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-range">
   <term>
    <constant>CURLOPT_RANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Range(s) of data to retrieve in the format
     <literal>"X-Y"</literal> where X or Y are optional. HTTP transfers
     also support several intervals, separated with commas in the format
     <literal>"X-Y,N-M"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readfunction">
   <term>
    <constant>CURLOPT_READFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A callback accepting three parameters.
     The first is the cURL resource, the second is a
     stream resource provided to cURL through the option
     <constant>CURLOPT_INFILE</constant>, and the third is the maximum
     amount of data to be read. The callback must return a string
     with a length equal or smaller than the amount of data requested,
     typically by reading it from the passed stream resource. It should
     return an empty string to signal <literal>EOF</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Bitmask of <constant>CURLPROTO_*</constant> values. If used, this bitmask
     limits what protocols libcurl may use in a transfer that it follows to in
     a redirect when <constant>CURLOPT_FOLLOWLOCATION</constant> is enabled.
     This allows you to limit specific transfers to only be allowed to use a subset
     of protocols in redirections. By default libcurl will allow all protocols
     except for FILE and SCP. This is a difference compared to pre-7.19.4 versions
     which unconditionally would follow to all protocols supported.
     See also <constant>CURLOPT_PROTOCOLS</constant> for protocol constant values.
     Константа доступна с cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols-str">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-referer">
   <term>
    <constant>CURLOPT_REFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The contents of the <literal>"Referer: "</literal> header to be used
     in a HTTP request.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-request-target">
   <term>
    <constant>CURLOPT_REQUEST_TARGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 7.3.0 и cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resolve">
   <term>
    <constant>CURLOPT_RESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Provide a custom address for a specific host and port pair. An array
     of hostname, port, and IP address strings, each element separated by
     a colon. In the format:
     <code>
      array("example.com:80:127.0.0.1")
     </code>
     Константа доступна с cURL 7.21.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resume-from">
   <term>
    <constant>CURLOPT_RESUME_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The offset, in bytes, to resume a transfer from.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-returntransfer">
   <term>
    <constant>CURLOPT_RETURNTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to return the transfer as a string of the
     return value of <function>curl_exec</function> instead of outputting
     it directly.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-safe-upload">
   <term>
    <constant>CURLOPT_SAFE_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Always &true;, what disables support for the <literal>@</literal> prefix for
     uploading files in <constant>CURLOPT_POSTFIELDS</constant>, which
     means that values starting with <literal>@</literal> can be safely
     passed as fields. <classname>CURLFile</classname> may be used for
     uploads instead.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-authzid">
   <term>
    <constant>CURLOPT_SASL_AUTHZID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The authorization identity (authzid) for the transfer. Only applicable to the PLAIN SASL
     authentication mechanism where it is optional. When not specified, only the authentication identity
     (authcid) as specified by the username will be sent to the server, along with the password.
     The server will derive the authzid from the authcid when not provided, which it will then use internally.
     Константа доступна с 8.2.0 и cURL 7.66.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-ir">
   <term>
    <constant>CURLOPT_SASL_IR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to enable sending the initial response in the first packet.
     Константа доступна с 7.0.7 и cURL 7.31.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-service-name">
   <term>
    <constant>CURLOPT_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The authentication service name.
     Константа доступна с 7.0.7 и cURL 7.43.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-share">
   <term>
    <constant>CURLOPT_SHARE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A result of <function>curl_share_init</function>. Makes the cURL
     handle to use the data from the shared handle.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-auth">
   <term>
    <constant>CURLOPT_SOCKS5_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The SOCKS5 authentication method(s) to use. The options are:
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_GSSAPI</constant>,
     <constant>CURLAUTH_NONE</constant>.
     The bitwise <literal>|</literal> (or) operator can be used to combine
     more than one method. If this is done, cURL will poll the server to see
     what methods it supports and pick the best one.
     <constant>CURLAUTH_BASIC</constant> allows username/password authentication.
     <constant>CURLAUTH_GSSAPI</constant> allows GSS-API authentication.
     <constant>CURLAUTH_NONE</constant> allows no authentication.
     Defaults to <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
     Set the actual username and password with the <constant>CURLOPT_PROXYUSERPWD</constant> option.
     Константа доступна с 7.3.0 и cURL 7.55.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-auth-types">
   <term>
    <constant>CURLOPT_SSH_AUTH_TYPES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A bitmask consisting of one or more of
     <constant>CURLSSH_AUTH_PUBLICKEY</constant>,
     <constant>CURLSSH_AUTH_PASSWORD</constant>,
     <constant>CURLSSH_AUTH_HOST</constant>,
     <constant>CURLSSH_AUTH_KEYBOARD</constant>. Set to
     <constant>CURLSSH_AUTH_ANY</constant> to let libcurl pick one.
     Константа доступна с cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-compression">
   <term>
    <constant>CURLOPT_SSH_COMPRESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to enable built-in SSH compression. This is a request, not an order;
     the server may or may not do it.
     Константа доступна с 7.3.0 и cURL 7.56.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-hostkeyfunction">
   <term>
    <constant>CURLOPT_SSH_HOSTKEYFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.84.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-md5">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A string containing 32 hexadecimal digits. The string should be the
     MD5 checksum of the remote host's public key, and libcurl will reject
     the connection to the host unless the md5sums match.
     This option is only for SCP and SFTP transfers.
     Константа доступна с cURL 7.17.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-sha256">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Base64-encoded SHA256 hash of the remote host's public key.
     The transfer will fail if the given hash does not match the hash the remote host provides.
     Константа доступна с 8.2.0 и cURL 7.80.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-private-keyfile">
   <term>
    <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The file name for your private key. If not used, libcurl defaults to
     $HOME/.ssh/id_dsa if the HOME environment variable is set,
     and just "id_dsa" in the current directory if HOME is not set.
     If the file is password-protected, set the password with
     <constant>CURLOPT_KEYPASSWD</constant>.
     Константа доступна с cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-public-keyfile">
   <term>
    <constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The file name for your public key. If not used, libcurl defaults to
     $HOME/.ssh/id_dsa.pub if the HOME environment variable is set,
     and just "id_dsa.pub" in the current directory if HOME is not set.
     Константа доступна с cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert">
   <term>
    <constant>CURLOPT_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The name of a file containing a PEM formatted certificate.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcertpasswd">
   <term>
    <constant>CURLOPT_SSLCERTPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The password required to use the
     <constant>CURLOPT_SSLCERT</constant> certificate.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcerttype">
   <term>
    <constant>CURLOPT_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The format of the certificate. Supported formats are
     <literal>"PEM"</literal> (default), <literal>"DER"</literal>,
     and <literal>"ENG"</literal>.
     As of OpenSSL 0.9.3, <literal>"P12"</literal> (for PKCS#12-encoded files)
     is also supported.
     Константа доступна с cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert-blob">
   <term>
    <constant>CURLOPT_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL client certificate from memory blob.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine">
   <term>
    <constant>CURLOPT_SSLENGINE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The identifier for the crypto engine of the private SSL key
     specified in <constant>CURLOPT_SSLKEY</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine-default">
   <term>
    <constant>CURLOPT_SSLENGINE_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The identifier for the crypto engine used for asymmetric crypto
     operations.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey">
   <term>
    <constant>CURLOPT_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The name of a file containing a private SSL key.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeypasswd">
   <term>
    <constant>CURLOPT_SSLKEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The secret password needed to use the private SSL key specified in
     <constant>CURLOPT_SSLKEY</constant>.
     <note>
      <para>
       Since this option contains a sensitive password, remember to keep
       the PHP script it is contained within safe.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeytype">
   <term>
    <constant>CURLOPT_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The key type of the private SSL key specified in
     <constant>CURLOPT_SSLKEY</constant>. Supported key types are
     <literal>"PEM"</literal> (default), <literal>"DER"</literal>,
     and <literal>"ENG"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey-blob">
   <term>
    <constant>CURLOPT_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Private key for client cert from memory blob.
     Константа доступна с 8.1.0 и cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslversion">
   <term>
    <constant>CURLOPT_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     One of
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv2</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
     </simplelist>
     .
     The maximum TLS version can be set by using one of the
     <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>
     constants.
     It is also possible to bitwise OR one of the
     <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>
     constants with one of the
     <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>.

     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant> (the maximum version supported by the library)</member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       It is better to not set this option and leave the defaults.
       As setting this to
       <constant>CURL_SSLVERSION_SSLv2</constant>
       or
       <constant>CURL_SSLVERSION_SSLv3</constant>
       is very dangerous, given the known
       vulnerabilities in SSLv2 and SSLv3.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-cipher-list">
   <term>
    <constant>CURLOPT_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A list of ciphers to use for SSL. For example,
     <literal>RC4-SHA</literal> and <literal>TLSv1</literal> are valid
     cipher lists.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-ec-curves">
   <term>
    <constant>CURLOPT_SSL_EC_CURVES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A colon delimited list of elliptic curve algorithms. For example,
     <literal>X25519:P-521</literal> is a valid list of two elliptic curves.
     This option defines the client's key exchange algorithms in the SSL handshake,
     if the SSL backend cURL is built to use supports it.
     Константа доступна с 8.2.0 и cURL 7.73.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-alpn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_ALPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; to disable ALPN in the SSL handshake (if the SSL backend
     libcurl is built to use supports it), which can be used to
     negotiate http2.
     Константа доступна с 7.0.7 и cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-npn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_NPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; to disable NPN in the SSL handshake (if the SSL backend
     libcurl is built to use supports it), which can be used to
     negotiate http2.
     Константа доступна с 7.0.7 и cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-falsestart">
   <term>
    <constant>CURLOPT_SSL_FALSESTART</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to enable TLS false start.
     Константа доступна с 7.0.7 и cURL 7.42.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-options">
   <term>
    <constant>CURLOPT_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set SSL behavior options, which is a bitmask of the following constants:
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_AUTO_CLIENT_CERT</constant></member>
      <member><constant>CURLSSLOPT_NATIVE_CA</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
      <member><constant>CURLSSLOPT_REVOKE_BEST_EFFORT</constant></member>
     </simplelist>
     Константа доступна с 7.0.7. и cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifyhost">
   <term>
    <constant>CURLOPT_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal> to verify that a Common Name field or a Subject Alternate Name
     field in the SSL peer certificate matches the provided hostname.
     <literal>0</literal> to not check the names.
     <literal>1</literal> should not be used.
     In production environments the value of this option
     should be kept at <literal>2</literal> (default value). Support for value <literal>1</literal> removed in cURL 7.28.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifypeer">
   <term>
    <constant>CURLOPT_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; to stop cURL from verifying the peer's
     certificate. Alternate certificates to verify against can be
     specified with the <constant>CURLOPT_CAINFO</constant> option
     or a certificate directory can be specified with the
     <constant>CURLOPT_CAPATH</constant> option. &true; by default as of cURL 7.10. Default bundle installed as of
     cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifystatus">
   <term>
    <constant>CURLOPT_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to verify the certificate's status.
     Константа доступна с 7.0.7 и cURL 7.41.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stderr">
   <term>
    <constant>CURLOPT_STDERR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     An alternative location to output errors to instead of
     <constant>STDERR</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stream-weight">
   <term>
    <constant>CURLOPT_STREAM_WEIGHT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set the numerical stream weight (a number between 1 and 256).
     Константа доступна с 7.0.7 и cURL 7.46.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-suppress-connect-headers">
   <term>
    <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to suppress proxy CONNECT response headers from the user callback functions
     <constant>CURLOPT_HEADERFUNCTION</constant> and <constant>CURLOPT_WRITEFUNCTION</constant>,
     when <constant>CURLOPT_HTTPPROXYTUNNEL</constant> is used and a CONNECT request is made.
     Константа доступна с 7.3.0 и cURL 7.54.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-fastopen">
   <term>
    <constant>CURLOPT_TCP_FASTOPEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to enable TCP Fast Open.
     Константа доступна с 7.0.7 и cURL 7.49.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepalive">
   <term>
    <constant>CURLOPT_TCP_KEEPALIVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     If set to <literal>1</literal>, TCP keepalive probes will be sent. The delay and
     frequency of these probes can be controlled by the <constant>CURLOPT_TCP_KEEPIDLE</constant>
     and <constant>CURLOPT_TCP_KEEPINTVL</constant> options, provided the operating system
     supports them. If set to <literal>0</literal> (default) keepalive probes are disabled.
     Константа доступна с cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepidle">
   <term>
    <constant>CURLOPT_TCP_KEEPIDLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets the delay, in seconds, that the operating system will wait while the connection is
     idle before sending keepalive probes, if <constant>CURLOPT_TCP_KEEPALIVE</constant> is
     enabled. Not all operating systems support this option.
     The default is <literal>60</literal>.
     Константа доступна с cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepintvl">
   <term>
    <constant>CURLOPT_TCP_KEEPINTVL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets the interval, in seconds, that the operating system will wait between sending
     keepalive probes, if <constant>CURLOPT_TCP_KEEPALIVE</constant> is enabled.
     Not all operating systems support this option.
     The default is <literal>60</literal>.
     Константа доступна с cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-nodelay">
   <term>
    <constant>CURLOPT_TCP_NODELAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to disable TCP's Nagle algorithm, which tries to minimize
     the number of small packets on the network.
     Константа доступна с cURL 7.11.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-no-options">
   <term>
    <constant>CURLOPT_TFTP_NO_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to not send TFTP options requests.
     Константа доступна с 7.0.7 и cURL 7.48.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timecondition">
   <term>
    <constant>CURLOPT_TIMECONDITION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     How <constant>CURLOPT_TIMEVALUE</constant> is treated.
     Use <constant>CURL_TIMECOND_IFMODSINCE</constant> to return the
     page only if it has been modified since the time specified in
     <constant>CURLOPT_TIMEVALUE</constant>. If it hasn't been modified,
     a <literal>"304 Not Modified"</literal> header will be returned
     assuming <constant>CURLOPT_HEADER</constant> is &true;.
     Use <constant>CURL_TIMECOND_IFUNMODSINCE</constant> for the reverse
     effect. Use <constant>CURL_TIMECOND_NONE</constant> to ignore
     <constant>CURLOPT_TIMEVALUE</constant> and always return the page.
     <constant>CURL_TIMECOND_NONE</constant> is the default. Before cURL 7.46.0 the default was
     <constant>CURL_TIMECOND_IFMODSINCE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout">
   <term>
    <constant>CURLOPT_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The maximum number of seconds to allow cURL functions to execute.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout-ms">
   <term>
    <constant>CURLOPT_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The maximum number of milliseconds to allow cURL functions to
     execute.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     If libcurl is built to use the standard system name resolver, that
     portion of the connect will still use full-second resolution for
     timeouts with a minimum timeout allowed of one second.
     Константа доступна с cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue">
   <term>
    <constant>CURLOPT_TIMEVALUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The time in seconds since January 1st, 1970. The time will be used
     by <constant>CURLOPT_TIMECONDITION</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue-large">
   <term>
    <constant>CURLOPT_TIMEVALUE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The time in seconds since January 1st, 1970. The time will be used
     by <constant>CURLOPT_TIMECONDITION</constant>. Defaults to zero.
     The difference between this option and <constant>CURLOPT_TIMEVALUE</constant>
     is the type of the argument. On systems where 'long' is only 32 bit wide,
     this option has to be used to set dates beyond the year 2038.
     Константа доступна с 7.3.0 и cURL 7.59.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tls13-ciphers">
   <term>
    <constant>CURLOPT_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The list of cipher suites to use for the TLS 1.3 connection. The list must be
     syntactically correct, it consists of one or more cipher suite strings separated by colons.
     This option is currently used only when curl is built to use OpenSSL 1.1.1 or later.
     If you are using a different SSL backend you can try setting
     TLS 1.3 cipher suites by using the <constant>CURLOPT_SSL_CIPHER_LIST</constant> option. Available when built with OpenSSL &gt;= 1.1.1.
     Константа доступна с 7.3.0 и cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfertext">
   <term>
    <constant>CURLOPT_TRANSFERTEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to use ASCII mode for FTP transfers.
     For LDAP, it retrieves data in plain text instead of HTML. On
     Windows systems, it will not set <constant>STDOUT</constant> to binary
     mode.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unix-socket-path">
   <term>
    <constant>CURLOPT_UNIX_SOCKET_PATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Enables the use of Unix domain sockets as connection endpoint and
     sets the path to the given <type>string</type>.
     Константа доступна с 7.0.7 и cURL 7.40.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unrestricted-auth">
   <term>
    <constant>CURLOPT_UNRESTRICTED_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to keep sending the username and password
     when following locations (using
     <constant>CURLOPT_FOLLOWLOCATION</constant>), even when the
     hostname has changed.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upkeep-interval-ms">
   <term>
    <constant>CURLOPT_UPKEEP_INTERVAL_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Some protocols have "connection upkeep" mechanisms. These mechanisms usually send some traffic
     on existing connections in order to keep them alive. This option defines the connection upkeep interval.
     Currently, the only protocol with a connection upkeep mechanism is HTTP/2. When the connection upkeep
     interval is exceeded, an HTTP/2 PING frame is sent on the connection.
     Default is <literal>60</literal> seconds.
     Константа доступна с 8.2.0 и cURL 7.62.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload">
   <term>
    <constant>CURLOPT_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; to prepare for an upload.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload-buffersize">
   <term>
    <constant>CURLOPT_UPLOAD_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Preferred buffer size in bytes for the cURL upload buffer.
     The upload buffer size by default is 64 kilobytes. The maximum buffer size allowed to be set is 2 megabytes.
     The minimum buffer size allowed to be set is 16 kilobytes.
     Константа доступна с 8.2.0 и cURL 7.62.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-url">
   <term>
    <constant>CURLOPT_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The URL to fetch. This can also be set when initializing a
     session with <function>curl_init</function>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-useragent">
   <term>
    <constant>CURLOPT_USERAGENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Содержимое заголовка <literal>"User-Agent: "</literal>, которое функция отправит
     в HTTP-запросе.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-username">
   <term>
    <constant>CURLOPT_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя пользователя, которое функция отправит при аутентификации.
     Константа доступна с cURL 7.19.1
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-userpwd">
   <term>
    <constant>CURLOPT_USERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Имя пользователя и пароль в формате
     <literal>"[username]:[password]"</literal>, которые функция отправит
     при установке соединения.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-verbose">
   <term>
    <constant>CURLOPT_VERBOSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Со значением &true; опция выводит подробную информацию о передаче. Записывает вывод
     в поток <constant>STDERR</constant> или в файл, который указали
     в опции <constant>CURLOPT_STDERR</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writefunction">
   <term>
    <constant>CURLOPT_WRITEFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает два аргумента.
     Первый — cURL-ресурс, второй —
     строка с данными для записи. Сохранить данные требуется
     этой функцией обратного вызова. Функция должна вернуть точное
     количество байтов, которое она записала, или передача прервётся и функция выдаст ошибку.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writeheader">
   <term>
    <constant>CURLOPT_WRITEHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Файл, в который записываются заголовки передачи.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ws-options">
   <term>
    <constant>CURLOPT_WS_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Константа доступна с 8.3.0 и cURL 7.86.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xferinfofunction">
   <term>
    <constant>CURLOPT_XFERINFOFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Callback-функция, которая принимает два аргумента.
     У опции то же назначение, что и у опции <constant>CURLOPT_PROGRESSFUNCTION</constant>,
     но более современенное, лучше предпочесть эту cURL-опцию.
     Константа доступна с 8.2.0 и cURL 7.32.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xoauth2-bearer">
   <term>
    <constant>CURLOPT_XOAUTH2_BEARER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Указывает токен доступа для протокола OAuth 2.0.
     Константа доступна с 7.0.7 и cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
