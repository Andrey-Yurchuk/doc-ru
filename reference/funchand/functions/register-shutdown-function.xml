<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8d7f21b1c19fcde59b32d5496eaeed1784692f63 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.register-shutdown-function" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>register_shutdown_function</refname>
  <refpurpose>Регистрирует функцию, которая выполнится при завершении работы скрипта</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>bool</type><type>null</type></type><methodname>register_shutdown_function</methodname>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   Регистрирует функцию <parameter>callback</parameter>, которая
   выполнится после завершения работы скрипта или при вызове функции
   <function>exit</function>.
  </para>
  <para>
   Возможна регистрация нескольких подобных функций с помощью
   <function>register_shutdown_function</function>, при этом функции будут
   выполняться в том порядке, в каком они были зарегистрированы.
   Если вы вызовете <function>exit</function> в одной из зарегистрированных
   завершающих функций, процесс будет полностью остановлен и последующие
   завершающие функции не будут вызваны.
  </para>
  <para>
   Завершающие функции также могут сами вызывать <function>register_shutdown_function</function>,
   чтобы добавить функцию выключения в конец очереди.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Регистрируемая завершающая функция.
      </para>
      <para>
       Завершающие функции выполняются как часть запроса, поэтому
    можно отправлять данные на вывод из них и получать доступ к буферизации вывода.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       Можно передавать параметры в завершающую функцию, передав
       дополнительные параметры.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Если передано название несуществующей завершающей функции, то генерируется
   ошибка уровня <constant>E_WARNING</constant>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>register_shutdown_function</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function shutdown()
{
    // Это наша завершающая функция,
    // здесь мы можем выполнить все последние операции
    // перед тем как скрипт полностью завершится.

    echo 'Скрипт успешно завершился', PHP_EOL;
}

register_shutdown_function('shutdown');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Рабочая директория скрипта может измениться внутри завершающей функции
    на некоторых веб-серверах, например, Apache.
   </para>
  </note>
  <note>
   <para>
    Функции, выполняемые при завершении скрипта, не будут выполнены, если процесс был убит
    с сигналами SIGTERM или SIGKILL. Хотя вы и не можете перехватить SIGKILL, но
    вы можете использовать функцию <function>pcntl_signal</function>, чтобы
    задать обработчик сигнала SIGTERM, который использует функцию <function>exit</function>, чтобы
    завершить скрипт правильно.
   </para>
  </note>
  <note>
   <para>
    Завершающие функции выполняются отдельно от времени,
    отслеживаемого <link linkend="ini.max-execution-time">max_execution_time</link>.
    Это означает, что даже если процесс будет завершён из-за слишком долгого выполнения,
    завершающие функции всё равно будут вызваны.
    Кроме того, если <literal>max_execution_time</literal> истечёт
    во время работы завершающей функции, процесс не будет завершён.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ini.auto-append-file">auto_append_file</link></member>
    <member><function>exit</function></member>
    <member><function>fastcgi_finish_request</function></member>
    <member>Раздел <link linkend="features.connection-handling">Обработка соединений</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
