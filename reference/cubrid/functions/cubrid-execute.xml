<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 648875cf73af01acdb6afaa5ca38b0bf6631bf42 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.cubrid-execute" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_execute</refname>
  <refpurpose>Выполняет подготовленный SQL-оператор</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>cubrid_execute</methodname>
   <methodparam><type>resource</type><parameter>conn_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>sql</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>option</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>cubrid_execute</methodname>
   <methodparam><type>resource</type><parameter>request_identifier</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>option</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>cubrid_execute</function> используется для выполнения данного SQL-оператора.
   Она выполняет запрос, используя <parameter>conn_identifier</parameter> и SQL,
   а затем возвращает созданный идентификатор запроса.
   Функция используется для простого выполнения запроса, когда привязка параметров не требуется.
   Кроме того, функция <function>cubrid_execute</function> используется для выполнения подготовленного оператора
   с помощью <function>cubrid_prepare</function> и <function>cubrid_bind</function>.
   В это время вам необходимо указать аргументы <parameter>request_identifier</parameter> и
   <parameter>option</parameter>.
  </para>
  <para>
   Параметр <parameter>option</parameter> используется для определения, следует ли получать OID
   после выполнения запроса и следует ли выполнять запрос в синхронном или асинхронном режиме.
   Константа <constant>CUBRID_INCLUDE_OID</constant> и <constant>CUBRID_ASYNC</constant>
   (или <constant>CUBRID_EXEC_QUERY_ALL</constant>, если необходимо выполнить несколько SQL-операторов)
   можно указать с помощью побитового оператора ИЛИ.
   Если не указано, ни один из них не выбран. Если установлен флаг <constant>CUBRID_EXEC_QUERY_ALL</constant>,
   для получения результатов запроса используется синхронный режим (sync_mode)
   и в таких случаях применяются следующие правила:
  </para>
  <para>
   <simplelist>
    <member>Возвращаемое значение - результат первого запроса.</member>
    <member>
     Если в каком-либо запросе возникает ошибка, выполнение обрабатывается как сбой.
    </member>
    <member>
     В запросе, состоящем из q1 q2 q3, если ошибка возникает в q2 после успешного выполнения q1,
     результат q1 остаётся действительным. То есть предыдущее успешное выполнение запроса
     не откатывается в случае возникновения ошибки.
    </member>
    <member>
     В случае успешного выполнения запроса, результат второго запроса можно
     получить с помощью <function>cubrid_next_result</function>.
    </member>
   </simplelist>
  </para>
  <para>
   Если первым аргументом является <parameter>request_identifier</parameter>
   для выполнения функции <function>cubrid_prepare</function>
   можно указать только <constant>CUBRID_ASYNC</constant>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>conn_identifier</parameter></term>
     <listitem><para>Идентификатор соединения.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sql</parameter></term>
     <listitem><para>SQL для выполнения.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem><para>Вариант выполнения запроса: <constant>CUBRID_INCLUDE_OID</constant>, <constant>CUBRID_ASYNC</constant>, <constant>CUBRID_EXEC_QUERY_ALL</constant>.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>request_identifier</parameter></term>
     <listitem><para>Идентификатор <function>cubrid_prepare</function>.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Идентификатор запроса в случае успешного выполнения запроса и если первым параметром является conn_identifier;
   &true;, в случае успешного выполнения запроса и первым аргументом request_identifier&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.4.0</entry>
       <entry>
        Добавлен новый параметр <constant>CUBRID_EXEC_QUERY_ALL</constant>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>cubrid_execute</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$conn = cubrid_connect("localhost", 33000, "demodb");

$result = cubrid_execute($conn, "SELECT code FROM event WHERE name='100m Butterfly' and gender='M'", CUBRID_ASYNC);
$row = cubrid_fetch_array($result, CUBRID_ASSOC);
$event_code = $row["code"];

cubrid_close_request($result);

$history_req = cubrid_prepare($conn, "SELECT * FROM history WHERE event_code=?");
cubrid_bind($history_req, 1, $event_code, "number");
cubrid_execute($history_req);

printf("%-20s %-9s %-10s %-5s\n", "athlete", "host_year", "score", "unit");
while ($row = cubrid_fetch_array($history_req, CUBRID_ASSOC)) {
    printf("%-20s %-9s %-10s %-5s\n",
        $row["athlete"], $row["host_year"], $row["score"], $row["unit"]);
}

cubrid_close_request($history_req);

cubrid_disconnect($conn);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
athlete              host_year score      unit
Phelps Michael       2004      51.25      time
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_prepare</function></member>
    <member><function>cubrid_bind</function></member>
    <member><function>cubrid_next_result</function></member>
    <member><function>cubrid_close_request</function></member>
    <member><function>cubrid_commit</function></member>
    <member><function>cubrid_rollback</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
