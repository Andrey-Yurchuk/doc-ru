<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c938838be5a7f6d2a0b0710476afb9fb2ccb6e52 Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.filter-var" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>filter_var</refname>
  <refpurpose>Фильтрует переменную</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>filter_var</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>filter</parameter><initializer><constant>FILTER_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type></type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   Фильтрация переменной с помощью фильтров проверки (<constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>),
   фильтров очистки (<constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>) или пользовательского фильтра.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <simpara>
      Значение для фильтрации.
     </simpara>
     <warning>
      <simpara>
       Перед фильтрацией скалярные значения
       <link linkend="language.types.string.casting">преобразуются в строку</link>.
      </simpara>
     </warning>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>filter</parameter></term>
    <listitem>
     <simpara>
      Фильтр, который необходимо применить.
      Может быть фильтром проверки с помощью одной из констант <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>,
      фильтром очистки с помощью одной из констант <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>,
      <constant>FILTER_UNSAFE_RAW</constant> или пользовательским фильтром с помощью константы <constant>FILTER_CALLBACK</constant>.
     </simpara>
     <note>
      <simpara>
       По умолчанию используется <constant>FILTER_DEFAULT</constant>,
       который является псевдонимом <constant>FILTER_UNSAFE_RAW</constant>.
       В результате по умолчанию фильтрация не производится.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>options</parameter></term>
    <listitem>
     <simpara>
      Либо ассоциативный массив (<type>array</type>) опций,
      либо битовая маска констант флагов фильтра <constant>FILTER_FLAG_<replaceable>*</replaceable></constant>.
     </simpara>
     <simpara>
      Если параметр <parameter>filter</parameter> принимает опции,
      флаги могут быть предоставлены с помощью значения массива <literal>"flags"</literal>.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   В случае успешного выполнения функция возвращает отфильтрованные данные.
   В случае возникновения ошибки возвращается значение &false;,
   только если не используется флаг <constant>FILTER_NULL_ON_FAILURE</constant>,
   в этом случае возвращается значение &null;.
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования функции <function>filter_var</function></title>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(filter_var('bob@example.com', FILTER_VALIDATE_EMAIL));
var_dump(filter_var('https://example.com', FILTER_VALIDATE_URL, FILTER_FLAG_PATH_REQUIRED));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
string(15) "bob@example.com"
bool(false)
]]>
   </screen>
  </example>
  <example>
   <title>Пример фильтрации массива</title>
   <programlisting role="php">
<![CDATA[
<?php

$emails = [
   "bob@example.com",
   "test@example.local",
   "invalidemail"
];

var_dump(filter_var($emails, FILTER_VALIDATE_EMAIL, FILTER_REQUIRE_ARRAY));

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
array(3) {
 [0]=>
 string(15) "bob@example.com"
 [1]=>
 string(18) "test@example.local"
 [2]=>
 bool(false)
}
]]>
   </screen>
  </example>
  <example>
   <title>Пример передачи массива в параметр <parameter>options</parameter></title>
   <programlisting role="php">
<![CDATA[
<?php

$options = [
    'options' => [
        'min_range' => 10,
    ],
    'flags' => FILTER_FLAG_ALLOW_OCTAL,
];

var_dump(filter_var('0755', FILTER_VALIDATE_INT, $options));
var_dump(filter_var('011', FILTER_VALIDATE_INT, $options));

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
int(493)
bool(false)
]]>
   </screen>
  </example>
  <example>
   <title>Передача флагов напрямую или с помощью массива (<type>array</type>)</title>
   <programlisting role="php">
<![CDATA[
<?php

$str = 'string';

var_dump(filter_var($str, FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE));
var_dump(filter_var($str, FILTER_VALIDATE_BOOLEAN, ['flags' => FILTER_NULL_ON_FAILURE]));

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
NULL
NULL
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>filter_var_array</function></member>
   <member><function>filter_input</function></member>
   <member><function>filter_input_array</function></member>
   <member>
    Фильтры проверки:
    <constant>FILTER_VALIDATE_<replaceable>*</replaceable></constant>
   </member>
   <member>
    Фильтры очистки:
    <constant>FILTER_SANITIZE_<replaceable>*</replaceable></constant>
   </member>
  </simplelist>

 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
