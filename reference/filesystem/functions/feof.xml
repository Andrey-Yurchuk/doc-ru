<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 0c9c2dd669fe9395eaa73d487fbd160f9057429a Maintainer: shein Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.feof" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>feof</refname>
  <refpurpose>Проверяет, достигнут ли конец файла</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>feof</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
  </methodsynopsis>
  <para>
   Функция проверяет, наступило ли событие EOF в указателе на файл.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      &fs.validfp.all;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает &true;, если для файлового указателя наступило событие EOF
   или возникла ошибка (включая превышение времени ожидания сокета), иначе возвращает &false;.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Функция <function>feof</function> зависнет,
    если сервер не закрыл подключение, открытое функцией <function>fsockopen</function>.
    Следующий пример показывает, как этого избежать:
    <example>
     <title>Обработка времени ожидания с функцией <function>feof</function></title>
     <programlisting role="php">
<![CDATA[
<?php

function safe_feof($fp, &$start = NULL)
{
    $start = microtime(true);

    return feof($fp);
}

/* Предположим, что файловый указатель $fp уже открыли функцией fsockopen() */

$start = NULL;
$timeout = ini_get('default_socket_timeout');

while (!safe_feof($fp, $start) && (microtime(true) - $start) < $timeout) {
    /* Обработка */
}

?>
]]>
     </programlisting>
    </example>
   </para>
  </warning>
  <warning>
   <para>
    Код рискует уйти в бесконечный цикл,
    если в функцию передали недопустимый файловый указатель,
    поскольку функция <function>feof</function> не сумеет вернуть &true;.
    <example>
     <title>
      Пример поведения функции <function>feof</function> с недопустимым указателем на файл
     </title>
     <programlisting role="php">
<![CDATA[
<?php

// Если функция не сумеет прочитать файл или файл не существует, функция fopen возвращает FALSE
$file = @fopen("no_such_file", "r");

// Значение FALSE, которое вернула функция fopen, вызовет предупреждение и следующий цикл станет бесконечным
while (!feof($file)) {
}

fclose($file);

?>
]]>
     </programlisting>
    </example>
   </para>
  </warning>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
