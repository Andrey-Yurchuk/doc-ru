<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e41806c30bf6975e452c0d4ce35ab0984c2fa68c Maintainer: evvc Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.db2-next-result" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>db2_next_result</refname>
  <refpurpose>Запрашивает следующий набор результатов из хранимой процедуры</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>db2_next_result</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
  </methodsynopsis>

  <para>
   Хранимая процедура может возвращать ноль или более наборов результатов.
   Хотя вы обрабатываете первый набор результатов точно так же, как и результаты, возвращаемые простым оператором SELECT,
   для получения второго и последующих наборов результатов из хранимой процедуры вы должны вызвать функцию
   <function>db2_next_result</function> и вернуть результат в переменную PHP с уникальным именем.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       Подготовленный оператор, возвращаемый функцией <function>db2_exec</function> или
       <function>db2_execute</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает новый ресурс оператора, содержащий следующий набор результатов,
   если хранимая процедура вернула другой набор результатов.
   Возвращает &false;, если хранимая процедура не вернула другой набор результатов.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Вызов хранимой процедуры, возвращающей несколько наборов результатов</title>
    <para>
     В следующем примере вызывается хранимая процедура, которая возвращает три набора результатов.
     Первый набор результатов извлекается непосредственно из того же ресурса операторов, для которого вызывается оператор CALL,
     а второй и третий наборы результатов извлекаются из ресурсов операторов,
     возвращаемых вызовами функции <function>db2_next_result</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$conn = db2_connect($database, $user, $password);

if ($conn) {
  $stmt = db2_exec($conn, 'CALL multiResults()');

  print "Получение первого набора результатов\n";
  while ($row = db2_fetch_array($stmt)) {
    var_dump($row);
  }

  print "\nПолучение второго набора результатов\n";
  $res = db2_next_result($stmt);
  if ($res) {
    while ($row = db2_fetch_array($res)) {
      var_dump($row);
    }
  }

  print "\nПолучение третьего набора результатов\n";
  $res2 = db2_next_result($stmt);
  if ($res2) {
    while ($row = db2_fetch_array($res2)) {
      var_dump($row);
    }
  }

  db2_close($conn);
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Получение первого набора результатов
array(2) {
  [0]=>
  string(16) "Bubbles         "
  [1]=>
  int(3)
}
array(2) {
  [0]=>
  string(16) "Gizmo           "
  [1]=>
  int(4)
}

Получение второго набора результатов
array(4) {
  [0]=>
  string(16) "Sweater         "
  [1]=>
  int(6)
  [2]=>
  string(5) "llama"
  [3]=>
  string(6) "150.00"
}
array(4) {
  [0]=>
  string(16) "Smarty          "
  [1]=>
  int(2)
  [2]=>
  string(5) "horse"
  [3]=>
  string(6) "350.00"
}

Получение третьего набора результатов
array(1) {
  [0]=>
  string(16) "Bubbles         "
}
array(1) {
  [0]=>
  string(16) "Gizmo           "
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
