<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 871b71764cdca8238069f27436d96011a6a2cb36 Maintainer: evvc Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.db2-prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>db2_prepare</refname>
  <refpurpose>Подготавливает SQL-запрос к выполнению</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>resource</type><type>false</type></type><methodname>db2_prepare</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>db2_prepare</function> создаёт подготовленный SQL-запрос, который может включать 0
   или более маркеров параметров (символов <literal>?</literal>), представляющих входные параметры, параметры вывода
   или входные параметры и параметры вывода.
   Вы можете передать параметры подготовленному запросу, используя <function>db2_bind_param</function>
   или только для входных значений в виде массива, переданного в <function>db2_execute</function>.
  </para>
  <para>
   Использование подготовленных запросов в вашем приложении даёт три основных преимущества:
   <itemizedlist>
    <listitem>
     <para>
      <emphasis>Производительность</emphasis>: при использовании подготовленного запроса,
      сервер базы данных создаёт оптимизированный план доступа для извлечения данных с помощью этого запроса.
      Последующее выполнение подготовленного запроса с помощью <function>db2_execute</function> позволяет операторам
      повторно использовать этот план доступа и позволяет избежать накладных расходов на динамическое создание нового плана доступа
      для каждого выполняемого вами запроса.
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>Безопасность</emphasis>: при использовании подготовленного запроса, вы можете включить маркеры
      параметров для входных значений. Когда вы выполняете подготовленный запрос с входными значениями для заполнителей,
      сервер базы данных проверяет каждое входное значение, чтобы убедиться,
      что тип соответствует определению столбца или определению параметра.
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>Расширенный функционал</emphasis>: Маркеры параметров не только позволяют передавать
      входные значения в подготовленные SQL-запросы, они также позволяют извлекать параметры OUT и INOUT
      из хранимых процедур с помощью <function>db2_bind_param</function>.
     </para>
    </listitem>
   </itemizedlist>
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       Допустимая переменная ресурса подключения к базе данных, возвращаемая функцией
       <function>db2_connect</function> или <function>db2_pconnect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       SQL-запрос, необязательно содержащий один или несколько маркеров параметров.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Ассоциативный массив, содержащий параметры запроса. Параметры можно использовать для запроса
       прокручиваемого курсора на серверах баз данных, поддерживающих эту функцию.
      </para>
      <para>
       Описание допустимых опций запроса смотрите в разделе
       <function>db2_set_option</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает ресурс оператора, если SQL-запрос был успешно проанализирован и подготовлен сервером базы данных.
   Возвращает &false;, если сервер базы данных вернул ошибку.
   Вы можете определить, какая ошибка была возвращена, вызвав
   <function>db2_stmt_error</function> или <function>db2_stmt_errormsg</function>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Подготовка и выполнение SQL-запроса с маркерами параметров</title>
    <para>
     В следующем примере подготавливается запрос INSERT, который принимает четыре маркера параметров,
     а затем выполняет итерацию по массиву массивов, содержащих входные значения,
     которые необходимо передать в <function>db2_execute</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$animals = array(
    array(0, 'cat', 'Pook', 3.2),
    array(1, 'dog', 'Peaches', 12.3),
    array(2, 'horse', 'Smarty', 350.0),
);

$insert = 'INSERT INTO animals (id, breed, name, weight)
    VALUES (?, ?, ?, ?)';
$stmt = db2_prepare($conn, $insert);
if ($stmt) {
    foreach ($animals as $animal) {
        $result = db2_execute($stmt, $animal);
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>db2_bind_param</function></member>
    <member><function>db2_execute</function></member>
    <member><function>db2_stmt_error</function></member>
    <member><function>db2_stmt_errormsg</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
