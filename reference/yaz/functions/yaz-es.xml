<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 96c9d88bad9a7d7d44bfb7f26c226df7ee9ddf26 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.yaz-es" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>yaz_es</refname>
  <refpurpose>Подготавливает Extended Service Request</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>yaz_es</methodname>
   <methodparam>
    <type>resource</type><parameter>id</parameter>
   </methodparam>
   <methodparam>
    <type>string</type><parameter>type</parameter>
   </methodparam>
   <methodparam>
    <type>array</type><parameter>args</parameter>
   </methodparam>
  </methodsynopsis>
  <para>
   Функция подготавливает Extended Service Request.
   Extended Services - это семейство различных средств Z39.50,
   таких как обновление записей, порядок элементов, администрирование баз данных и т.д.
  </para>
  <note>
   <para>
    Многие серверы Z39.50 не поддерживают Extended Services.
   </para>
  </note>
  <para>
   <function>yaz_es</function> создаёт пакеты Extended Service Request и помещает их в очередь операций.
   Используйте <function>yaz_wait</function> для отправки запроса(ов) на сервер.
   После завершения <function>yaz_wait</function>, результата операций Extended Service
   следует ожидать с помощью вызова <function>yaz_es_result</function>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>id</parameter></term>
     <listitem>
      <para>
       Ресурс подключения, возвращаемый <function>yaz_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Строка, представляющая тип Extended Service:
       <literal>itemorder</literal> (Item Order),
       <literal>create</literal> (Create Database),
       <literal>drop</literal> (Drop Database),
       <literal>commit</literal> (Commit Operation),
       <literal>update</literal> (Update Record),
       <literal>xmlupdate</literal> (XML Update).
       Каждый тип указан в следующем разделе.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       Массив с Extended Service и параметрами для конкретных пакетов.
       Параметры идентичны тем, которые предлагаются в C API ZOOM C.
       Смотрите ZOOM <link xlink:href="&url.yaz.zoom.ext;">Extended Services</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования Record Update</title>
   <programlisting role="php">
<![CDATA[
<?php
$con = yaz_connect("myhost/database");
$args = array (
    "record" => "<gils><title>some title</title></gils>",
    "syntax" => "xml",
    "action" => "specialUpdate"
);
yaz_es($con, "update", $args);
yaz_wait();
$result = yaz_es_result($id);
?>
]]>
   </programlisting>
   </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>yaz_es_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
