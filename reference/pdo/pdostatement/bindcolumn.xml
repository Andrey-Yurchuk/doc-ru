<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 661e6858acade9f5a08fc8f9c07b605f42f4a700 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdostatement.bindcolumn" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::bindColumn</refname>
  <refpurpose>
   Связывает столбец с переменной PHP
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDOStatement">
   <modifier>public</modifier> <type>bool</type><methodname>PDOStatement::bindColumn</methodname>
   <methodparam><type class="union"><type>string</type><type>int</type></type><parameter>column</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>PDO::PARAM_STR</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>maxLength</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>driverOptions</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>

  <para>
   <methodname>PDOStatement::bindColumn</methodname> привязывает переменную к
   заданному столбцу в результирующем наборе запроса. Каждый вызов
   <methodname>PDOStatement::fetch</methodname> или
   <methodname>PDOStatement::fetchAll</methodname> будет обновлять все переменные,
   задавать им значения столбцов, с которыми они связаны.
  </para>
  <note>
   <para>
    В связи с тем, что информация о столбцах результирующего набора запроса не
    всегда доступна объекту PDO, пока запрос не будет запущен, приложениям следует
    вызывать этот метод <emphasis>после</emphasis> вызова
    <methodname>PDOStatement::execute</methodname>.
   </para>
   <para>
    Однако, при работе с <emphasis>драйвером PgSQL</emphasis>, когда
    привязывается столбец с LOB-данными, приложению необходимо вызывать этот
    метод <emphasis>до</emphasis> вызова
    <methodname>PDOStatement::execute</methodname>. В противном случае идентификатор
    большого объекта OID будет иметь тип integer.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>column</parameter></term>
     <listitem>
      <para>
       Номер столбца (начиная с 1) или его имя в результирующем наборе запроса.
       Используя имя столбца, имейте в виду, что имя должно быть в том же
       регистре, в каком оно возвращено драйвером.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Имя переменной PHP, к которой требуется привязать столбец.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Тип данных параметра, заданный одной из констант <link linkend="pdo.constants"><literal>PDO::PARAM_*</literal></link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>maxLength</parameter></term>
     <listitem>
      <para>
       Подсказка для предварительного выделения памяти под переменную.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>driverOptions</parameter></term>
     <listitem>
      <para>
       Дополнительные параметры для драйвера.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Связывание результирующего набора с переменными PHP
    </title>
    <para>
     Привязывание столбцов результирующего набора к PHP переменным является
     эффективным способом сразу сделать данные каждой строки набора доступными
     приложению. В следующем примере показано, как PDO позволяет привязывать
     переменные и получать данные столбцов, принимая различные настройки и
     умолчания.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$stmt = $dbh->prepare('SELECT name, colour, calories FROM fruit');
$stmt->execute();

/* Bind by column number */
$stmt->bindColumn(1, $name);
$stmt->bindColumn(2, $colour);

/* Bind by column name */
$stmt->bindColumn('calories', $cals);

while ($stmt->fetch(PDO::FETCH_BOUND)) {
    print $name . "\t" . $colour . "\t" . $cals . "\n";
}
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple   red     150
banana  yellow  175
kiwi    green   75
orange  orange  150
mango   red     200
strawberry      red     25
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDOStatement::execute</methodname></member>
    <member><methodname>PDOStatement::fetch</methodname></member>
    <member><methodname>PDOStatement::fetchAll</methodname></member>
    <member><methodname>PDOStatement::fetchColumn</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
