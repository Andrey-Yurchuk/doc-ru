<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 216c5dc1ef01b98d6ccafe51056e4df68e77cbf6 Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdostatement.execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::execute</refname>
  <refpurpose>
   Выполняет подготовленный запрос
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDOStatement">
   <modifier>public</modifier> <type>bool</type><methodname>PDOStatement::execute</methodname>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>params</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Метод запускает <link linkend="pdo.prepared-statements">подготовленный запрос</link>.
   Если подготовленный запрос включает маркеры параметров, или заполнители, требуется:
   <itemizedlist>
    <listitem>
     <para>
      Вызвать метод <methodname>PDOStatement::bindParam</methodname>, чтобы связать маркеры
      с переменными, или метод <methodname>PDOStatement::bindValue</methodname>,
      чтобы связать маркеры со значениями. Переменные, которые связали с маркерами,
      передают свои значения как входные данные метода и получают значения вывода,
      если метод заполняет переменные аргументов значениями вывода. При возврате
      значений вывода метод присваивает переменным, которые передали по ссылке,
      значения параметров, с которым связали маркеры.
     </para>
    </listitem>
    <listitem>
     <para>
      или передать массив значений параметров, которые метод только примет как входные значения
      и не будет заполнять значениями вывода.
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Массив значений, в котором количество элементов совпадает
       с количеством связанных параметров в SQL-запросе, который выполняет метод.
       Метод обрабатывает каждое значение массива
       как значение с типом <constant>PDO::PARAM_STR</constant>.
      </para>
      <para>
       Нельзя привязать несколько значений к одному параметру; например, нельзя
       привязать два значения к именованному параметру в условии IN().
      </para>
      <para>
       Невозможно привязать больше значений, чем указали в запросе;
       метод не выполнит запрос и вызовет ошибку,
       если массив <parameter>params</parameter> содержит больше ключей, чем указали
       при подготовке SQL-запроса методом <methodname>PDO::prepare</methodname>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example><title>Пример выполнения подготовленного запроса с привязкой переменных и значений</title>
   <programlisting role="php">
<![CDATA[
<?php

/* Выполнение подготовленного запроса с привязкой переменных и значений */
$calories = 150;
$colour = 'gre';

$sth = $dbh->prepare(
    'SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour LIKE :colour'
);

$sth->bindParam('calories', $calories, PDO::PARAM_INT);

/* Именам разрешают начинаться с двоеточия ":" */
$sth->bindValue(':colour', "%$colour%");

$sth->execute();

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>
    Пример выполнения подготовленного запроса с массивом именованных значений
   </title>
   <programlisting role="php">
<![CDATA[
<?php

/* Выполнение подготовленного запроса с передачей массива входных значений */
$calories = 150;
$colour = 'red';

$sth = $dbh->prepare(
    'SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour'
);

$sth->execute(array('calories' => $calories, 'colour' => $colour));

/* Ключи массива также разрешают начинать с двоеточия ":" */
$sth->execute(array(':calories' => $calories, ':colour' => $colour));

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>
    Пример выполнения подготовленного запроса с массивом позиционных значений
   </title>
   <programlisting role="php">
<![CDATA[
<?php

/* Выполнение подготовленного запроса с передачей массива входных значений */
$calories = 150;
$colour = 'red';

$sth = $dbh->prepare(
    'SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?'
);

$sth->execute(array($calories, $colour));

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>
    Пример выполнения подготовленного запроса с переменными,
    которые привязали к позиционным заполнителям
   </title>
   <programlisting role="php">
<![CDATA[
<?php

/* Выполнение подготовленного запроса с привязкой PHP переменных */
$calories = 150;
$colour = 'red';

$sth = $dbh->prepare(
    'SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?'
);

$sth->bindParam(1, $calories, PDO::PARAM_INT);
$sth->bindParam(2, $colour, PDO::PARAM_STR, 12);

$sth->execute();

?>
]]>
   </programlisting>
  </example>

   <example>
    <title>
     Пример выполнения подготовленного запроса
     с массивом для условия IN
    </title>
   <programlisting role="php">
<![CDATA[
<?php

/* Выполнение подготовленного запроса с массивом для условия IN */
$params = array(1, 21, 63, 171);

/* Создаём строку из знаков вопроса (?) в количестве, равном количеству параметров */
$place_holders = '?' . str_repeat(', ?', count($params) - 1);

/**
 * Пример подготавливает запрос с неименованными заполнителями (?),
 * количество которых совпадает с количеством значений в массиве $params. При выполнении
 * запроса метод заменит знаки вопроса элементами массива. Это не то же
 * самое, что вызывать метод PDOStatement::bindParam(), в котором значения привязываются
 * по ссылке на переменную. Метод PDOStatement::execute() связывает параметры по значению
 */
$sth = $dbh->prepare("SELECT id, name FROM contacts WHERE id IN ($place_holders)");
$sth->execute($params);

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Отдельные драйверы требуют
    <link linkend="pdostatement.closecursor">закрытия курсора</link>
    перед запуском следующего запроса.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::bindParam</methodname></member>
    <member><methodname>PDOStatement::fetch</methodname></member>
    <member><methodname>PDOStatement::fetchAll</methodname></member>
    <member><methodname>PDOStatement::fetchColumn</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
