<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8708c464d3a380e2e728e05e3ea015e73fa8d371 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli.execute-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::execute_query</refname>
  <refname>mysqli_execute_query</refname>
  <refpurpose>Подготавливает, связывает параметры и выполняет SQL-запрос</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type class="union"><type>mysqli_result</type><type>bool</type></type><methodname>mysqli::execute_query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>params</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type class="union"><type>mysqli_result</type><type>bool</type></type><methodname>mysqli_execute_query</methodname>
   <methodparam><type>mysqli</type><parameter>mysql</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>params</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Подготавливает SQL-запрос, связывает параметры и выполняет его.
   Метод <methodname>mysqli::execute_query</methodname> является сокращением для
   <methodname>mysqli::prepare</methodname>,
   <methodname>mysqli_stmt::bind_param</methodname>,
   <methodname>mysqli_stmt::execute</methodname>
   и <methodname>mysqli_stmt::get_result</methodname>.
  </para>
  <para>
   У шаблона запроса может быть ноль или более маркеров параметров со знаком вопроса (<literal>?</literal>),
   которые также называются заполнителями.
   Значения параметров должны быть представлены в виде массива (&array;),
   переданного в параметр <parameter>params</parameter>.
  </para>
  <para>
   Подготовленный запрос создаётся под капотом, но он никогда не выводится за пределы функции.
   Невозможно получить доступ к свойствам запроса, как это можно сделать с объектом <classname>mysqli_stmt</classname>.
   Из-за этого ограничения информация о состоянии копируется в объект <classname>mysqli</classname>
   и доступна с помощью его методов, например, <function>mysqli_affected_rows</function> или <function>mysqli_error</function>.
  </para>
  <note>
   <para>
    В случае, когда функции <function>mysqli_execute_query</function> передаётся запрос,
    длина которого превышает <literal>max_allowed_packet</literal> сервера,
    возвращаемые коды ошибок различаются в зависимости от операционной системы.
    Поведение следующее:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      В Linux возвращается код ошибки 1153.
      Сообщение об ошибке означает, что получен пакет размером более <literal>max_allowed_packet</literal>
      (<quote>got a packet bigger than <literal>max_allowed_packet</literal> bytes</quote>).
     </para>
    </listitem>
    <listitem>
     <para>
      В Windows возвращается код ошибки 2006.
      Сообщение об ошибке означает, что сервер недоступен (<quote>server has gone away</quote>).
     </para>
    </listitem>
   </itemizedlist>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       Запрос в виде строки. Он должен состоять из одного SQL-запроса.
      </para>
      <para>
       SQL-запрос может содержать ноль или более маркеров параметров,
       представленных символами вопросительного знака (<literal>?</literal>) в соответствующих позициях.
      </para>
      <note>
       <para>
        Эти метки можно встраивать только в определённые места в выражении.
        Например, они разрешены в списке <literal>VALUES()</literal> выражения
        <literal>INSERT</literal> (чтобы задать значения столбцов для строки),
        или в операциях сравнения предложения
        <literal>WHERE</literal> для задания сравниваемого значения.
        Однако они не разрешены в качестве идентификаторов (таких как имена таблиц или столбцов).
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Необязательный список в виде массива (&array;) с таким количеством элементов,
       сколько связанных параметров в выполняемом SQL-запросе.
       Каждое значение рассматривается как строка (&string;).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает &false; в случае возникновения ошибки.
   Для успешных запросов, создающих набор результатов, таких как <literal>SELECT, SHOW, DESCRIBE</literal>
   или <literal>EXPLAIN</literal>, возвращает объект <classname>mysqli_result</classname>.
   Для других успешных запросов возвращается &true;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <methodname>mysqli::execute_query</methodname></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli('localhost', 'my_user', 'my_password', 'world');

$query = 'SELECT Name, District FROM City WHERE CountryCode=? ORDER BY Name LIMIT 5';
$result = $mysqli->execute_query($query, ['DEU']);
foreach ($result as $row) {
    printf("%s (%s)\n", $row["Name"], $row["District"]);
}
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = 'SELECT Name, District FROM City WHERE CountryCode=? ORDER BY Name LIMIT 5';
$result = mysqli_execute_query($link, $query, ['DEU']);
foreach ($result as $row) {
    printf("%s (%s)\n", $row["Name"], $row["District"]);
}
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Aachen (Nordrhein-Westfalen)
Augsburg (Baijeri)
Bergisch Gladbach (Nordrhein-Westfalen)
Berlin (Berliini)
Bielefeld (Nordrhein-Westfalen)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_prepare</function></member>
    <member><function>mysqli_stmt_execute</function></member>
    <member><function>mysqli_stmt_bind_param</function></member>
    <member><function>mysqli_stmt_get_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
