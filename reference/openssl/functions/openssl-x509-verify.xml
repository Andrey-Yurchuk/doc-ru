<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 497c40ac164d5873fd87f622dfdeb5206392b446 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.openssl-x509-verify" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_x509_verify</refname>
  <refpurpose>Проверяет цифровую подпись сертификата x509 публичным ключом</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>openssl_x509_verify</methodname>
   <methodparam><type class="union"><type>OpenSSLCertificate</type><type>string</type></type><parameter>certificate</parameter></methodparam>
   <methodparam><type class="union"><type>OpenSSLAsymmetricKey</type><type>OpenSSLCertificate</type><type>array</type><type>string</type></type><parameter>public_key</parameter></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>openssl_x509_verify</function> проверяет, подписан ли
   сертификат <parameter>certificate</parameter> закрытым ключом,
   который соответствует публичному ключу <parameter>public_key</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &openssl.param.x509;
    <varlistentry>
     <term><parameter>public_key</parameter></term>
     <listitem>
      <para>
       Экземпляр класса <classname>OpenSSLAsymmetricKey</classname> — ключ, который вернула функция
       <function>openssl_get_publickey</function>.
      </para>
      <para>
       Строка (<type>string</type>) — ключ в формате <acronym>PEM</acronym> вида: <literal>-----BEGIN PUBLIC KEY-----
       MIIBCgK...</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает 1, если подпись корректна, 0, если нет, и -1, если возникла ошибка.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Теперь параметр <parameter>certificate</parameter> принимает экземпляр класса <classname>OpenSSLCertificate</classname>;
       раньше принимался ресурс (&resource;) с типом <literal>OpenSSL X.509</literal>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Теперь параметр <parameter>public_key</parameter> принимает экземпляр класса <classname>OpenSSLAsymmetricKey</classname>
       или <classname>OpenSSLCertificate</classname>;
       раньше принимался ресурс (&resource;) с типом <literal>OpenSSL key</literal> или <literal>OpenSSL X.509</literal>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования функции <function>openssl_x509_verify</function> </title>
    <programlisting role="php">
<![CDATA[
<?php

$hostname = "news.php.net";

$ssloptions = array(
    "capture_peer_cert" => true,
    "capture_peer_cert_chain" => true,
    "allow_self_signed"=> false,
    "CN_match" => $hostname,
    "verify_peer" => true,
    "SNI_enabled" => true,
    "SNI_server_name" => $hostname,
);

$ctx = stream_context_create( array("ssl" => $ssloptions) );
$result = stream_socket_client("ssl://$hostname:443", $errno, $errstr, 30, STREAM_CLIENT_CONNECT, $ctx);
$cont = stream_context_get_params($result);
$x509 = $cont["options"]["ssl"]["peer_certificate"];
$certparsed = openssl_x509_parse($x509);

foreach($cont["options"]["ssl"]["peer_certificate_chain"] as $chaincert)
{
    $chainparsed = openssl_x509_parse($chaincert);
    $chain_public_key = openssl_get_publickey($chaincert);
    $r = openssl_x509_verify($x509, $chain_public_key);
    if ($r==1) {
        echo $certparsed['subject']['CN'];
        echo " was digitally signed by ";
        echo $chainparsed['subject']['CN']."\n";
    }
}

?>
]]>
    </programlisting>
   </example>

  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_verify</function></member>
    <member><function>openssl_get_publickey</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
