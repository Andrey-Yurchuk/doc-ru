<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 110ac43250fdb3531fe26d4d29292e33df7855e8 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.openssl-seal" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_seal</refname>
  <refpurpose>Запечатывает, или зашифровывает, данные</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>openssl_seal</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">sealed_data</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">encrypted_keys</parameter></methodparam>
   <methodparam><type>array</type><parameter>public_key</parameter></methodparam>
   <methodparam><type>string</type><parameter>cipher_algo</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">iv</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>openssl_seal</function> запечатывает, или шифрует, данные <parameter>data</parameter>
   алгоритмом <parameter>cipher_algo</parameter> со случайно сгенерированным секретным ключом.
   Затем функция шифрует ключ каждым открытым ключом в массиве <parameter>public_key</parameter>,
   и каждый зашифрованный ключ конверта возвращается массиве <parameter>encrypted_keys</parameter>.
   Это помогает отправлять запечатанные данные набору получателей (при условии, что открытые ключи получателей доступны).
   Каждый получатель получит запечатанные данные и ключ конверта, который функция зашифровала
   открытым ключом получателя. После чего функция генерирует вектор инициализации
   (англ. Initialization Vector, IV) и возвращает значение вектора в параметре <parameter>iv</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Данные, которые требуется запечатать.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sealed_data</parameter></term>
     <listitem>
      <para>
       Данные, которые запечатала функция.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encrypted_keys</parameter></term>
     <listitem>
      <para>
       Массив зашифрованных ключей.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>public_key</parameter></term>
     <listitem>
      <para>
       Массив экземпляров класса <classname>OpenSSLAsymmetricKey</classname>,
       которые содержат открытые ключи.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cipher_algo</parameter></term>
     <listitem>
      <para>
       Алгоритм шифрования.
       <caution>
        <simpara>
         До PHP 8.0 по умолчанию параметру назначали значение <literal>'RC4'</literal>,
         которое считают небезопасным. Настоятельно рекомендуют явно указывать безопасный
         метод шифрования.
        </simpara>
       </caution>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      <para>
       Вектор инициализации для расшифровки данных <parameter>data</parameter>. Параметр устанавливают,
       только если методу шифрования требуется вектор инициализации. Значение вектора узнают путём вызова
       функции <function>openssl_cipher_iv_length</function> с алгоритмом шифрования <parameter>cipher_algo</parameter>.
      </para>
      <caution>
       <simpara>
        Вектор инициализации невозможно указать явно. Значение, которое установили в параметре,
        перезаписывается значением, которое функция сгенерировала случайно.
       </simpara>
      </caution>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает длину запечатанных данных или &false;.
   В случае успешного выполнения параметр <parameter>sealed_data</parameter> будет содержать
   запечатанные данные, а параметр <parameter>encrypted_keys</parameter> — зашифрованные ключи.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Параметр <parameter>public_key</parameter> теперь принимает массив (&array;) экземпляров
       класса <classname>OpenSSLAsymmetricKey</classname>;
       раньше принимался массив (&array;) ресурсов (&resource;) с типом <literal>OpenSSL key</literal>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Параметр <parameter>cipher_algo</parameter> теперь обязательный параметр.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Параметр <parameter>iv</parameter> теперь принимает значение null.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования функции <function>openssl_seal</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Переменная $data содержит данные, которые требуется запечатать
$data = "test";

// Получаем и подготавливаем открытые ключи получателей
$pk1 = openssl_get_publickey("file://cert1.pem");
$pk2 = openssl_get_publickey("file://cert2.pem");

// Запечатываем сообщение; только владельцы ключей $pk1 и $pk2 расшифруют
// запечатанные данные $sealed ключами $ekeys[0] и $ekeys[1]
if (openssl_seal($data, $sealed, $ekeys, array($pk1, $pk2), 'AES256', $iv) > 0) {
    // Запечатанные данные $sealed и значения вектора инициализации $iv сохраняют,
    // чтобы позднее использовать значения при вызове функции openssl_open
    echo "success\n";
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_open</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
