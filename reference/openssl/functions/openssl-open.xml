<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 110ac43250fdb3531fe26d4d29292e33df7855e8 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.openssl-open" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>openssl_open</refname>
  <refpurpose>Открывает запечатанные данные</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>openssl_open</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter role="reference">output</parameter></methodparam>
   <methodparam><type>string</type><parameter>encrypted_key</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type class="union"><type>OpenSSLAsymmetricKey</type><type>OpenSSLCertificate</type><type>array</type><type>string</type></type><parameter>private_key</parameter></methodparam>
   <methodparam><type>string</type><parameter>cipher_algo</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>iv</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция <function>openssl_open</function> открывает, или дешифрует, данные <parameter>data</parameter>
   ключом конверта, который получает после расшифровки зашифрованного ключа <parameter>encrypted_key</parameter>
   открытым ключом <parameter>private_key</parameter>. Расшифровать данные
   функции помогают алгоритм шифрования <parameter>cipher_algo</parameter> и вектор инициализации <parameter>iv</parameter>.
   Вектор инициализации требуется, только если его запрашивает метод шифрования.
   Функция заполняет аргумент <parameter>output</parameter> данными, которые расшифровала.
   Функция генерирует ключ конверта, когда данные запечатали открытым ключом, который
   связан с закрытым ключом. Подробнее о запечатке, или шифровании, данных рассказывает описание функции <function>openssl_seal</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Запечатанные данные.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>output</parameter></term>
     <listitem>
      <para>
       Функция заполнит аргумент открытыми данными, если завершит работу без ошибок.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encrypted_key</parameter></term>
     <listitem>
      <para>
       Симметричный ключ шифрования, который расшифровывают закрытым ключом <parameter>private_key</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>private_key</parameter></term>
     <listitem>
      <para>
       Закрытый ключ для расшифровки зашифрованного ключа <parameter>encrypted_key</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cipher_algo</parameter></term>
     <listitem>
      <para>
       Метод шифрования для расшифровки данных <parameter>data</parameter>.
       <caution>
        <simpara>
         До PHP 8.0 по умолчанию параметру назначали значение <literal>'RC4'</literal>,
         которое считают небезопасным. Настоятельно рекомендуют явно указывать безопасный
         метод шифрования.
        </simpara>
       </caution>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      <para>
       Вектор инициализации для расшифровки данных <parameter>data</parameter>. Параметр устанавливают,
       только если методу шифрования требуется вектор инициализации. Значение вектора узнают путём вызова
       функции <function>openssl_cipher_iv_length</function> с алгоритмом шифрования <parameter>cipher_algo</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Параметр <parameter>private_key</parameter> теперь принимает экземпляр <classname>OpenSSLAsymmetricKey</classname>
       или <classname>OpenSSLCertificate</classname>;
       раньше принимался ресурс (&resource;) с типом <literal>OpenSSL key</literal> или <literal>OpenSSL X.509 CSR</literal>.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Параметр <parameter>cipher_algo</parameter> теперь обязателен.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример распечатки данных функцией <function>openssl_open</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Предположим, что переменные $sealed, $env_key и $iv содержат запечатанные данные,
// ключ конверта и вектор инициализации, которые прислал тот, кто запечатал данные

// Получаем закрытый ключ из файла private_key.pem
$pkey = openssl_get_privatekey("file://private_key.pem);

// Расшифровываем данные и сохраняем открытые данные в аргументе $open
if (openssl_open($sealed, $open, $env_key, $pkey, 'AES256', $iv)) {
    echo "Вот открытые данные: ", $open;
} else {
    echo "Не удалось открыть данные";
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_seal</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
