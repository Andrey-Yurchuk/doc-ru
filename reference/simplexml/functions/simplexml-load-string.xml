<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d2939d46110158f98ace5c20761c808b04c905d8 Maintainer: aur Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.simplexml-load-string" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>simplexml_load_string</refname>
  <refpurpose>
   Интерпретирует строку в XML-формате в объект
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>SimpleXMLElement</type><type>false</type></type><methodname>simplexml_load_string</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>class_name</parameter><initializer>SimpleXMLElement::class</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>namespace_or_prefix</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>is_prefix</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Функция получает правильно сформированную XML-строку и возвращает строку как объект.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Правильно сформированная XML-строка.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>class_name</parameter></term>
     <listitem>
      <para>
       Необязательный параметр, который заставляет функцию
       <function>simplexml_load_string</function> возвращать объект конкретного класса,
       который расширяет класс <type>SimpleXMLElement</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      &dom.parameter.options;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>namespace_or_prefix</parameter></term>
     <listitem>
      <para>
       Префикс пространства имён или URI-идентификатор.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_prefix</parameter></term>
     <listitem>
      <para>
       В параметр передают значение &true;, если в аргументе
       <parameter>namespace_or_prefix</parameter> указали префикс,
       или &false;, если указали URI-идентификатор; значение по умолчанию — &false;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Функция возвращает объект (<type>object</type>) класса <type>SimpleXMLElement</type>
   со свойствами, которые содержат данные, которые хранятся внутри XML-документа,&return.falseforfailure;.
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="errors"><!-- {{{ -->
  &reftitle.errors;
  <para>
   Функция генерирует сообщение об ошибке уровня <constant>E_WARNING</constant>
   для каждой ошибки, которую нашла в XML-данных.
  </para>
  <tip>
   <para>
    Для подавления ошибок в XML-данных вызывают функцию
    <function>libxml_use_internal_errors</function>, и функцию
    <function>libxml_get_errors</function> для перебора ошибок в будущем.
   </para>
  </tip>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример интерпретации XML-строки</title>
    <programlisting role="php">
<![CDATA[
<?php

$string = <<<XML
<?xml version='1.0'?>
<document>
 <title>Что 40?</title>
 <from>Джо</from>
 <to>Джейн</to>
 <body>
  Я знаю, что это - ответ. В чем заключается вопрос?
 </body>
</document>
XML;

$xml = simplexml_load_string($string);

print_r($xml);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
SimpleXMLElement Object
(
  [title] => Что 40?
  [from] => Джо
  [to] => Джейн
  [body] =>
   Я знаю, что это - ответ. В чем заключается вопрос?
)
]]>
    </screen>
    <simpara>
     После интерпретации строки в XML-формате в объект возможны обращения
     к XML-элементам синтаксисом <literal>$xml-&gt;body</literal>
     и вызовы методов объекта.
    </simpara>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>simplexml_load_file</function></member>
    <member><methodname>SimpleXMLElement::__construct</methodname></member>
    <member><xref linkend="simplexml.examples-errors"/></member>
    <member><function>libxml_use_internal_errors</function></member>
    <member><xref linkend="simplexml.examples-basic"/></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
