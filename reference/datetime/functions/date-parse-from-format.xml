<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d13f5e4b45f699eb855a5e84736aeda2ebd142a Maintainer: tmn Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.date-parse-from-format" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>date_parse_from_format</refname>
  <refpurpose>
   Получение информации о заданной в определённом формате дате
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>date_parse_from_format</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>datetime</parameter></methodparam>
  </methodsynopsis>
  <para>
   Возвращает ассоциативный массив с подробной информацией о заданной дате/времени.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       Документацию по параметру <parameter>format</parameter>, смотрите в документации
       к методу <function>DateTimeImmutable::createFromFormat</function>.
       Применяются те же правила.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>datetime</parameter></term>
     <listitem>
      <para>
       Строка, представляющая дату/время.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает ассоциативный массив с подробной информацией о заданной дате/времени.
  </para>
  <para>
   Возвращаемый массив содержит ключи <literal>year</literal>,
   <literal>month</literal>, <literal>day</literal>, <literal>hour</literal>,
   <literal>minute</literal>, <literal>second</literal>,
   <literal>fraction</literal> и <literal>is_localtime</literal>.
  </para>
  <para>
   Если присутствует <literal>is_localtime</literal>, то <literal>zone_type</literal> указывает тип часового пояса.
   Для типа <literal>1</literal> (смещение UTC) указывается <literal>zone</literal>, добавляется поле <literal>is_dst</literal>;
   для типа <literal>2</literal> (аббревиатура) добавляются поля <literal>tz_abbr</literal> и <literal>is_dst</literal>;
   для типа <literal>3</literal> (идентификатор часового пояса) добавляются поля <literal>tz_abbr</literal> и <literal>tz_id</literal>.
  </para>
  <para>
   Если в параметре <parameter>datetime</parameter> присутствуют элементы относительного времени,
   например, <literal>+3 days</literal>, то возвращаемый массив включает вложенный массив с ключом <literal>relative</literal>.
   Этот массив затем содержит ключи
   <literal>year</literal>, <literal>month</literal>, <literal>day</literal>,
   <literal>hour</literal>, <literal>minute</literal>,
   <literal>second</literal>, и, если необходимо, <literal>weekday</literal> и
   <literal>weekdays</literal>, в зависимости от переданной строки.
  </para>
  <para>
   Массив включает поля <literal>warning_count</literal> и <literal>warnings</literal>.
   Первое из них указывает, сколько было предупреждений.
   Ключи элементов массива <literal>warnings</literal> указывают на позицию в данном параметре <parameter>datetime</parameter>,
   где произошло предупреждение, а строковое значение описывает само предупреждение.
  </para>
  <para>
   Массив также содержит поля <literal>error_count</literal> и <literal>errors</literal>.
   Первое из них указывает, сколько ошибок было найдено.
   Ключи элементов массива <literal>errors</literal> указывают на позицию в данном параметре <parameter>datetime</parameter>,
   где произошла ошибка, а строковое значение описывает саму ошибку.
  </para>
  <warning>
   <para>
    Количество элементов массивов <literal>warnings</literal> и
    <literal>errors</literal> может быть меньше, чем
    <literal>warning_count</literal> или <literal>error_count</literal>,
    если они возникли в одной и той же позиции.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Функция выбрасывает <exceptionname>ValueError</exceptionname>,
   если параметр <parameter>datetime</parameter> содержит нулевые байты.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.21, 8.1.8, 8.2.0</entry>
       <entry>
        Теперь при передаче нулевых байтов в параметр <parameter>datetime</parameter>
        выбрасывается <exceptionname>ValueError</exceptionname>,
        который ранее молча игнорировался.
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        Элемент <literal>zone</literal> возвращаемого массива отображает теперь
        секунды вместо минут, а его знак инвертируется. Например,
        <literal>-120</literal> теперь будет <literal>7200</literal>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Пример использования <function>date_parse_from_format</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$date = "6.1.2009 13:00+01:00";
print_r(date_parse_from_format("j.n.Y H:iP", $date));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [year] => 2009
    [month] => 1
    [day] => 6
    [hour] => 13
    [minute] => 0
    [second] => 0
    [fraction] =>
    [warning_count] => 0
    [warnings] => Array
        (
        )

    [error_count] => 0
    [errors] => Array
        (
        )

    [is_localtime] => 1
    [zone_type] => 1
    [zone] => -60
    [is_dst] =>
)
]]>
    </screen>
   </example>
  </para>

  <para>
   <example>
    <title>Пример использования <function>date_parse_from_format</function> с предупреждениями</title>
    <programlisting role="php">
<![CDATA[
<?php
$date = "26 August 2022 22:30 pm";
$parsed = date_parse_from_format("j F Y G:i a", $date);

echo "Количество предупреждений: ", $parsed['warning_count'], "\n";
foreach ($parsed['warnings'] as $position => $message) {
    echo "\tПозиция {$position}: {$message}\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
    Количество предупреждений: 1
    Позиция 23: The parsed time was invalid
]>
    </screen>
   </example>
  </para>

  <para>
   <example>
    <title>Пример использования <function>date_parse_from_format</function> с ошибками</title>
    <programlisting role="php">
<![CDATA[
<?php

$date = "26 August 2022 CEST";
$parsed = date_parse_from_format("j F Y H:i", $date);

echo "Количество ошибок: ", $parsed['error_count'], "\n";
foreach ($parsed['errors'] as $position => $message) {
    echo "\tПозиция {$position}: {$message}\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Количество ошибок: 3
    Позиция 15: A two digit hour could not be found
    Позиция 19: Data missing
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>DateTimeImmutable::createFromFormat</function></member>
    <member><function>checkdate</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
