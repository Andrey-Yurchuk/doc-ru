<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1976eae0d815797af97a1e16c5cd90ffc2868395 Maintainer: rjhdby Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="intlchar.getpropertyname" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlChar::getPropertyName</refname>
  <refpurpose>Получает Unicode-имя свойства</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="IntlChar">
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>IntlChar::getPropertyName</methodname>
   <methodparam><type>int</type><parameter>property</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>IntlChar::LONG_PROPERTY_NAME</initializer></methodparam>
  </methodsynopsis>
  <para>
   Метод возвращает Unicode-имя свойства, как определяет файл базы данных Юникода — PropertyAliases.txt.
  </para>
  <para>
   Кроме того, метод сопоставляет свойство <constant>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</constant>
   с синтетическим именем "gcm" / "General_Category_Mask". Файл PropertyAliases.txt не содержит этих имён.
  </para>
  <para>
   Метод дополняет метод <function>IntlChar::getPropertyEnum</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>property</parameter></term>
    <listitem>
     &intl.property.parameter;
     <para>
      Флаг <constant>IntlChar::PROPERTY_INVALID_CODE</constant> лучше не использовать.
      Кроме того, метод вернёт &false;, если свойство <parameter>property</parameter> не выходит
      за пределы допустимого диапазона.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>type</parameter></term>
    <listitem>
     <para>
      Селектор, который определяет, какое имя требуется получить. Метод вернёт &false;, если селектор
      не входит в допустимый диапазон.
     </para>
     <para>
      Длинное имя есть у каждого значения. У большей части значений есть короткие имена, но не у каждого.
      Юникод разрешает дополнительные имена; если значению присвоили короткое название,
      метод вернёт значение <constant>IntlChar::LONG_PROPERTY_NAME</constant>
      с добавлением 1, 2 и т. д.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Метод возвращает имена свойств или &false;, если свойство <parameter>property</parameter>
   тип имён <parameter>type</parameter> выходят за пределы допустимого диапазона.
  </para>
  <para>
   Если тип названия <parameter>type</parameter> возвращает &false;, все бо́льшие значения
   типа названия <parameter>type</parameter> также вернут &false;, с одним исключением: если
   для <constant>IntlChar::SHORT_PROPERTY_NAME</constant> вернётся &false;,
   то <constant>IntlChar::LONG_PROPERTY_NAME</constant> и выше всё ещё смогут вернуть значения,
   которые будут отличаться от &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&intl.property.example;</title>
   <programlisting role="php">
<![CDATA[
<?php

var_dump(IntlChar::getPropertyName(IntlChar::PROPERTY_BIDI_CLASS));
var_dump(IntlChar::getPropertyName(IntlChar::PROPERTY_BIDI_CLASS, IntlChar::SHORT_PROPERTY_NAME));
var_dump(IntlChar::getPropertyName(IntlChar::PROPERTY_BIDI_CLASS, IntlChar::LONG_PROPERTY_NAME));
var_dump(IntlChar::getPropertyName(IntlChar::PROPERTY_BIDI_CLASS, IntlChar::LONG_PROPERTY_NAME + 1));

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
string(10) "Bidi_Class"
string(2) "bc"
string(10) "Bidi_Class"
bool(false)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>IntlChar::getPropertyEnum</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
